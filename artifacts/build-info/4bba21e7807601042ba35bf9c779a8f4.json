{"id":"4bba21e7807601042ba35bf9c779a8f4","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.0;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n *\n * _Available since v4.5._\n */\ninterface IVotes {\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\n     */\n    function getPastVotes(address account, uint256 blockNumber) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 blockNumber) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n"},"@openzeppelin/contracts/security/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/extensions/draft-ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./draft-IERC20Permit.sol\";\nimport \"../ERC20.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\nimport \"../../../utils/cryptography/EIP712.sol\";\nimport \"../../../utils/Counters.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712 {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private constant _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    /**\n     * @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n     * However, to ensure consistency with the upgradeable transpiler, we will continue\n     * to reserve a slot.\n     * @custom:oz-renamed-from _PERMIT_TYPEHASH\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private _PERMIT_TYPEHASH_DEPRECATED_SLOT;\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @dev See {IERC20Permit-permit}.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @dev See {IERC20Permit-nonces}.\n     */\n    function nonces(address owner) public view virtual override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @dev See {IERC20Permit-DOMAIN_SEPARATOR}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     *\n     * _Available since v4.1._\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        Counters.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/extensions/ERC20Votes.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./draft-ERC20Permit.sol\";\nimport \"../../../utils/math/Math.sol\";\nimport \"../../../governance/utils/IVotes.sol\";\nimport \"../../../utils/math/SafeCast.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\n\n/**\n * @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n * and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n *\n * NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n * power can be queried through the public accessors {getVotes} and {getPastVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n *\n * _Available since v4.2._\n */\nabstract contract ERC20Votes is IVotes, ERC20Permit {\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint224 votes;\n    }\n\n    bytes32 private constant _DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address => address) private _delegates;\n    mapping(address => Checkpoint[]) private _checkpoints;\n    Checkpoint[] private _totalSupplyCheckpoints;\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoint memory) {\n        return _checkpoints[account][pos];\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return SafeCast.toUint32(_checkpoints[account].length);\n    }\n\n    /**\n     * @dev Get the address `account` is currently delegating to.\n     */\n    function delegates(address account) public view virtual override returns (address) {\n        return _delegates[account];\n    }\n\n    /**\n     * @dev Gets the current votes balance for `account`\n     */\n    function getVotes(address account) public view virtual override returns (uint256) {\n        uint256 pos = _checkpoints[account].length;\n        return pos == 0 ? 0 : _checkpoints[account][pos - 1].votes;\n    }\n\n    /**\n     * @dev Retrieve the number of votes for `account` at the end of `blockNumber`.\n     *\n     * Requirements:\n     *\n     * - `blockNumber` must have been already mined\n     */\n    function getPastVotes(address account, uint256 blockNumber) public view virtual override returns (uint256) {\n        require(blockNumber < block.number, \"ERC20Votes: block not yet mined\");\n        return _checkpointsLookup(_checkpoints[account], blockNumber);\n    }\n\n    /**\n     * @dev Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances.\n     * It is but NOT the sum of all the delegated votes!\n     *\n     * Requirements:\n     *\n     * - `blockNumber` must have been already mined\n     */\n    function getPastTotalSupply(uint256 blockNumber) public view virtual override returns (uint256) {\n        require(blockNumber < block.number, \"ERC20Votes: block not yet mined\");\n        return _checkpointsLookup(_totalSupplyCheckpoints, blockNumber);\n    }\n\n    /**\n     * @dev Lookup a value in a list of (sorted) checkpoints.\n     */\n    function _checkpointsLookup(Checkpoint[] storage ckpts, uint256 blockNumber) private view returns (uint256) {\n        // We run a binary search to look for the earliest checkpoint taken after `blockNumber`.\n        //\n        // Initially we check if the block is recent to narrow the search range.\n        // During the loop, the index of the wanted checkpoint remains in the range [low-1, high).\n        // With each iteration, either `low` or `high` is moved towards the middle of the range to maintain the invariant.\n        // - If the middle checkpoint is after `blockNumber`, we look in [low, mid)\n        // - If the middle checkpoint is before or equal to `blockNumber`, we look in [mid+1, high)\n        // Once we reach a single value (when low == high), we've found the right checkpoint at the index high-1, if not\n        // out of bounds (in which case we're looking too far in the past and the result is 0).\n        // Note that if the latest checkpoint available is exactly for `blockNumber`, we end up with an index that is\n        // past the end of the array, so we technically don't find a checkpoint after `blockNumber`, but it works out\n        // the same.\n        uint256 length = ckpts.length;\n\n        uint256 low = 0;\n        uint256 high = length;\n\n        if (length > 5) {\n            uint256 mid = length - Math.sqrt(length);\n            if (_unsafeAccess(ckpts, mid).fromBlock > blockNumber) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(ckpts, mid).fromBlock > blockNumber) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        return high == 0 ? 0 : _unsafeAccess(ckpts, high - 1).votes;\n    }\n\n    /**\n     * @dev Delegate votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual override {\n        _delegate(_msgSender(), delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= expiry, \"ERC20Votes: signature expired\");\n        address signer = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(_DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        require(nonce == _useNonce(signer), \"ERC20Votes: invalid nonce\");\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1).\n     */\n    function _maxSupply() internal view virtual returns (uint224) {\n        return type(uint224).max;\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been increased.\n     */\n    function _mint(address account, uint256 amount) internal virtual override {\n        super._mint(account, amount);\n        require(totalSupply() <= _maxSupply(), \"ERC20Votes: total supply risks overflowing votes\");\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _add, amount);\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been decreased.\n     */\n    function _burn(address account, uint256 amount) internal virtual override {\n        super._burn(account, amount);\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _subtract, amount);\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual override {\n        super._afterTokenTransfer(from, to, amount);\n\n        _moveVotingPower(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Change delegation for `delegator` to `delegatee`.\n     *\n     * Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}.\n     */\n    function _delegate(address delegator, address delegatee) internal virtual {\n        address currentDelegate = delegates(delegator);\n        uint256 delegatorBalance = balanceOf(delegator);\n        _delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveVotingPower(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveVotingPower(\n        address src,\n        address dst,\n        uint256 amount\n    ) private {\n        if (src != dst && amount > 0) {\n            if (src != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[src], _subtract, amount);\n                emit DelegateVotesChanged(src, oldWeight, newWeight);\n            }\n\n            if (dst != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[dst], _add, amount);\n                emit DelegateVotesChanged(dst, oldWeight, newWeight);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        Checkpoint[] storage ckpts,\n        function(uint256, uint256) view returns (uint256) op,\n        uint256 delta\n    ) private returns (uint256 oldWeight, uint256 newWeight) {\n        uint256 pos = ckpts.length;\n\n        Checkpoint memory oldCkpt = pos == 0 ? Checkpoint(0, 0) : _unsafeAccess(ckpts, pos - 1);\n\n        oldWeight = oldCkpt.votes;\n        newWeight = op(oldWeight, delta);\n\n        if (pos > 0 && oldCkpt.fromBlock == block.number) {\n            _unsafeAccess(ckpts, pos - 1).votes = SafeCast.toUint224(newWeight);\n        } else {\n            ckpts.push(Checkpoint({fromBlock: SafeCast.toUint32(block.number), votes: SafeCast.toUint224(newWeight)}));\n        }\n    }\n\n    function _add(uint256 a, uint256 b) private pure returns (uint256) {\n        return a + b;\n    }\n\n    function _subtract(uint256 a, uint256 b) private pure returns (uint256) {\n        return a - b;\n    }\n\n    function _unsafeAccess(Checkpoint[] storage ckpts, uint256 pos) private pure returns (Checkpoint storage result) {\n        assembly {\n            mstore(0, ckpts.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256, /* firstTokenId */\n        uint256 batchSize\n    ) internal virtual {\n        if (batchSize > 1) {\n            if (from != address(0)) {\n                _balances[from] -= batchSize;\n            }\n            if (to != address(0)) {\n                _balances[to] += batchSize;\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n    }\n\n    /**\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\n     * the storage mapping.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSA.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * _Available since v3.4._\n */\nabstract contract EIP712 {\n    /* solhint-disable var-name-mixedcase */\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _CACHED_DOMAIN_SEPARATOR;\n    uint256 private immutable _CACHED_CHAIN_ID;\n    address private immutable _CACHED_THIS;\n\n    bytes32 private immutable _HASHED_NAME;\n    bytes32 private immutable _HASHED_VERSION;\n    bytes32 private immutable _TYPE_HASH;\n\n    /* solhint-enable var-name-mixedcase */\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        bytes32 hashedName = keccak256(bytes(name));\n        bytes32 hashedVersion = keccak256(bytes(version));\n        bytes32 typeHash = keccak256(\n            \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n        );\n        _HASHED_NAME = hashedName;\n        _HASHED_VERSION = hashedVersion;\n        _CACHED_CHAIN_ID = block.chainid;\n        _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(typeHash, hashedName, hashedVersion);\n        _CACHED_THIS = address(this);\n        _TYPE_HASH = typeHash;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _CACHED_THIS && block.chainid == _CACHED_CHAIN_ID) {\n            return _CACHED_DOMAIN_SEPARATOR;\n        } else {\n            return _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION);\n        }\n    }\n\n    function _buildDomainSeparator(\n        bytes32 typeHash,\n        bytes32 nameHash,\n        bytes32 versionHash\n    ) private view returns (bytes32) {\n        return keccak256(abi.encode(typeHash, nameHash, versionHash, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 248 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 240 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 232 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 224 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 216 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 208 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 200 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 192 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 184 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 176 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 168 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 160 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 152 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 144 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 136 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 128 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 120 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 112 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 104 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 96 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 88 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 80 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 72 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 64 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 56 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 48 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 40 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 32 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 24 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 16 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 8 bits\");\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"contracts/SbfNFT.sol":{"content":"//Contract based on [https://docs.openzeppelin.com/contracts/3.x/erc721](https://docs.openzeppelin.com/contracts/3.x/erc721)\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\n\r\ncontract SbfNFT is ERC721URIStorage, Ownable {\r\n    using Counters for Counters.Counter;\r\n    Counters.Counter private _tokenIds;\r\n\r\n    constructor() ERC721(\"SBF Membership NFT\", \"SBF\") {}\r\n\r\n    function mintNFT(address recipient, string memory tokenURI)\r\n        public onlyOwner\r\n        returns (uint256)\r\n    {\r\n        _tokenIds.increment();\r\n\r\n        uint256 newItemId = _tokenIds.current();\r\n        _mint(recipient, newItemId);\r\n        _setTokenURI(newItemId, tokenURI);\r\n\r\n        return newItemId;\r\n    }\r\n}\r\n"},"contracts/SbfToken.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\";\r\n\r\ncontract SBFToken is ERC20, ERC20Burnable, Pausable, Ownable, ERC20Permit, ERC20Votes {\r\n    constructor() ERC20(\"SBFToken\", \"SBF\") ERC20Permit(\"SBFToken\") {\r\n        _mint(msg.sender, 1000000000 * 10 ** decimals());\r\n    }\r\n\r\n    function pause() public onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() public onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    function _beforeTokenTransfer(address from, address to, uint256 amount)\r\n        internal\r\n        whenNotPaused\r\n        override\r\n    {\r\n        super._beforeTokenTransfer(from, to, amount);\r\n    }\r\n\r\n    // The following functions are overrides required by Solidity.\r\n\r\n    function _afterTokenTransfer(address from, address to, uint256 amount)\r\n        internal\r\n        override(ERC20, ERC20Votes)\r\n    {\r\n        super._afterTokenTransfer(from, to, amount);\r\n    }\r\n\r\n    function _mint(address to, uint256 amount)\r\n        internal\r\n        override(ERC20, ERC20Votes)\r\n    {\r\n        super._mint(to, amount);\r\n    }\r\n\r\n    function _burn(address account, uint256 amount)\r\n        internal\r\n        override(ERC20, ERC20Votes)\r\n    {\r\n        super._burn(account, amount);\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[3520],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":3521,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":3520,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,3520],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nameLocation":"1840:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nameLocation":"2090:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0","usedErrors":[]}],"src":"102:2521:0"},"id":0},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[190]},"id":191,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotes","contractDependencies":[],"contractKind":"interface","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"135:132:1","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n _Available since v4.5._"},"fullyImplemented":false,"id":190,"linearizedBaseContracts":[190],"name":"IVotes","nameLocation":"278:6:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"291:71:1","text":" @dev Emitted when an account changes their delegate."},"id":124,"name":"DelegateChanged","nameLocation":"373:15:1","nodeType":"EventDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"405:9:1","nodeType":"VariableDeclaration","scope":124,"src":"389:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"389:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":120,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"432:12:1","nodeType":"VariableDeclaration","scope":124,"src":"416:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":119,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":122,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"462:10:1","nodeType":"VariableDeclaration","scope":124,"src":"446:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":121,"name":"address","nodeType":"ElementaryTypeName","src":"446:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"388:85:1"},"src":"367:107:1"},{"anonymous":false,"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"480:124:1","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes."},"id":133,"name":"DelegateVotesChanged","nameLocation":"615:20:1","nodeType":"EventDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"652:8:1","nodeType":"VariableDeclaration","scope":133,"src":"636:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":129,"indexed":false,"mutability":"mutable","name":"previousBalance","nameLocation":"670:15:1","nodeType":"VariableDeclaration","scope":133,"src":"662:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":131,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"695:10:1","nodeType":"VariableDeclaration","scope":133,"src":"687:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:71:1"},"src":"609:98:1"},{"documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"713:79:1","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":141,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"806:8:1","nodeType":"FunctionDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"mutability":"mutable","name":"account","nameLocation":"823:7:1","nodeType":"VariableDeclaration","scope":141,"src":"815:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":135,"name":"address","nodeType":"ElementaryTypeName","src":"815:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"814:17:1"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":141,"src":"855:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"855:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"854:9:1"},"scope":190,"src":"797:67:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":142,"nodeType":"StructuredDocumentation","src":"870:114:1","text":" @dev Returns the amount of votes that `account` had at the end of a past block (`blockNumber`)."},"functionSelector":"3a46b1a8","id":151,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"998:12:1","nodeType":"FunctionDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"account","nameLocation":"1019:7:1","nodeType":"VariableDeclaration","scope":151,"src":"1011:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"1011:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"blockNumber","nameLocation":"1036:11:1","nodeType":"VariableDeclaration","scope":151,"src":"1028:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":145,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:38:1"},"returnParameters":{"id":150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":151,"src":"1072:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":148,"name":"uint256","nodeType":"ElementaryTypeName","src":"1072:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1071:9:1"},"scope":190,"src":"989:92:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"1087:365:1","text":" @dev Returns the total supply of votes available at the end of a past block (`blockNumber`).\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":159,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1466:18:1","nodeType":"FunctionDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"mutability":"mutable","name":"blockNumber","nameLocation":"1493:11:1","nodeType":"VariableDeclaration","scope":159,"src":"1485:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":153,"name":"uint256","nodeType":"ElementaryTypeName","src":"1485:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1484:21:1"},"returnParameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"1529:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1529:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1528:9:1"},"scope":190,"src":"1457:81:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"1544:71:1","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":167,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1629:9:1","nodeType":"FunctionDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"account","nameLocation":"1647:7:1","nodeType":"VariableDeclaration","scope":167,"src":"1639:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1639:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1638:17:1"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"1679:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"1679:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1678:9:1"},"scope":190,"src":"1620:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"1694:71:1","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":173,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"1779:8:1","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"delegatee","nameLocation":"1796:9:1","nodeType":"VariableDeclaration","scope":173,"src":"1788:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"1788:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1787:19:1"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[],"src":"1815:0:1"},"scope":190,"src":"1770:46:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"1822:67:1","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":189,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"1903:13:1","nodeType":"FunctionDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"delegatee","nameLocation":"1934:9:1","nodeType":"VariableDeclaration","scope":189,"src":"1926:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"1926:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"nonce","nameLocation":"1961:5:1","nodeType":"VariableDeclaration","scope":189,"src":"1953:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"expiry","nameLocation":"1984:6:1","nodeType":"VariableDeclaration","scope":189,"src":"1976:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"1976:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"v","nameLocation":"2006:1:1","nodeType":"VariableDeclaration","scope":189,"src":"2000:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":181,"name":"uint8","nodeType":"ElementaryTypeName","src":"2000:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"r","nameLocation":"2025:1:1","nodeType":"VariableDeclaration","scope":189,"src":"2017:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2017:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"s","nameLocation":"2044:1:1","nodeType":"VariableDeclaration","scope":189,"src":"2036:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2036:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1916:135:1"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[],"src":"2060:0:1"},"scope":190,"src":"1894:167:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":191,"src":"268:1795:1","usedErrors":[]}],"src":"110:1954:1"},"id":1},"@openzeppelin/contracts/security/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","exportedSymbols":{"Context":[3520],"Pausable":[298]},"id":299,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":192,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":193,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":299,"sourceUnit":3521,"src":"130:30:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":195,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":3520,"src":"632:7:2"},"id":196,"nodeType":"InheritanceSpecifier","src":"632:7:2"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":194,"nodeType":"StructuredDocumentation","src":"162:439:2","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":298,"linearizedBaseContracts":[298,3520],"name":"Pausable","nameLocation":"620:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"646:73:2","text":" @dev Emitted when the pause is triggered by `account`."},"id":201,"name":"Paused","nameLocation":"730:6:2","nodeType":"EventDefinition","parameters":{"id":200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":199,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"745:7:2","nodeType":"VariableDeclaration","scope":201,"src":"737:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"736:17:2"},"src":"724:30:2"},{"anonymous":false,"documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"760:70:2","text":" @dev Emitted when the pause is lifted by `account`."},"id":206,"name":"Unpaused","nameLocation":"841:8:2","nodeType":"EventDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"858:7:2","nodeType":"VariableDeclaration","scope":206,"src":"850:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":203,"name":"address","nodeType":"ElementaryTypeName","src":"850:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"849:17:2"},"src":"835:32:2"},{"constant":false,"id":208,"mutability":"mutable","name":"_paused","nameLocation":"886:7:2","nodeType":"VariableDeclaration","scope":298,"src":"873:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":207,"name":"bool","nodeType":"ElementaryTypeName","src":"873:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":216,"nodeType":"Block","src":"986:32:2","statements":[{"expression":{"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":212,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"996:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1006:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"996:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":215,"nodeType":"ExpressionStatement","src":"996:15:2"}]},"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"900:67:2","text":" @dev Initializes the contract in unpaused state."},"id":217,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"983:2:2"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[],"src":"986:0:2"},"scope":298,"src":"972:46:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":224,"nodeType":"Block","src":"1229:47:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":220,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"1239:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1239:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":222,"nodeType":"ExpressionStatement","src":"1239:19:2"},{"id":223,"nodeType":"PlaceholderStatement","src":"1268:1:2"}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"1024:175:2","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":225,"name":"whenNotPaused","nameLocation":"1213:13:2","nodeType":"ModifierDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[],"src":"1226:2:2"},"src":"1204:72:2","virtual":false,"visibility":"internal"},{"body":{"id":232,"nodeType":"Block","src":"1476:44:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":228,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"1486:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1486:16:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":230,"nodeType":"ExpressionStatement","src":"1486:16:2"},{"id":231,"nodeType":"PlaceholderStatement","src":"1512:1:2"}]},"documentation":{"id":226,"nodeType":"StructuredDocumentation","src":"1282:167:2","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":233,"name":"whenPaused","nameLocation":"1463:10:2","nodeType":"ModifierDefinition","parameters":{"id":227,"nodeType":"ParameterList","parameters":[],"src":"1473:2:2"},"src":"1454:66:2","virtual":false,"visibility":"internal"},{"body":{"id":241,"nodeType":"Block","src":"1668:31:2","statements":[{"expression":{"id":239,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"1685:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":238,"id":240,"nodeType":"Return","src":"1678:14:2"}]},"documentation":{"id":234,"nodeType":"StructuredDocumentation","src":"1526:84:2","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":242,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1624:6:2","nodeType":"FunctionDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[],"src":"1630:2:2"},"returnParameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":242,"src":"1662:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":236,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:2"},"scope":298,"src":"1615:84:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":253,"nodeType":"Block","src":"1818:55:2","statements":[{"expression":{"arguments":[{"id":249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1836:9:2","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":247,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"1837:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1837:8:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:18:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":246,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1828:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1828:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":252,"nodeType":"ExpressionStatement","src":"1828:38:2"}]},"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"1705:57:2","text":" @dev Throws if the contract is paused."},"id":254,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1776:17:2","nodeType":"FunctionDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[],"src":"1793:2:2"},"returnParameters":{"id":245,"nodeType":"ParameterList","parameters":[],"src":"1818:0:2"},"scope":298,"src":"1767:106:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":264,"nodeType":"Block","src":"1993:58:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":259,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"2011:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2011:8:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2021:22:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":258,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2003:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2003:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":263,"nodeType":"ExpressionStatement","src":"2003:41:2"}]},"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"1879:61:2","text":" @dev Throws if the contract is not paused."},"id":265,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"1954:14:2","nodeType":"FunctionDefinition","parameters":{"id":256,"nodeType":"ParameterList","parameters":[],"src":"1968:2:2"},"returnParameters":{"id":257,"nodeType":"ParameterList","parameters":[],"src":"1993:0:2"},"scope":298,"src":"1945:106:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":280,"nodeType":"Block","src":"2235:66:2","statements":[{"expression":{"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":271,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"2245:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2255:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2245:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":274,"nodeType":"ExpressionStatement","src":"2245:14:2"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"2281:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2281:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":275,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"2274:6:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2274:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"EmitStatement","src":"2269:25:2"}]},"documentation":{"id":266,"nodeType":"StructuredDocumentation","src":"2057:124:2","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":281,"implemented":true,"kind":"function","modifiers":[{"id":269,"kind":"modifierInvocation","modifierName":{"id":268,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":225,"src":"2221:13:2"},"nodeType":"ModifierInvocation","src":"2221:13:2"}],"name":"_pause","nameLocation":"2195:6:2","nodeType":"FunctionDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[],"src":"2201:2:2"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[],"src":"2235:0:2"},"scope":298,"src":"2186:115:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":296,"nodeType":"Block","src":"2481:69:2","statements":[{"expression":{"id":289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":287,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"2491:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2501:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2491:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":290,"nodeType":"ExpressionStatement","src":"2491:15:2"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":292,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"2530:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2530:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"2521:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2521:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":295,"nodeType":"EmitStatement","src":"2516:27:2"}]},"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"2307:121:2","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":297,"implemented":true,"kind":"function","modifiers":[{"id":285,"kind":"modifierInvocation","modifierName":{"id":284,"name":"whenPaused","nodeType":"IdentifierPath","referencedDeclaration":233,"src":"2470:10:2"},"nodeType":"ModifierInvocation","src":"2470:10:2"}],"name":"_unpause","nameLocation":"2442:8:2","nodeType":"FunctionDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[],"src":"2450:2:2"},"returnParameters":{"id":286,"nodeType":"ParameterList","parameters":[],"src":"2481:0:2"},"scope":298,"src":"2433:117:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":299,"src":"602:1950:2","usedErrors":[]}],"src":"105:2448:2"},"id":2},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[3520],"ERC20":[885],"IERC20":[963],"IERC20Metadata":[1729]},"id":886,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":300,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":301,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":886,"sourceUnit":964,"src":"130:22:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":302,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":886,"sourceUnit":1730,"src":"153:41:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":303,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":886,"sourceUnit":3521,"src":"195:33:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":305,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":3520,"src":"1419:7:3"},"id":306,"nodeType":"InheritanceSpecifier","src":"1419:7:3"},{"baseName":{"id":307,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":963,"src":"1428:6:3"},"id":308,"nodeType":"InheritanceSpecifier","src":"1428:6:3"},{"baseName":{"id":309,"name":"IERC20Metadata","nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"1436:14:3"},"id":310,"nodeType":"InheritanceSpecifier","src":"1436:14:3"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"230:1170:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":885,"linearizedBaseContracts":[885,1729,963,3520],"name":"ERC20","nameLocation":"1410:5:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":314,"mutability":"mutable","name":"_balances","nameLocation":"1493:9:3","nodeType":"VariableDeclaration","scope":885,"src":"1457:45:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":313,"keyType":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"1465:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1457:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"1476:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":320,"mutability":"mutable","name":"_allowances","nameLocation":"1565:11:3","nodeType":"VariableDeclaration","scope":885,"src":"1509:67:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":319,"keyType":{"id":315,"name":"address","nodeType":"ElementaryTypeName","src":"1517:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1509:47:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":318,"keyType":{"id":316,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1528:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":322,"mutability":"mutable","name":"_totalSupply","nameLocation":"1599:12:3","nodeType":"VariableDeclaration","scope":885,"src":"1583:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1583:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":324,"mutability":"mutable","name":"_name","nameLocation":"1633:5:3","nodeType":"VariableDeclaration","scope":885,"src":"1618:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":323,"name":"string","nodeType":"ElementaryTypeName","src":"1618:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":326,"mutability":"mutable","name":"_symbol","nameLocation":"1659:7:3","nodeType":"VariableDeclaration","scope":885,"src":"1644:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":325,"name":"string","nodeType":"ElementaryTypeName","src":"1644:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":342,"nodeType":"Block","src":"2032:57:3","statements":[{"expression":{"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":334,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"2042:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":335,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"2050:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2042:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":337,"nodeType":"ExpressionStatement","src":"2042:13:3"},{"expression":{"id":340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":338,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"2065:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":339,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"2075:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2065:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":341,"nodeType":"ExpressionStatement","src":"2065:17:3"}]},"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1673:298:3","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":343,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"mutability":"mutable","name":"name_","nameLocation":"2002:5:3","nodeType":"VariableDeclaration","scope":343,"src":"1988:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":328,"name":"string","nodeType":"ElementaryTypeName","src":"1988:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"symbol_","nameLocation":"2023:7:3","nodeType":"VariableDeclaration","scope":343,"src":"2009:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":330,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1987:44:3"},"returnParameters":{"id":333,"nodeType":"ParameterList","parameters":[],"src":"2032:0:3"},"scope":885,"src":"1976:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1716],"body":{"id":352,"nodeType":"Block","src":"2223:29:3","statements":[{"expression":{"id":350,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"2240:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":349,"id":351,"nodeType":"Return","src":"2233:12:3"}]},"documentation":{"id":344,"nodeType":"StructuredDocumentation","src":"2095:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":353,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2163:4:3","nodeType":"FunctionDefinition","overrides":{"id":346,"nodeType":"OverrideSpecifier","overrides":[],"src":"2190:8:3"},"parameters":{"id":345,"nodeType":"ParameterList","parameters":[],"src":"2167:2:3"},"returnParameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2208:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":347,"name":"string","nodeType":"ElementaryTypeName","src":"2208:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2207:15:3"},"scope":885,"src":"2154:98:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1722],"body":{"id":362,"nodeType":"Block","src":"2436:31:3","statements":[{"expression":{"id":360,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"2453:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":359,"id":361,"nodeType":"Return","src":"2446:14:3"}]},"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2258:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":363,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2374:6:3","nodeType":"FunctionDefinition","overrides":{"id":356,"nodeType":"OverrideSpecifier","overrides":[],"src":"2403:8:3"},"parameters":{"id":355,"nodeType":"ParameterList","parameters":[],"src":"2380:2:3"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"2421:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":357,"name":"string","nodeType":"ElementaryTypeName","src":"2421:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2420:15:3"},"scope":885,"src":"2365:102:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1728],"body":{"id":372,"nodeType":"Block","src":"3156:26:3","statements":[{"expression":{"hexValue":"3138","id":370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3173:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":369,"id":371,"nodeType":"Return","src":"3166:9:3"}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"2473:613:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":373,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3100:8:3","nodeType":"FunctionDefinition","overrides":{"id":366,"nodeType":"OverrideSpecifier","overrides":[],"src":"3131:8:3"},"parameters":{"id":365,"nodeType":"ParameterList","parameters":[],"src":"3108:2:3"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":373,"src":"3149:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":367,"name":"uint8","nodeType":"ElementaryTypeName","src":"3149:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3148:7:3"},"scope":885,"src":"3091:91:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[912],"body":{"id":382,"nodeType":"Block","src":"3312:36:3","statements":[{"expression":{"id":380,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"3329:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":379,"id":381,"nodeType":"Return","src":"3322:19:3"}]},"documentation":{"id":374,"nodeType":"StructuredDocumentation","src":"3188:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":383,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3251:11:3","nodeType":"FunctionDefinition","overrides":{"id":376,"nodeType":"OverrideSpecifier","overrides":[],"src":"3285:8:3"},"parameters":{"id":375,"nodeType":"ParameterList","parameters":[],"src":"3262:2:3"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":383,"src":"3303:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"3303:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3302:9:3"},"scope":885,"src":"3242:106:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[920],"body":{"id":396,"nodeType":"Block","src":"3489:42:3","statements":[{"expression":{"baseExpression":{"id":392,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"3506:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":394,"indexExpression":{"id":393,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"3516:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3506:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":391,"id":395,"nodeType":"Return","src":"3499:25:3"}]},"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"3354:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":397,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3415:9:3","nodeType":"FunctionDefinition","overrides":{"id":388,"nodeType":"OverrideSpecifier","overrides":[],"src":"3462:8:3"},"parameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"account","nameLocation":"3433:7:3","nodeType":"VariableDeclaration","scope":397,"src":"3425:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"3425:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3424:17:3"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":397,"src":"3480:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"3480:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3479:9:3"},"scope":885,"src":"3406:125:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[930],"body":{"id":421,"nodeType":"Block","src":"3812:104:3","statements":[{"assignments":[409],"declarations":[{"constant":false,"id":409,"mutability":"mutable","name":"owner","nameLocation":"3830:5:3","nodeType":"VariableDeclaration","scope":421,"src":"3822:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"3822:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":412,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":410,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"3838:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3838:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3822:28:3"},{"expression":{"arguments":[{"id":414,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"3870:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":415,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"3877:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":416,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"3881:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":413,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"3860:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3860:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":418,"nodeType":"ExpressionStatement","src":"3860:28:3"},{"expression":{"hexValue":"74727565","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3905:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":407,"id":420,"nodeType":"Return","src":"3898:11:3"}]},"documentation":{"id":398,"nodeType":"StructuredDocumentation","src":"3537:185:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":422,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3736:8:3","nodeType":"FunctionDefinition","overrides":{"id":404,"nodeType":"OverrideSpecifier","overrides":[],"src":"3788:8:3"},"parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"to","nameLocation":"3753:2:3","nodeType":"VariableDeclaration","scope":422,"src":"3745:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"3745:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":402,"mutability":"mutable","name":"amount","nameLocation":"3765:6:3","nodeType":"VariableDeclaration","scope":422,"src":"3757:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":401,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3744:28:3"},"returnParameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":422,"src":"3806:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":405,"name":"bool","nodeType":"ElementaryTypeName","src":"3806:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3805:6:3"},"scope":885,"src":"3727:189:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[940],"body":{"id":439,"nodeType":"Block","src":"4072:51:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":433,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"4089:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":435,"indexExpression":{"id":434,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"4101:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":437,"indexExpression":{"id":436,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"4108:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":432,"id":438,"nodeType":"Return","src":"4082:34:3"}]},"documentation":{"id":423,"nodeType":"StructuredDocumentation","src":"3922:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":440,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3983:9:3","nodeType":"FunctionDefinition","overrides":{"id":429,"nodeType":"OverrideSpecifier","overrides":[],"src":"4045:8:3"},"parameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"owner","nameLocation":"4001:5:3","nodeType":"VariableDeclaration","scope":440,"src":"3993:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"3993:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"spender","nameLocation":"4016:7:3","nodeType":"VariableDeclaration","scope":440,"src":"4008:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":426,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3992:32:3"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":440,"src":"4063:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"4063:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4062:9:3"},"scope":885,"src":"3974:149:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[950],"body":{"id":464,"nodeType":"Block","src":"4520:108:3","statements":[{"assignments":[452],"declarations":[{"constant":false,"id":452,"mutability":"mutable","name":"owner","nameLocation":"4538:5:3","nodeType":"VariableDeclaration","scope":464,"src":"4530:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":451,"name":"address","nodeType":"ElementaryTypeName","src":"4530:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":455,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":453,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"4546:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4546:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4530:28:3"},{"expression":{"arguments":[{"id":457,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"4577:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":458,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"4584:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":459,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"4593:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":456,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"4568:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4568:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":461,"nodeType":"ExpressionStatement","src":"4568:32:3"},{"expression":{"hexValue":"74727565","id":462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4617:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":450,"id":463,"nodeType":"Return","src":"4610:11:3"}]},"documentation":{"id":441,"nodeType":"StructuredDocumentation","src":"4129:297:3","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":465,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4440:7:3","nodeType":"FunctionDefinition","overrides":{"id":447,"nodeType":"OverrideSpecifier","overrides":[],"src":"4496:8:3"},"parameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"spender","nameLocation":"4456:7:3","nodeType":"VariableDeclaration","scope":465,"src":"4448:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":442,"name":"address","nodeType":"ElementaryTypeName","src":"4448:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":445,"mutability":"mutable","name":"amount","nameLocation":"4473:6:3","nodeType":"VariableDeclaration","scope":465,"src":"4465:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":444,"name":"uint256","nodeType":"ElementaryTypeName","src":"4465:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4447:33:3"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":465,"src":"4514:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":448,"name":"bool","nodeType":"ElementaryTypeName","src":"4514:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4513:6:3"},"scope":885,"src":"4431:197:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[962],"body":{"id":497,"nodeType":"Block","src":"5323:153:3","statements":[{"assignments":[479],"declarations":[{"constant":false,"id":479,"mutability":"mutable","name":"spender","nameLocation":"5341:7:3","nodeType":"VariableDeclaration","scope":497,"src":"5333:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"5333:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":482,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":480,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"5351:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5351:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5333:30:3"},{"expression":{"arguments":[{"id":484,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"5389:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":485,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"5395:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":486,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"5404:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":483,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"5373:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5373:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":488,"nodeType":"ExpressionStatement","src":"5373:38:3"},{"expression":{"arguments":[{"id":490,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"5431:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":491,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"5437:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":492,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"5441:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":489,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"5421:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5421:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":494,"nodeType":"ExpressionStatement","src":"5421:27:3"},{"expression":{"hexValue":"74727565","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5465:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":477,"id":496,"nodeType":"Return","src":"5458:11:3"}]},"documentation":{"id":466,"nodeType":"StructuredDocumentation","src":"4634:551:3","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":498,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5199:12:3","nodeType":"FunctionDefinition","overrides":{"id":474,"nodeType":"OverrideSpecifier","overrides":[],"src":"5299:8:3"},"parameters":{"id":473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"from","nameLocation":"5229:4:3","nodeType":"VariableDeclaration","scope":498,"src":"5221:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"5221:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":470,"mutability":"mutable","name":"to","nameLocation":"5251:2:3","nodeType":"VariableDeclaration","scope":498,"src":"5243:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"5243:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":472,"mutability":"mutable","name":"amount","nameLocation":"5271:6:3","nodeType":"VariableDeclaration","scope":498,"src":"5263:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":471,"name":"uint256","nodeType":"ElementaryTypeName","src":"5263:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5211:72:3"},"returnParameters":{"id":477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":498,"src":"5317:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":475,"name":"bool","nodeType":"ElementaryTypeName","src":"5317:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5316:6:3"},"scope":885,"src":"5190:286:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":526,"nodeType":"Block","src":"5965:140:3","statements":[{"assignments":[509],"declarations":[{"constant":false,"id":509,"mutability":"mutable","name":"owner","nameLocation":"5983:5:3","nodeType":"VariableDeclaration","scope":526,"src":"5975:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"5975:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":512,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":510,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"5991:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5991:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5975:28:3"},{"expression":{"arguments":[{"id":514,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"6022:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":515,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"6029:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":517,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"6048:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":518,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"6055:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":516,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"6038:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6038:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":520,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"6066:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6038:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":513,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"6013:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6013:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":523,"nodeType":"ExpressionStatement","src":"6013:64:3"},{"expression":{"hexValue":"74727565","id":524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6094:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":507,"id":525,"nodeType":"Return","src":"6087:11:3"}]},"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"5482:384:3","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":527,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5880:17:3","nodeType":"FunctionDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":501,"mutability":"mutable","name":"spender","nameLocation":"5906:7:3","nodeType":"VariableDeclaration","scope":527,"src":"5898:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":503,"mutability":"mutable","name":"addedValue","nameLocation":"5923:10:3","nodeType":"VariableDeclaration","scope":527,"src":"5915:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":502,"name":"uint256","nodeType":"ElementaryTypeName","src":"5915:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5897:37:3"},"returnParameters":{"id":507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":527,"src":"5959:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":505,"name":"bool","nodeType":"ElementaryTypeName","src":"5959:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5958:6:3"},"scope":885,"src":"5871:234:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":567,"nodeType":"Block","src":"6691:328:3","statements":[{"assignments":[538],"declarations":[{"constant":false,"id":538,"mutability":"mutable","name":"owner","nameLocation":"6709:5:3","nodeType":"VariableDeclaration","scope":567,"src":"6701:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":537,"name":"address","nodeType":"ElementaryTypeName","src":"6701:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":541,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":539,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"6717:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6717:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6701:28:3"},{"assignments":[543],"declarations":[{"constant":false,"id":543,"mutability":"mutable","name":"currentAllowance","nameLocation":"6747:16:3","nodeType":"VariableDeclaration","scope":567,"src":"6739:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":542,"name":"uint256","nodeType":"ElementaryTypeName","src":"6739:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":548,"initialValue":{"arguments":[{"id":545,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"6776:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":546,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"6783:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":544,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"6766:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6766:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6739:52:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":550,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"6809:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":551,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6829:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6809:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6846:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6801:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6801:85:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":555,"nodeType":"ExpressionStatement","src":"6801:85:3"},{"id":564,"nodeType":"UncheckedBlock","src":"6896:95:3","statements":[{"expression":{"arguments":[{"id":557,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"6929:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":558,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"6936:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":559,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"6945:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":560,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6964:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6945:34:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":556,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"6920:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6920:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":563,"nodeType":"ExpressionStatement","src":"6920:60:3"}]},{"expression":{"hexValue":"74727565","id":565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7008:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":536,"id":566,"nodeType":"Return","src":"7001:11:3"}]},"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"6111:476:3","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":568,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6601:17:3","nodeType":"FunctionDefinition","parameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"mutability":"mutable","name":"spender","nameLocation":"6627:7:3","nodeType":"VariableDeclaration","scope":568,"src":"6619:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":529,"name":"address","nodeType":"ElementaryTypeName","src":"6619:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":532,"mutability":"mutable","name":"subtractedValue","nameLocation":"6644:15:3","nodeType":"VariableDeclaration","scope":568,"src":"6636:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":531,"name":"uint256","nodeType":"ElementaryTypeName","src":"6636:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6618:42:3"},"returnParameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":568,"src":"6685:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":534,"name":"bool","nodeType":"ElementaryTypeName","src":"6685:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6684:6:3"},"scope":885,"src":"6592:427:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":644,"nodeType":"Block","src":"7581:710:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":579,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"7599:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7607:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"7607:7:3","typeDescriptions":{}}},"id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7607:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7599:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7619:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":578,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7591:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7591:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":587,"nodeType":"ExpressionStatement","src":"7591:68:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":589,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"7677:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7691:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7683:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"7683:7:3","typeDescriptions":{}}},"id":593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7683:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7677:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7695:37:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":588,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7669:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7669:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":597,"nodeType":"ExpressionStatement","src":"7669:64:3"},{"expression":{"arguments":[{"id":599,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"7765:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":600,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"7771:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":601,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"7775:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":598,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"7744:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7744:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":603,"nodeType":"ExpressionStatement","src":"7744:38:3"},{"assignments":[605],"declarations":[{"constant":false,"id":605,"mutability":"mutable","name":"fromBalance","nameLocation":"7801:11:3","nodeType":"VariableDeclaration","scope":644,"src":"7793:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"7793:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":609,"initialValue":{"baseExpression":{"id":606,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"7815:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":608,"indexExpression":{"id":607,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"7825:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7815:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7793:37:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":611,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"7848:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":612,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"7863:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7848:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7871:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":610,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7840:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7840:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":616,"nodeType":"ExpressionStatement","src":"7840:72:3"},{"id":631,"nodeType":"UncheckedBlock","src":"7922:273:3","statements":[{"expression":{"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":617,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"7946:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":619,"indexExpression":{"id":618,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"7956:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7946:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":620,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"7964:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":621,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"7978:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7964:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7946:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":624,"nodeType":"ExpressionStatement","src":"7946:38:3"},{"expression":{"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":625,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"8161:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":627,"indexExpression":{"id":626,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"8171:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8161:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":628,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"8178:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8161:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":630,"nodeType":"ExpressionStatement","src":"8161:23:3"}]},{"eventCall":{"arguments":[{"id":633,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"8219:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"8225:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":635,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"8229:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":632,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"8210:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8210:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":637,"nodeType":"EmitStatement","src":"8205:31:3"},{"expression":{"arguments":[{"id":639,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"8267:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":640,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"8273:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":641,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"8277:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":638,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"8247:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8247:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":643,"nodeType":"ExpressionStatement","src":"8247:37:3"}]},"documentation":{"id":569,"nodeType":"StructuredDocumentation","src":"7025:443:3","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":645,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7482:9:3","nodeType":"FunctionDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"mutability":"mutable","name":"from","nameLocation":"7509:4:3","nodeType":"VariableDeclaration","scope":645,"src":"7501:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"7501:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":573,"mutability":"mutable","name":"to","nameLocation":"7531:2:3","nodeType":"VariableDeclaration","scope":645,"src":"7523:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"7523:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":575,"mutability":"mutable","name":"amount","nameLocation":"7551:6:3","nodeType":"VariableDeclaration","scope":645,"src":"7543:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":574,"name":"uint256","nodeType":"ElementaryTypeName","src":"7543:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7491:72:3"},"returnParameters":{"id":577,"nodeType":"ParameterList","parameters":[],"src":"7581:0:3"},"scope":885,"src":"7473:818:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":701,"nodeType":"Block","src":"8632:470:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":654,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"8650:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8669:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8661:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"8661:7:3","typeDescriptions":{}}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8661:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8650:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8673:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":653,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8642:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8642:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"8642:65:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8747:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":664,"name":"address","nodeType":"ElementaryTypeName","src":"8739:7:3","typeDescriptions":{}}},"id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8739:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":668,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"8751:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":669,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"8760:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":663,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"8718:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8718:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":671,"nodeType":"ExpressionStatement","src":"8718:49:3"},{"expression":{"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":672,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"8778:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":673,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"8794:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8778:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":675,"nodeType":"ExpressionStatement","src":"8778:22:3"},{"id":682,"nodeType":"UncheckedBlock","src":"8810:175:3","statements":[{"expression":{"id":680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":676,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"8946:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":678,"indexExpression":{"id":677,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"8956:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8946:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":679,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"8968:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8946:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":681,"nodeType":"ExpressionStatement","src":"8946:28:3"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9016:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9008:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":684,"name":"address","nodeType":"ElementaryTypeName","src":"9008:7:3","typeDescriptions":{}}},"id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9008:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":688,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"9020:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":689,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"9029:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":683,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"8999:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8999:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":691,"nodeType":"EmitStatement","src":"8994:42:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9075:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9067:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":693,"name":"address","nodeType":"ElementaryTypeName","src":"9067:7:3","typeDescriptions":{}}},"id":696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9067:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":697,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"9079:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":698,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"9088:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":692,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"9047:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9047:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":700,"nodeType":"ExpressionStatement","src":"9047:48:3"}]},"documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"8297:265:3","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":702,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8576:5:3","nodeType":"FunctionDefinition","parameters":{"id":651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"account","nameLocation":"8590:7:3","nodeType":"VariableDeclaration","scope":702,"src":"8582:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":647,"name":"address","nodeType":"ElementaryTypeName","src":"8582:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":650,"mutability":"mutable","name":"amount","nameLocation":"8607:6:3","nodeType":"VariableDeclaration","scope":702,"src":"8599:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":649,"name":"uint256","nodeType":"ElementaryTypeName","src":"8599:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8581:33:3"},"returnParameters":{"id":652,"nodeType":"ParameterList","parameters":[],"src":"8632:0:3"},"scope":885,"src":"8567:535:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":773,"nodeType":"Block","src":"9487:594:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":711,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"9505:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9524:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9516:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":712,"name":"address","nodeType":"ElementaryTypeName","src":"9516:7:3","typeDescriptions":{}}},"id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9516:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9505:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9528:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":710,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9497:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9497:67:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":719,"nodeType":"ExpressionStatement","src":"9497:67:3"},{"expression":{"arguments":[{"id":721,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"9596:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9613:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9605:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":722,"name":"address","nodeType":"ElementaryTypeName","src":"9605:7:3","typeDescriptions":{}}},"id":725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9605:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":726,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"9617:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":720,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"9575:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9575:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":728,"nodeType":"ExpressionStatement","src":"9575:49:3"},{"assignments":[730],"declarations":[{"constant":false,"id":730,"mutability":"mutable","name":"accountBalance","nameLocation":"9643:14:3","nodeType":"VariableDeclaration","scope":773,"src":"9635:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":729,"name":"uint256","nodeType":"ElementaryTypeName","src":"9635:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":734,"initialValue":{"baseExpression":{"id":731,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"9660:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":733,"indexExpression":{"id":732,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"9670:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9660:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9635:43:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":736,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"9696:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":737,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"9714:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9696:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9722:36:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":735,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9688:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9688:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":741,"nodeType":"ExpressionStatement","src":"9688:71:3"},{"id":754,"nodeType":"UncheckedBlock","src":"9769:194:3","statements":[{"expression":{"id":748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":742,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"9793:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":744,"indexExpression":{"id":743,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"9803:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9793:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":745,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"9814:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":746,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"9831:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9814:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9793:44:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":749,"nodeType":"ExpressionStatement","src":"9793:44:3"},{"expression":{"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":750,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"9930:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":751,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"9946:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9930:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":753,"nodeType":"ExpressionStatement","src":"9930:22:3"}]},{"eventCall":{"arguments":[{"id":756,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"9987:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10004:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9996:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":757,"name":"address","nodeType":"ElementaryTypeName","src":"9996:7:3","typeDescriptions":{}}},"id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9996:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":761,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"10008:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":755,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"9978:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9978:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":763,"nodeType":"EmitStatement","src":"9973:42:3"},{"expression":{"arguments":[{"id":765,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"10046:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10055:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"10055:7:3","typeDescriptions":{}}},"id":769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10055:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":770,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"10067:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":764,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"10026:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10026:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":772,"nodeType":"ExpressionStatement","src":"10026:48:3"}]},"documentation":{"id":703,"nodeType":"StructuredDocumentation","src":"9108:309:3","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":774,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9431:5:3","nodeType":"FunctionDefinition","parameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"mutability":"mutable","name":"account","nameLocation":"9445:7:3","nodeType":"VariableDeclaration","scope":774,"src":"9437:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"9437:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":707,"mutability":"mutable","name":"amount","nameLocation":"9462:6:3","nodeType":"VariableDeclaration","scope":774,"src":"9454:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"9454:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9436:33:3"},"returnParameters":{"id":709,"nodeType":"ParameterList","parameters":[],"src":"9487:0:3"},"scope":885,"src":"9422:659:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":818,"nodeType":"Block","src":"10617:257:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":785,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"10635:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10652:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10644:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"10644:7:3","typeDescriptions":{}}},"id":789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10644:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10635:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10656:38:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":784,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10627:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10627:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"ExpressionStatement","src":"10627:68:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":795,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"10713:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10732:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10724:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":796,"name":"address","nodeType":"ElementaryTypeName","src":"10724:7:3","typeDescriptions":{}}},"id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10724:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10713:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10736:36:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":794,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10705:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10705:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":803,"nodeType":"ExpressionStatement","src":"10705:68:3"},{"expression":{"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":804,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"10784:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":807,"indexExpression":{"id":805,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"10796:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10784:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":808,"indexExpression":{"id":806,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"10803:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10784:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":809,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"10814:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10784:36:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":811,"nodeType":"ExpressionStatement","src":"10784:36:3"},{"eventCall":{"arguments":[{"id":813,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"10844:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":814,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"10851:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":815,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":781,"src":"10860:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":812,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"10835:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10835:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":817,"nodeType":"EmitStatement","src":"10830:37:3"}]},"documentation":{"id":775,"nodeType":"StructuredDocumentation","src":"10087:412:3","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":819,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10513:8:3","nodeType":"FunctionDefinition","parameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"owner","nameLocation":"10539:5:3","nodeType":"VariableDeclaration","scope":819,"src":"10531:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":776,"name":"address","nodeType":"ElementaryTypeName","src":"10531:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":779,"mutability":"mutable","name":"spender","nameLocation":"10562:7:3","nodeType":"VariableDeclaration","scope":819,"src":"10554:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":778,"name":"address","nodeType":"ElementaryTypeName","src":"10554:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":781,"mutability":"mutable","name":"amount","nameLocation":"10587:6:3","nodeType":"VariableDeclaration","scope":819,"src":"10579:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":780,"name":"uint256","nodeType":"ElementaryTypeName","src":"10579:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10521:78:3"},"returnParameters":{"id":783,"nodeType":"ParameterList","parameters":[],"src":"10617:0:3"},"scope":885,"src":"10504:370:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":861,"nodeType":"Block","src":"11275:321:3","statements":[{"assignments":[830],"declarations":[{"constant":false,"id":830,"mutability":"mutable","name":"currentAllowance","nameLocation":"11293:16:3","nodeType":"VariableDeclaration","scope":861,"src":"11285:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":829,"name":"uint256","nodeType":"ElementaryTypeName","src":"11285:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":835,"initialValue":{"arguments":[{"id":832,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"11322:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":833,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"11329:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":831,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":440,"src":"11312:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11312:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11285:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":836,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"11351:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11376:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"11376:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":837,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11371:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11371:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11371:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11351:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":860,"nodeType":"IfStatement","src":"11347:243:3","trueBody":{"id":859,"nodeType":"Block","src":"11390:200:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":844,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"11412:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":845,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"11432:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11412:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11440:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":843,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11404:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11404:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":849,"nodeType":"ExpressionStatement","src":"11404:68:3"},{"id":858,"nodeType":"UncheckedBlock","src":"11486:94:3","statements":[{"expression":{"arguments":[{"id":851,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"11523:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":852,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"11530:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":853,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"11539:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":854,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"11558:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11539:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":850,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"11514:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11514:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":857,"nodeType":"ExpressionStatement","src":"11514:51:3"}]}]}}]},"documentation":{"id":820,"nodeType":"StructuredDocumentation","src":"10880:270:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":862,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11164:15:3","nodeType":"FunctionDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"mutability":"mutable","name":"owner","nameLocation":"11197:5:3","nodeType":"VariableDeclaration","scope":862,"src":"11189:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"11189:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":824,"mutability":"mutable","name":"spender","nameLocation":"11220:7:3","nodeType":"VariableDeclaration","scope":862,"src":"11212:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"11212:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":826,"mutability":"mutable","name":"amount","nameLocation":"11245:6:3","nodeType":"VariableDeclaration","scope":862,"src":"11237:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":825,"name":"uint256","nodeType":"ElementaryTypeName","src":"11237:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11179:78:3"},"returnParameters":{"id":828,"nodeType":"ParameterList","parameters":[],"src":"11275:0:3"},"scope":885,"src":"11155:441:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":872,"nodeType":"Block","src":"12299:2:3","statements":[]},"documentation":{"id":863,"nodeType":"StructuredDocumentation","src":"11602:573:3","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":873,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12189:20:3","nodeType":"FunctionDefinition","parameters":{"id":870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"from","nameLocation":"12227:4:3","nodeType":"VariableDeclaration","scope":873,"src":"12219:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"12219:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"to","nameLocation":"12249:2:3","nodeType":"VariableDeclaration","scope":873,"src":"12241:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"12241:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"amount","nameLocation":"12269:6:3","nodeType":"VariableDeclaration","scope":873,"src":"12261:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":868,"name":"uint256","nodeType":"ElementaryTypeName","src":"12261:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:72:3"},"returnParameters":{"id":871,"nodeType":"ParameterList","parameters":[],"src":"12299:0:3"},"scope":885,"src":"12180:121:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":883,"nodeType":"Block","src":"13007:2:3","statements":[]},"documentation":{"id":874,"nodeType":"StructuredDocumentation","src":"12307:577:3","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":884,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12898:19:3","nodeType":"FunctionDefinition","parameters":{"id":881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"mutability":"mutable","name":"from","nameLocation":"12935:4:3","nodeType":"VariableDeclaration","scope":884,"src":"12927:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":875,"name":"address","nodeType":"ElementaryTypeName","src":"12927:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":878,"mutability":"mutable","name":"to","nameLocation":"12957:2:3","nodeType":"VariableDeclaration","scope":884,"src":"12949:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"12949:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":880,"mutability":"mutable","name":"amount","nameLocation":"12977:6:3","nodeType":"VariableDeclaration","scope":884,"src":"12969:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"12969:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12917:72:3"},"returnParameters":{"id":882,"nodeType":"ParameterList","parameters":[],"src":"13007:0:3"},"scope":885,"src":"12889:120:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":886,"src":"1401:11610:3","usedErrors":[]}],"src":"105:12907:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[963]},"id":964,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":887,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":888,"nodeType":"StructuredDocumentation","src":"131:70:4","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":963,"linearizedBaseContracts":[963],"name":"IERC20","nameLocation":"212:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":889,"nodeType":"StructuredDocumentation","src":"225:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":897,"name":"Transfer","nameLocation":"394:8:4","nodeType":"EventDefinition","parameters":{"id":896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:4","nodeType":"VariableDeclaration","scope":897,"src":"403:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":890,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":893,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:4","nodeType":"VariableDeclaration","scope":897,"src":"425:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":892,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":895,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:4","nodeType":"VariableDeclaration","scope":897,"src":"445:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":894,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:4"},"src":"388:72:4"},{"anonymous":false,"documentation":{"id":898,"nodeType":"StructuredDocumentation","src":"466:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":906,"name":"Approval","nameLocation":"625:8:4","nodeType":"EventDefinition","parameters":{"id":905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:4","nodeType":"VariableDeclaration","scope":906,"src":"634:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":899,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":902,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:4","nodeType":"VariableDeclaration","scope":906,"src":"657:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":904,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:4","nodeType":"VariableDeclaration","scope":906,"src":"682:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":903,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:4"},"src":"619:78:4"},{"documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"703:66:4","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":912,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:4","nodeType":"FunctionDefinition","parameters":{"id":908,"nodeType":"ParameterList","parameters":[],"src":"794:2:4"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":912,"src":"820:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":909,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:4"},"scope":963,"src":"774:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"835:72:4","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":920,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:4","nodeType":"FunctionDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"account","nameLocation":"939:7:4","nodeType":"VariableDeclaration","scope":920,"src":"931:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:4"},"returnParameters":{"id":919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":920,"src":"971:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":917,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:4"},"scope":963,"src":"912:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"986:202:4","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":930,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:4","nodeType":"FunctionDefinition","parameters":{"id":926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"to","nameLocation":"1219:2:4","nodeType":"VariableDeclaration","scope":930,"src":"1211:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":922,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":925,"mutability":"mutable","name":"amount","nameLocation":"1231:6:4","nodeType":"VariableDeclaration","scope":930,"src":"1223:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":924,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:4"},"returnParameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":930,"src":"1257:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":927,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:4"},"scope":963,"src":"1193:70:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":931,"nodeType":"StructuredDocumentation","src":"1269:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":940,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:4","nodeType":"FunctionDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"owner","nameLocation":"1565:5:4","nodeType":"VariableDeclaration","scope":940,"src":"1557:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":935,"mutability":"mutable","name":"spender","nameLocation":"1580:7:4","nodeType":"VariableDeclaration","scope":940,"src":"1572:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:4"},"returnParameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":940,"src":"1612:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":937,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:4"},"scope":963,"src":"1538:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"1627:642:4","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":950,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:4","nodeType":"FunctionDefinition","parameters":{"id":946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"spender","nameLocation":"2299:7:4","nodeType":"VariableDeclaration","scope":950,"src":"2291:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":942,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":945,"mutability":"mutable","name":"amount","nameLocation":"2316:6:4","nodeType":"VariableDeclaration","scope":950,"src":"2308:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":944,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:4"},"returnParameters":{"id":949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":950,"src":"2342:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":947,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:4"},"scope":963,"src":"2274:74:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":951,"nodeType":"StructuredDocumentation","src":"2354:287:4","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":962,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:4","nodeType":"FunctionDefinition","parameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"from","nameLocation":"2685:4:4","nodeType":"VariableDeclaration","scope":962,"src":"2677:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":955,"mutability":"mutable","name":"to","nameLocation":"2707:2:4","nodeType":"VariableDeclaration","scope":962,"src":"2699:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"amount","nameLocation":"2727:6:4","nodeType":"VariableDeclaration","scope":962,"src":"2719:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":956,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:4"},"returnParameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":962,"src":"2758:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":959,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:4"},"scope":963,"src":"2646:118:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":964,"src":"202:2564:4","usedErrors":[]}],"src":"106:2661:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[3520],"ERC20":[885],"ERC20Burnable":[1007],"IERC20":[963],"IERC20Metadata":[1729]},"id":1008,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":965,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":966,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1008,"sourceUnit":886,"src":"149:22:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":967,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1008,"sourceUnit":3521,"src":"172:36:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":969,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":3520,"src":"454:7:5"},"id":970,"nodeType":"InheritanceSpecifier","src":"454:7:5"},{"baseName":{"id":971,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":885,"src":"463:5:5"},"id":972,"nodeType":"InheritanceSpecifier","src":"463:5:5"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"210:208:5","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":false,"id":1007,"linearizedBaseContracts":[1007,885,1729,963,3520],"name":"ERC20Burnable","nameLocation":"437:13:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":984,"nodeType":"Block","src":"623:44:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":979,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"639:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"639:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":981,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"653:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":978,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"633:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"633:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":983,"nodeType":"ExpressionStatement","src":"633:27:5"}]},"documentation":{"id":973,"nodeType":"StructuredDocumentation","src":"475:98:5","text":" @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":985,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"587:4:5","nodeType":"FunctionDefinition","parameters":{"id":976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":975,"mutability":"mutable","name":"amount","nameLocation":"600:6:5","nodeType":"VariableDeclaration","scope":985,"src":"592:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":974,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"591:16:5"},"returnParameters":{"id":977,"nodeType":"ParameterList","parameters":[],"src":"623:0:5"},"scope":1007,"src":"578:89:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1005,"nodeType":"Block","src":"1039:95:5","statements":[{"expression":{"arguments":[{"id":994,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"1065:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":995,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"1074:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1074:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":997,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"1088:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":993,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"1049:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1049:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":999,"nodeType":"ExpressionStatement","src":"1049:46:5"},{"expression":{"arguments":[{"id":1001,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"1111:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1002,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"1120:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1000,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"1105:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1105:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1004,"nodeType":"ExpressionStatement","src":"1105:22:5"}]},"documentation":{"id":986,"nodeType":"StructuredDocumentation","src":"673:295:5","text":" @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."},"functionSelector":"79cc6790","id":1006,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"982:8:5","nodeType":"FunctionDefinition","parameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":988,"mutability":"mutable","name":"account","nameLocation":"999:7:5","nodeType":"VariableDeclaration","scope":1006,"src":"991:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"991:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":990,"mutability":"mutable","name":"amount","nameLocation":"1016:6:5","nodeType":"VariableDeclaration","scope":1006,"src":"1008:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"1008:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"990:33:5"},"returnParameters":{"id":992,"nodeType":"ParameterList","parameters":[],"src":"1039:0:5"},"scope":1007,"src":"973:161:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1008,"src":"419:717:5","usedErrors":[]}],"src":"124:1013:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","exportedSymbols":{"Context":[3520],"Counters":[3594],"ECDSA":[4130],"EIP712":[4284],"ERC20":[885],"ERC20Permit":[1901],"ERC20Votes":[1704],"IERC20":[963],"IERC20Metadata":[1729],"IERC20Permit":[1937],"IVotes":[190],"Math":[5185],"SafeCast":[6726],"Strings":[3769]},"id":1705,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1009,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"121:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","file":"./draft-ERC20Permit.sol","id":1010,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1705,"sourceUnit":1902,"src":"146:33:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../../../utils/math/Math.sol","id":1011,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1705,"sourceUnit":5186,"src":"180:38:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","file":"../../../governance/utils/IVotes.sol","id":1012,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1705,"sourceUnit":191,"src":"219:46:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../../../utils/math/SafeCast.sol","id":1013,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1705,"sourceUnit":6727,"src":"266:42:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1014,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1705,"sourceUnit":4131,"src":"309:47:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1016,"name":"IVotes","nodeType":"IdentifierPath","referencedDeclaration":190,"src":"1285:6:6"},"id":1017,"nodeType":"InheritanceSpecifier","src":"1285:6:6"},{"baseName":{"id":1018,"name":"ERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":1901,"src":"1293:11:6"},"id":1019,"nodeType":"InheritanceSpecifier","src":"1293:11:6"}],"canonicalName":"ERC20Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"358:894:6","text":" @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n power can be queried through the public accessors {getVotes} and {getPastVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n _Available since v4.2._"},"fullyImplemented":false,"id":1704,"linearizedBaseContracts":[1704,1901,4284,1937,885,1729,963,3520,190],"name":"ERC20Votes","nameLocation":"1271:10:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Votes.Checkpoint","id":1024,"members":[{"constant":false,"id":1021,"mutability":"mutable","name":"fromBlock","nameLocation":"1346:9:6","nodeType":"VariableDeclaration","scope":1024,"src":"1339:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1020,"name":"uint32","nodeType":"ElementaryTypeName","src":"1339:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"votes","nameLocation":"1373:5:6","nodeType":"VariableDeclaration","scope":1024,"src":"1365:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1022,"name":"uint224","nodeType":"ElementaryTypeName","src":"1365:7:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint","nameLocation":"1318:10:6","nodeType":"StructDefinition","scope":1704,"src":"1311:74:6","visibility":"public"},{"constant":true,"id":1029,"mutability":"constant","name":"_DELEGATION_TYPEHASH","nameLocation":"1416:20:6","nodeType":"VariableDeclaration","scope":1704,"src":"1391:127:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1025,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1391:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1457:60:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":1026,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1447:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1447:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1033,"mutability":"mutable","name":"_delegates","nameLocation":"1561:10:6","nodeType":"VariableDeclaration","scope":1704,"src":"1525:46:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":1032,"keyType":{"id":1030,"name":"address","nodeType":"ElementaryTypeName","src":"1533:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1525:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"1544:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1039,"mutability":"mutable","name":"_checkpoints","nameLocation":"1618:12:6","nodeType":"VariableDeclaration","scope":1704,"src":"1577:53:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint[])"},"typeName":{"id":1038,"keyType":{"id":1034,"name":"address","nodeType":"ElementaryTypeName","src":"1585:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1577:32:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint[])"},"valueType":{"baseType":{"id":1036,"nodeType":"UserDefinedTypeName","pathNode":{"id":1035,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1024,"src":"1596:10:6"},"referencedDeclaration":1024,"src":"1596:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1024_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1037,"nodeType":"ArrayTypeName","src":"1596:12:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}}},"visibility":"private"},{"constant":false,"id":1043,"mutability":"mutable","name":"_totalSupplyCheckpoints","nameLocation":"1657:23:6","nodeType":"VariableDeclaration","scope":1704,"src":"1636:44:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1041,"nodeType":"UserDefinedTypeName","pathNode":{"id":1040,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1024,"src":"1636:10:6"},"referencedDeclaration":1024,"src":"1636:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1024_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1042,"nodeType":"ArrayTypeName","src":"1636:12:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"private"},{"body":{"id":1060,"nodeType":"Block","src":"1856:50:6","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1054,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"1873:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1056,"indexExpression":{"id":1055,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"1886:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1873:21:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1058,"indexExpression":{"id":1057,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"1895:3:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1873:26:6","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1024_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"functionReturnParameters":1053,"id":1059,"nodeType":"Return","src":"1866:33:6"}]},"documentation":{"id":1044,"nodeType":"StructuredDocumentation","src":"1687:66:6","text":" @dev Get the `pos`-th checkpoint for `account`."},"functionSelector":"f1127ed8","id":1061,"implemented":true,"kind":"function","modifiers":[],"name":"checkpoints","nameLocation":"1767:11:6","nodeType":"FunctionDefinition","parameters":{"id":1049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1046,"mutability":"mutable","name":"account","nameLocation":"1787:7:6","nodeType":"VariableDeclaration","scope":1061,"src":"1779:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"1779:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1048,"mutability":"mutable","name":"pos","nameLocation":"1803:3:6","nodeType":"VariableDeclaration","scope":1061,"src":"1796:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1047,"name":"uint32","nodeType":"ElementaryTypeName","src":"1796:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1778:29:6"},"returnParameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1061,"src":"1837:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1024_memory_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":1051,"nodeType":"UserDefinedTypeName","pathNode":{"id":1050,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1024,"src":"1837:10:6"},"referencedDeclaration":1024,"src":"1837:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1024_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"src":"1836:19:6"},"scope":1704,"src":"1758:148:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1077,"nodeType":"Block","src":"2059:71:6","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1071,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"2094:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1073,"indexExpression":{"id":1072,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"2107:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2094:21:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2094:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1069,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6726,"src":"2076:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6726_$","typeString":"type(library SafeCast)"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":5888,"src":"2076:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2076:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":1068,"id":1076,"nodeType":"Return","src":"2069:54:6"}]},"documentation":{"id":1062,"nodeType":"StructuredDocumentation","src":"1912:64:6","text":" @dev Get number of checkpoints for `account`."},"functionSelector":"6fcfff45","id":1078,"implemented":true,"kind":"function","modifiers":[],"name":"numCheckpoints","nameLocation":"1990:14:6","nodeType":"FunctionDefinition","parameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1064,"mutability":"mutable","name":"account","nameLocation":"2013:7:6","nodeType":"VariableDeclaration","scope":1078,"src":"2005:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1063,"name":"address","nodeType":"ElementaryTypeName","src":"2005:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2004:17:6"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1078,"src":"2051:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1066,"name":"uint32","nodeType":"ElementaryTypeName","src":"2051:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2050:8:6"},"scope":1704,"src":"1981:149:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[167],"body":{"id":1091,"nodeType":"Block","src":"2301:43:6","statements":[{"expression":{"baseExpression":{"id":1087,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"2318:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1089,"indexExpression":{"id":1088,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"2329:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2318:19:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1086,"id":1090,"nodeType":"Return","src":"2311:26:6"}]},"documentation":{"id":1079,"nodeType":"StructuredDocumentation","src":"2136:77:6","text":" @dev Get the address `account` is currently delegating to."},"functionSelector":"587cde1e","id":1092,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"2227:9:6","nodeType":"FunctionDefinition","overrides":{"id":1083,"nodeType":"OverrideSpecifier","overrides":[],"src":"2274:8:6"},"parameters":{"id":1082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1081,"mutability":"mutable","name":"account","nameLocation":"2245:7:6","nodeType":"VariableDeclaration","scope":1092,"src":"2237:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1080,"name":"address","nodeType":"ElementaryTypeName","src":"2237:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2236:17:6"},"returnParameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1092,"src":"2292:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"2292:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2291:9:6"},"scope":1704,"src":"2218:126:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[141],"body":{"id":1122,"nodeType":"Block","src":"2505:127:6","statements":[{"assignments":[1102],"declarations":[{"constant":false,"id":1102,"mutability":"mutable","name":"pos","nameLocation":"2523:3:6","nodeType":"VariableDeclaration","scope":1122,"src":"2515:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1101,"name":"uint256","nodeType":"ElementaryTypeName","src":"2515:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1107,"initialValue":{"expression":{"baseExpression":{"id":1103,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"2529:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1105,"indexExpression":{"id":1104,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"2542:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2529:21:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2529:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2515:42:6"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1108,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"2574:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2581:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2574:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"baseExpression":{"baseExpression":{"id":1112,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"2589:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1114,"indexExpression":{"id":1113,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"2602:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2589:21:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1118,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1115,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"2611:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2617:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2611:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2589:30:6","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1024_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"id":1119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1023,"src":"2589:36:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2574:51:6","trueExpression":{"hexValue":"30","id":1111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2585:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1100,"id":1121,"nodeType":"Return","src":"2567:58:6"}]},"documentation":{"id":1093,"nodeType":"StructuredDocumentation","src":"2350:68:6","text":" @dev Gets the current votes balance for `account`"},"functionSelector":"9ab24eb0","id":1123,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"2432:8:6","nodeType":"FunctionDefinition","overrides":{"id":1097,"nodeType":"OverrideSpecifier","overrides":[],"src":"2478:8:6"},"parameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"account","nameLocation":"2449:7:6","nodeType":"VariableDeclaration","scope":1123,"src":"2441:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"2441:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2440:17:6"},"returnParameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1123,"src":"2496:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1098,"name":"uint256","nodeType":"ElementaryTypeName","src":"2496:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2495:9:6"},"scope":1704,"src":"2423:209:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[151],"body":{"id":1149,"nodeType":"Block","src":"2932:158:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1135,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"2950:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1136,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2964:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"2964:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2950:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564","id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2978:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""},"value":"ERC20Votes: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""}],"id":1134,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2942:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2942:70:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1141,"nodeType":"ExpressionStatement","src":"2942:70:6"},{"expression":{"arguments":[{"baseExpression":{"id":1143,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"3048:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1145,"indexExpression":{"id":1144,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3061:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3048:21:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1146,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"3071:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1142,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"3029:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3029:54:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1133,"id":1148,"nodeType":"Return","src":"3022:61:6"}]},"documentation":{"id":1124,"nodeType":"StructuredDocumentation","src":"2638:182:6","text":" @dev Retrieve the number of votes for `account` at the end of `blockNumber`.\n Requirements:\n - `blockNumber` must have been already mined"},"functionSelector":"3a46b1a8","id":1150,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"2834:12:6","nodeType":"FunctionDefinition","overrides":{"id":1130,"nodeType":"OverrideSpecifier","overrides":[],"src":"2905:8:6"},"parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1126,"mutability":"mutable","name":"account","nameLocation":"2855:7:6","nodeType":"VariableDeclaration","scope":1150,"src":"2847:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1125,"name":"address","nodeType":"ElementaryTypeName","src":"2847:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"blockNumber","nameLocation":"2872:11:6","nodeType":"VariableDeclaration","scope":1150,"src":"2864:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"2864:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2846:38:6"},"returnParameters":{"id":1133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1150,"src":"2923:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1131,"name":"uint256","nodeType":"ElementaryTypeName","src":"2923:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2922:9:6"},"scope":1704,"src":"2825:265:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[159],"body":{"id":1172,"nodeType":"Block","src":"3465:160:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1160,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"3483:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1161,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3497:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"3497:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3483:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564","id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3511:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""},"value":"ERC20Votes: block not yet mined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","typeString":"literal_string \"ERC20Votes: block not yet mined\""}],"id":1159,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3475:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3475:70:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1166,"nodeType":"ExpressionStatement","src":"3475:70:6"},{"expression":{"arguments":[{"id":1168,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"3581:23:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1169,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"3606:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1167,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"3562:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3562:56:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1158,"id":1171,"nodeType":"Return","src":"3555:63:6"}]},"documentation":{"id":1151,"nodeType":"StructuredDocumentation","src":"3096:268:6","text":" @dev Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances.\n It is but NOT the sum of all the delegated votes!\n Requirements:\n - `blockNumber` must have been already mined"},"functionSelector":"8e539e8c","id":1173,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"3378:18:6","nodeType":"FunctionDefinition","overrides":{"id":1155,"nodeType":"OverrideSpecifier","overrides":[],"src":"3438:8:6"},"parameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1153,"mutability":"mutable","name":"blockNumber","nameLocation":"3405:11:6","nodeType":"VariableDeclaration","scope":1173,"src":"3397:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1152,"name":"uint256","nodeType":"ElementaryTypeName","src":"3397:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3396:21:6"},"returnParameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1173,"src":"3456:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"3456:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3455:9:6"},"scope":1704,"src":"3369:256:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1278,"nodeType":"Block","src":"3817:1750:6","statements":[{"assignments":[1186],"declarations":[{"constant":false,"id":1186,"mutability":"mutable","name":"length","nameLocation":"4904:6:6","nodeType":"VariableDeclaration","scope":1278,"src":"4896:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1185,"name":"uint256","nodeType":"ElementaryTypeName","src":"4896:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1189,"initialValue":{"expression":{"id":1187,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"4913:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4913:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4896:29:6"},{"assignments":[1191],"declarations":[{"constant":false,"id":1191,"mutability":"mutable","name":"low","nameLocation":"4944:3:6","nodeType":"VariableDeclaration","scope":1278,"src":"4936:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1190,"name":"uint256","nodeType":"ElementaryTypeName","src":"4936:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1193,"initialValue":{"hexValue":"30","id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4950:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4936:15:6"},{"assignments":[1195],"declarations":[{"constant":false,"id":1195,"mutability":"mutable","name":"high","nameLocation":"4969:4:6","nodeType":"VariableDeclaration","scope":1278,"src":"4961:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"4961:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1197,"initialValue":{"id":1196,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"4976:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4961:21:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1198,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"4997:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":1199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5006:1:6","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"4997:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1231,"nodeType":"IfStatement","src":"4993:244:6","trueBody":{"id":1230,"nodeType":"Block","src":"5009:228:6","statements":[{"assignments":[1202],"declarations":[{"constant":false,"id":1202,"mutability":"mutable","name":"mid","nameLocation":"5031:3:6","nodeType":"VariableDeclaration","scope":1230,"src":"5023:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1201,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1209,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1203,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"5037:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":1206,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"5056:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1204,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"5046:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5185_$","typeString":"type(library Math)"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":4689,"src":"5046:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5046:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5037:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5023:40:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1211,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"5095:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"id":1212,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"5102:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1210,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"5081:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1024_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5081:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1024_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1021,"src":"5081:35:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1215,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"5119:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5081:49:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1228,"nodeType":"Block","src":"5181:46:6","statements":[{"expression":{"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1222,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"5199:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1223,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"5205:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5211:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5205:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5199:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1227,"nodeType":"ExpressionStatement","src":"5199:13:6"}]},"id":1229,"nodeType":"IfStatement","src":"5077:150:6","trueBody":{"id":1221,"nodeType":"Block","src":"5132:43:6","statements":[{"expression":{"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1217,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"5150:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1218,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"5157:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5150:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1220,"nodeType":"ExpressionStatement","src":"5150:10:6"}]}}]}},{"body":{"id":1263,"nodeType":"Block","src":"5266:225:6","statements":[{"assignments":[1236],"declarations":[{"constant":false,"id":1236,"mutability":"mutable","name":"mid","nameLocation":"5288:3:6","nodeType":"VariableDeclaration","scope":1263,"src":"5280:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1235,"name":"uint256","nodeType":"ElementaryTypeName","src":"5280:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1242,"initialValue":{"arguments":[{"id":1239,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"5307:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1240,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"5312:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1237,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"5294:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5185_$","typeString":"type(library Math)"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"average","nodeType":"MemberAccess","referencedDeclaration":4386,"src":"5294:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5294:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5280:37:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1244,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"5349:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"id":1245,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"5356:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1243,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"5335:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1024_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5335:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1024_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1247,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1021,"src":"5335:35:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1248,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"5373:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5335:49:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1261,"nodeType":"Block","src":"5435:46:6","statements":[{"expression":{"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1255,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"5453:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1256,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"5459:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5465:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5459:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5453:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1260,"nodeType":"ExpressionStatement","src":"5453:13:6"}]},"id":1262,"nodeType":"IfStatement","src":"5331:150:6","trueBody":{"id":1254,"nodeType":"Block","src":"5386:43:6","statements":[{"expression":{"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1250,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"5404:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1251,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"5411:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5404:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1253,"nodeType":"ExpressionStatement","src":"5404:10:6"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1232,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"5254:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1233,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"5260:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5254:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1264,"nodeType":"WhileStatement","src":"5247:244:6"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1265,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"5508:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5516:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5508:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"id":1270,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"5538:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1271,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"5545:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5552:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5545:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1269,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"5524:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1024_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5524:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1024_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1023,"src":"5524:36:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5508:52:6","trueExpression":{"hexValue":"30","id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5520:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1184,"id":1277,"nodeType":"Return","src":"5501:59:6"}]},"documentation":{"id":1174,"nodeType":"StructuredDocumentation","src":"3631:73:6","text":" @dev Lookup a value in a list of (sorted) checkpoints."},"id":1279,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpointsLookup","nameLocation":"3718:18:6","nodeType":"FunctionDefinition","parameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"ckpts","nameLocation":"3758:5:6","nodeType":"VariableDeclaration","scope":1279,"src":"3737:26:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1176,"nodeType":"UserDefinedTypeName","pathNode":{"id":1175,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1024,"src":"3737:10:6"},"referencedDeclaration":1024,"src":"3737:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1024_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1177,"nodeType":"ArrayTypeName","src":"3737:12:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1180,"mutability":"mutable","name":"blockNumber","nameLocation":"3773:11:6","nodeType":"VariableDeclaration","scope":1279,"src":"3765:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1179,"name":"uint256","nodeType":"ElementaryTypeName","src":"3765:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3736:49:6"},"returnParameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1279,"src":"3808:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1182,"name":"uint256","nodeType":"ElementaryTypeName","src":"3808:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3807:9:6"},"scope":1704,"src":"3709:1858:6","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[173],"body":{"id":1292,"nodeType":"Block","src":"5709:51:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1287,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"5729:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5729:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1289,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"5743:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1286,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"5719:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5719:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1291,"nodeType":"ExpressionStatement","src":"5719:34:6"}]},"documentation":{"id":1280,"nodeType":"StructuredDocumentation","src":"5573:70:6","text":" @dev Delegate votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":1293,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"5657:8:6","nodeType":"FunctionDefinition","overrides":{"id":1284,"nodeType":"OverrideSpecifier","overrides":[],"src":"5700:8:6"},"parameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1282,"mutability":"mutable","name":"delegatee","nameLocation":"5674:9:6","nodeType":"VariableDeclaration","scope":1293,"src":"5666:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1281,"name":"address","nodeType":"ElementaryTypeName","src":"5666:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5665:19:6"},"returnParameters":{"id":1285,"nodeType":"ParameterList","parameters":[],"src":"5709:0:6"},"scope":1704,"src":"5648:112:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[189],"body":{"id":1352,"nodeType":"Block","src":"6019:392:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1311,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6037:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"6037:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1313,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"6056:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6037:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6064:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""},"value":"ERC20Votes: signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""}],"id":1310,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6029:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6029:67:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1317,"nodeType":"ExpressionStatement","src":"6029:67:6"},{"assignments":[1319],"declarations":[{"constant":false,"id":1319,"mutability":"mutable","name":"signer","nameLocation":"6114:6:6","nodeType":"VariableDeclaration","scope":1352,"src":"6106:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"6106:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1337,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":1326,"name":"_DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"6188:20:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1327,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"6210:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1328,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"6221:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1329,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"6228:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1324,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6177:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"6177:10:6","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6177:58:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1323,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6167:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6167:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1322,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"6150:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6150:87:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1333,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"6251:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1334,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"6266:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1335,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1306,"src":"6281:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1320,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"6123:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4130_$","typeString":"type(library ECDSA)"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4070,"src":"6123:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6123:169:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6106:186:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1339,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"6310:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1341,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"6329:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1340,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"6319:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6319:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6310:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6338:27:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""},"value":"ERC20Votes: invalid nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""}],"id":1338,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6302:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6302:64:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1346,"nodeType":"ExpressionStatement","src":"6302:64:6"},{"expression":{"arguments":[{"id":1348,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"6386:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1349,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"6394:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1347,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"6376:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6376:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1351,"nodeType":"ExpressionStatement","src":"6376:28:6"}]},"documentation":{"id":1294,"nodeType":"StructuredDocumentation","src":"5766:66:6","text":" @dev Delegates votes from signer to `delegatee`"},"functionSelector":"c3cda520","id":1353,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"5846:13:6","nodeType":"FunctionDefinition","overrides":{"id":1308,"nodeType":"OverrideSpecifier","overrides":[],"src":"6010:8:6"},"parameters":{"id":1307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1296,"mutability":"mutable","name":"delegatee","nameLocation":"5877:9:6","nodeType":"VariableDeclaration","scope":1353,"src":"5869:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1295,"name":"address","nodeType":"ElementaryTypeName","src":"5869:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"nonce","nameLocation":"5904:5:6","nodeType":"VariableDeclaration","scope":1353,"src":"5896:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"5896:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"expiry","nameLocation":"5927:6:6","nodeType":"VariableDeclaration","scope":1353,"src":"5919:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"5919:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1302,"mutability":"mutable","name":"v","nameLocation":"5949:1:6","nodeType":"VariableDeclaration","scope":1353,"src":"5943:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1301,"name":"uint8","nodeType":"ElementaryTypeName","src":"5943:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1304,"mutability":"mutable","name":"r","nameLocation":"5968:1:6","nodeType":"VariableDeclaration","scope":1353,"src":"5960:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5960:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1306,"mutability":"mutable","name":"s","nameLocation":"5987:1:6","nodeType":"VariableDeclaration","scope":1353,"src":"5979:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1305,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5979:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5859:135:6"},"returnParameters":{"id":1309,"nodeType":"ParameterList","parameters":[],"src":"6019:0:6"},"scope":1704,"src":"5837:574:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1365,"nodeType":"Block","src":"6575:41:6","statements":[{"expression":{"expression":{"arguments":[{"id":1361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6597:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1360,"name":"uint224","nodeType":"ElementaryTypeName","src":"6597:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":1359,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6592:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6592:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":1363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6592:17:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1358,"id":1364,"nodeType":"Return","src":"6585:24:6"}]},"documentation":{"id":1354,"nodeType":"StructuredDocumentation","src":"6417:91:6","text":" @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1)."},"id":1366,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"6522:10:6","nodeType":"FunctionDefinition","parameters":{"id":1355,"nodeType":"ParameterList","parameters":[],"src":"6532:2:6"},"returnParameters":{"id":1358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1366,"src":"6566:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1356,"name":"uint224","nodeType":"ElementaryTypeName","src":"6566:7:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"6565:9:6"},"scope":1704,"src":"6513:103:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[702],"body":{"id":1397,"nodeType":"Block","src":"6779:211:6","statements":[{"expression":{"arguments":[{"id":1378,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"6801:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1379,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"6810:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1375,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"6789:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1704_$","typeString":"type(contract super ERC20Votes)"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":702,"src":"6789:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6789:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1381,"nodeType":"ExpressionStatement","src":"6789:28:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1383,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"6835:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6835:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1385,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"6852:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint224_$","typeString":"function () view returns (uint224)"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6852:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"6835:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f766572666c6f77696e6720766f746573","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6866:50:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""},"value":"ERC20Votes: total supply risks overflowing votes"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""}],"id":1382,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6827:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6827:90:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1390,"nodeType":"ExpressionStatement","src":"6827:90:6"},{"expression":{"arguments":[{"id":1392,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"6945:23:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1393,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"6970:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1394,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"6976:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1391,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"6928:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6928:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1396,"nodeType":"ExpressionStatement","src":"6928:55:6"}]},"documentation":{"id":1367,"nodeType":"StructuredDocumentation","src":"6622:78:6","text":" @dev Snapshots the totalSupply after it has been increased."},"id":1398,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"6714:5:6","nodeType":"FunctionDefinition","overrides":{"id":1373,"nodeType":"OverrideSpecifier","overrides":[],"src":"6770:8:6"},"parameters":{"id":1372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1369,"mutability":"mutable","name":"account","nameLocation":"6728:7:6","nodeType":"VariableDeclaration","scope":1398,"src":"6720:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1368,"name":"address","nodeType":"ElementaryTypeName","src":"6720:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1371,"mutability":"mutable","name":"amount","nameLocation":"6745:6:6","nodeType":"VariableDeclaration","scope":1398,"src":"6737:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1370,"name":"uint256","nodeType":"ElementaryTypeName","src":"6737:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6719:33:6"},"returnParameters":{"id":1374,"nodeType":"ParameterList","parameters":[],"src":"6779:0:6"},"scope":1704,"src":"6705:285:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[774],"body":{"id":1420,"nodeType":"Block","src":"7153:116:6","statements":[{"expression":{"arguments":[{"id":1410,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"7175:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1411,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"7184:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1407,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7163:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1704_$","typeString":"type(contract super ERC20Votes)"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":774,"src":"7163:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7163:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1413,"nodeType":"ExpressionStatement","src":"7163:28:6"},{"expression":{"arguments":[{"id":1415,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"7219:23:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1416,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"7244:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1417,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"7255:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1414,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"7202:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7202:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1419,"nodeType":"ExpressionStatement","src":"7202:60:6"}]},"documentation":{"id":1399,"nodeType":"StructuredDocumentation","src":"6996:78:6","text":" @dev Snapshots the totalSupply after it has been decreased."},"id":1421,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7088:5:6","nodeType":"FunctionDefinition","overrides":{"id":1405,"nodeType":"OverrideSpecifier","overrides":[],"src":"7144:8:6"},"parameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"account","nameLocation":"7102:7:6","nodeType":"VariableDeclaration","scope":1421,"src":"7094:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1400,"name":"address","nodeType":"ElementaryTypeName","src":"7094:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1403,"mutability":"mutable","name":"amount","nameLocation":"7119:6:6","nodeType":"VariableDeclaration","scope":1421,"src":"7111:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1402,"name":"uint256","nodeType":"ElementaryTypeName","src":"7111:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7093:33:6"},"returnParameters":{"id":1406,"nodeType":"ParameterList","parameters":[],"src":"7153:0:6"},"scope":1704,"src":"7079:190:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[884],"body":{"id":1450,"nodeType":"Block","src":"7536:127:6","statements":[{"expression":{"arguments":[{"id":1435,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"7572:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1436,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"7578:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1437,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"7582:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1432,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7546:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$1704_$","typeString":"type(contract super ERC20Votes)"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":884,"src":"7546:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7546:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1439,"nodeType":"ExpressionStatement","src":"7546:43:6"},{"expression":{"arguments":[{"arguments":[{"id":1442,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"7627:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1441,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"7617:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7617:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1445,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"7644:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1444,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"7634:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7634:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1447,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"7649:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1440,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"7600:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7600:56:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1449,"nodeType":"ExpressionStatement","src":"7600:56:6"}]},"documentation":{"id":1422,"nodeType":"StructuredDocumentation","src":"7275:129:6","text":" @dev Move voting power when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":1451,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"7418:19:6","nodeType":"FunctionDefinition","overrides":{"id":1430,"nodeType":"OverrideSpecifier","overrides":[],"src":"7527:8:6"},"parameters":{"id":1429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"from","nameLocation":"7455:4:6","nodeType":"VariableDeclaration","scope":1451,"src":"7447:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1423,"name":"address","nodeType":"ElementaryTypeName","src":"7447:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1426,"mutability":"mutable","name":"to","nameLocation":"7477:2:6","nodeType":"VariableDeclaration","scope":1451,"src":"7469:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1425,"name":"address","nodeType":"ElementaryTypeName","src":"7469:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1428,"mutability":"mutable","name":"amount","nameLocation":"7497:6:6","nodeType":"VariableDeclaration","scope":1451,"src":"7489:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1427,"name":"uint256","nodeType":"ElementaryTypeName","src":"7489:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7437:72:6"},"returnParameters":{"id":1431,"nodeType":"ParameterList","parameters":[],"src":"7536:0:6"},"scope":1704,"src":"7409:254:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1489,"nodeType":"Block","src":"7908:306:6","statements":[{"assignments":[1460],"declarations":[{"constant":false,"id":1460,"mutability":"mutable","name":"currentDelegate","nameLocation":"7926:15:6","nodeType":"VariableDeclaration","scope":1489,"src":"7918:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1459,"name":"address","nodeType":"ElementaryTypeName","src":"7918:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1464,"initialValue":{"arguments":[{"id":1462,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"7954:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1461,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"7944:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7944:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7918:46:6"},{"assignments":[1466],"declarations":[{"constant":false,"id":1466,"mutability":"mutable","name":"delegatorBalance","nameLocation":"7982:16:6","nodeType":"VariableDeclaration","scope":1489,"src":"7974:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1465,"name":"uint256","nodeType":"ElementaryTypeName","src":"7974:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1470,"initialValue":{"arguments":[{"id":1468,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"8011:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1467,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"8001:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8001:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7974:47:6"},{"expression":{"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1471,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"8031:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1473,"indexExpression":{"id":1472,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"8042:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8031:21:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1474,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"8055:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8031:33:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1476,"nodeType":"ExpressionStatement","src":"8031:33:6"},{"eventCall":{"arguments":[{"id":1478,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"8096:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1479,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"8107:15:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1480,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"8124:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1477,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"8080:15:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8080:54:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1482,"nodeType":"EmitStatement","src":"8075:59:6"},{"expression":{"arguments":[{"id":1484,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"8162:15:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1485,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"8179:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1486,"name":"delegatorBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"8190:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1483,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"8145:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8145:62:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1488,"nodeType":"ExpressionStatement","src":"8145:62:6"}]},"documentation":{"id":1452,"nodeType":"StructuredDocumentation","src":"7669:160:6","text":" @dev Change delegation for `delegator` to `delegatee`.\n Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}."},"id":1490,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"7843:9:6","nodeType":"FunctionDefinition","parameters":{"id":1457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1454,"mutability":"mutable","name":"delegator","nameLocation":"7861:9:6","nodeType":"VariableDeclaration","scope":1490,"src":"7853:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1453,"name":"address","nodeType":"ElementaryTypeName","src":"7853:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1456,"mutability":"mutable","name":"delegatee","nameLocation":"7880:9:6","nodeType":"VariableDeclaration","scope":1490,"src":"7872:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1455,"name":"address","nodeType":"ElementaryTypeName","src":"7872:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7852:38:6"},"returnParameters":{"id":1458,"nodeType":"ParameterList","parameters":[],"src":"7908:0:6"},"scope":1704,"src":"7834:380:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1560,"nodeType":"Block","src":"8326:521:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1499,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"8340:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1500,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"8347:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8340:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1502,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"8354:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8363:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8354:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8340:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1559,"nodeType":"IfStatement","src":"8336:505:6","trueBody":{"id":1558,"nodeType":"Block","src":"8366:475:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1506,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"8384:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8399:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8391:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1507,"name":"address","nodeType":"ElementaryTypeName","src":"8391:7:6","typeDescriptions":{}}},"id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8391:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8384:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1531,"nodeType":"IfStatement","src":"8380:221:6","trueBody":{"id":1530,"nodeType":"Block","src":"8403:198:6","statements":[{"assignments":[1513,1515],"declarations":[{"constant":false,"id":1513,"mutability":"mutable","name":"oldWeight","nameLocation":"8430:9:6","nodeType":"VariableDeclaration","scope":1530,"src":"8422:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1512,"name":"uint256","nodeType":"ElementaryTypeName","src":"8422:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1515,"mutability":"mutable","name":"newWeight","nameLocation":"8449:9:6","nodeType":"VariableDeclaration","scope":1530,"src":"8441:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1514,"name":"uint256","nodeType":"ElementaryTypeName","src":"8441:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1523,"initialValue":{"arguments":[{"baseExpression":{"id":1517,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"8479:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1519,"indexExpression":{"id":1518,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"8492:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8479:17:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1520,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"8498:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1521,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"8509:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1516,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"8462:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8462:54:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8421:95:6"},{"eventCall":{"arguments":[{"id":1525,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"8560:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1526,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"8565:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1527,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"8576:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1524,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"8539:20:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8539:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1529,"nodeType":"EmitStatement","src":"8534:52:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1532,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"8619:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8634:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8626:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1533,"name":"address","nodeType":"ElementaryTypeName","src":"8626:7:6","typeDescriptions":{}}},"id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8626:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8619:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1557,"nodeType":"IfStatement","src":"8615:216:6","trueBody":{"id":1556,"nodeType":"Block","src":"8638:193:6","statements":[{"assignments":[1539,1541],"declarations":[{"constant":false,"id":1539,"mutability":"mutable","name":"oldWeight","nameLocation":"8665:9:6","nodeType":"VariableDeclaration","scope":1556,"src":"8657:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1538,"name":"uint256","nodeType":"ElementaryTypeName","src":"8657:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1541,"mutability":"mutable","name":"newWeight","nameLocation":"8684:9:6","nodeType":"VariableDeclaration","scope":1556,"src":"8676:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1540,"name":"uint256","nodeType":"ElementaryTypeName","src":"8676:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1549,"initialValue":{"arguments":[{"baseExpression":{"id":1543,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"8714:12:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1545,"indexExpression":{"id":1544,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"8727:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8714:17:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1546,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"8733:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1547,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"8739:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1542,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"8697:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8697:49:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8656:90:6"},{"eventCall":{"arguments":[{"id":1551,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"8790:3:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1552,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"8795:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1553,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"8806:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1550,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"8769:20:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8769:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1555,"nodeType":"EmitStatement","src":"8764:52:6"}]}}]}}]},"id":1561,"implemented":true,"kind":"function","modifiers":[],"name":"_moveVotingPower","nameLocation":"8229:16:6","nodeType":"FunctionDefinition","parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1492,"mutability":"mutable","name":"src","nameLocation":"8263:3:6","nodeType":"VariableDeclaration","scope":1561,"src":"8255:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1491,"name":"address","nodeType":"ElementaryTypeName","src":"8255:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1494,"mutability":"mutable","name":"dst","nameLocation":"8284:3:6","nodeType":"VariableDeclaration","scope":1561,"src":"8276:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"8276:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"amount","nameLocation":"8305:6:6","nodeType":"VariableDeclaration","scope":1561,"src":"8297:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8297:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8245:72:6"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[],"src":"8326:0:6"},"scope":1704,"src":"8220:627:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1660,"nodeType":"Block","src":"9061:508:6","statements":[{"assignments":[1585],"declarations":[{"constant":false,"id":1585,"mutability":"mutable","name":"pos","nameLocation":"9079:3:6","nodeType":"VariableDeclaration","scope":1660,"src":"9071:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1584,"name":"uint256","nodeType":"ElementaryTypeName","src":"9071:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1588,"initialValue":{"expression":{"id":1586,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"9085:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"9085:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9071:26:6"},{"assignments":[1591],"declarations":[{"constant":false,"id":1591,"mutability":"mutable","name":"oldCkpt","nameLocation":"9126:7:6","nodeType":"VariableDeclaration","scope":1660,"src":"9108:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1024_memory_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":1590,"nodeType":"UserDefinedTypeName","pathNode":{"id":1589,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1024,"src":"9108:10:6"},"referencedDeclaration":1024,"src":"9108:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1024_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"id":1606,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1592,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"9136:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9143:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9136:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1600,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"9180:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1601,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"9187:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9193:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9187:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1599,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"9166:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1024_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9166:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1024_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9136:59:6","trueExpression":{"arguments":[{"hexValue":"30","id":1596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9158:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9161:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1595,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"9147:10:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$1024_storage_ptr_$","typeString":"type(struct ERC20Votes.Checkpoint storage pointer)"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9147:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1024_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1024_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"nodeType":"VariableDeclarationStatement","src":"9108:87:6"},{"expression":{"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1607,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"9206:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1608,"name":"oldCkpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"9218:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1024_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"id":1609,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1023,"src":"9218:13:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"9206:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1611,"nodeType":"ExpressionStatement","src":"9206:25:6"},{"expression":{"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1612,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"9241:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1614,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"9256:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1615,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"9267:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1613,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"9253:2:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9253:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9241:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1618,"nodeType":"ExpressionStatement","src":"9241:32:6"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1619,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"9288:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9294:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9288:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1622,"name":"oldCkpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"9299:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1024_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"id":1623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1021,"src":"9299:17:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1624,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9320:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"9320:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9299:33:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9288:44:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1658,"nodeType":"Block","src":"9432:131:6","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":1648,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9498:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"number","nodeType":"MemberAccess","src":"9498:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1646,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6726,"src":"9480:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6726_$","typeString":"type(library SafeCast)"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":5888,"src":"9480:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9480:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":1653,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"9539:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1651,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6726,"src":"9520:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6726_$","typeString":"type(library SafeCast)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":5288,"src":"9520:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9520:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":1645,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"9457:10:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$1024_storage_ptr_$","typeString":"type(struct ERC20Votes.Checkpoint storage pointer)"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["fromBlock","votes"],"nodeType":"FunctionCall","src":"9457:94:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1024_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$1024_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}],"expression":{"id":1642,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"9446:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"9446:10:6","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$1024_storage_$returns$__$bound_to$_t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,struct ERC20Votes.Checkpoint storage ref)"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9446:106:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1657,"nodeType":"ExpressionStatement","src":"9446:106:6"}]},"id":1659,"nodeType":"IfStatement","src":"9284:279:6","trueBody":{"id":1641,"nodeType":"Block","src":"9334:92:6","statements":[{"expression":{"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1629,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"9362:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1630,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"9369:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9375:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9369:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1628,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"9348:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1024_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9348:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1024_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1634,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1023,"src":"9348:35:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1637,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"9405:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1635,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6726,"src":"9386:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6726_$","typeString":"type(library SafeCast)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":5288,"src":"9386:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9386:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"9348:67:6","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1640,"nodeType":"ExpressionStatement","src":"9348:67:6"}]}}]},"id":1661,"implemented":true,"kind":"function","modifiers":[],"name":"_writeCheckpoint","nameLocation":"8862:16:6","nodeType":"FunctionDefinition","parameters":{"id":1578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"mutability":"mutable","name":"ckpts","nameLocation":"8909:5:6","nodeType":"VariableDeclaration","scope":1661,"src":"8888:26:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1563,"nodeType":"UserDefinedTypeName","pathNode":{"id":1562,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1024,"src":"8888:10:6"},"referencedDeclaration":1024,"src":"8888:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1024_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1564,"nodeType":"ArrayTypeName","src":"8888:12:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1575,"mutability":"mutable","name":"op","nameLocation":"8974:2:6","nodeType":"VariableDeclaration","scope":1661,"src":"8924:52:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"typeName":{"id":1574,"nodeType":"FunctionTypeName","parameterTypes":{"id":1570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1574,"src":"8933:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1566,"name":"uint256","nodeType":"ElementaryTypeName","src":"8933:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1574,"src":"8942:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1568,"name":"uint256","nodeType":"ElementaryTypeName","src":"8942:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8932:18:6"},"returnParameterTypes":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1574,"src":"8965:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1571,"name":"uint256","nodeType":"ElementaryTypeName","src":"8965:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8964:9:6"},"src":"8924:52:6","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":1577,"mutability":"mutable","name":"delta","nameLocation":"8994:5:6","nodeType":"VariableDeclaration","scope":1661,"src":"8986:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1576,"name":"uint256","nodeType":"ElementaryTypeName","src":"8986:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8878:127:6"},"returnParameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"oldWeight","nameLocation":"9031:9:6","nodeType":"VariableDeclaration","scope":1661,"src":"9023:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1579,"name":"uint256","nodeType":"ElementaryTypeName","src":"9023:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"newWeight","nameLocation":"9050:9:6","nodeType":"VariableDeclaration","scope":1661,"src":"9042:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"9042:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9022:38:6"},"scope":1704,"src":"8853:716:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1674,"nodeType":"Block","src":"9642:29:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1670,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"9659:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1671,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"9663:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9659:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1669,"id":1673,"nodeType":"Return","src":"9652:12:6"}]},"id":1675,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"9584:4:6","nodeType":"FunctionDefinition","parameters":{"id":1666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1663,"mutability":"mutable","name":"a","nameLocation":"9597:1:6","nodeType":"VariableDeclaration","scope":1675,"src":"9589:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1662,"name":"uint256","nodeType":"ElementaryTypeName","src":"9589:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1665,"mutability":"mutable","name":"b","nameLocation":"9608:1:6","nodeType":"VariableDeclaration","scope":1675,"src":"9600:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1664,"name":"uint256","nodeType":"ElementaryTypeName","src":"9600:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9588:22:6"},"returnParameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1675,"src":"9633:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1667,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9632:9:6"},"scope":1704,"src":"9575:96:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1688,"nodeType":"Block","src":"9749:29:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1684,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"9766:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1685,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"9770:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9766:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1683,"id":1687,"nodeType":"Return","src":"9759:12:6"}]},"id":1689,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"9686:9:6","nodeType":"FunctionDefinition","parameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1677,"mutability":"mutable","name":"a","nameLocation":"9704:1:6","nodeType":"VariableDeclaration","scope":1689,"src":"9696:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1676,"name":"uint256","nodeType":"ElementaryTypeName","src":"9696:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1679,"mutability":"mutable","name":"b","nameLocation":"9715:1:6","nodeType":"VariableDeclaration","scope":1689,"src":"9707:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1678,"name":"uint256","nodeType":"ElementaryTypeName","src":"9707:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9695:22:6"},"returnParameters":{"id":1683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1689,"src":"9740:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1681,"name":"uint256","nodeType":"ElementaryTypeName","src":"9740:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9739:9:6"},"scope":1704,"src":"9677:101:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1702,"nodeType":"Block","src":"9897:126:6","statements":[{"AST":{"nodeType":"YulBlock","src":"9916:101:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9937:1:6","type":"","value":"0"},{"name":"ckpts.slot","nodeType":"YulIdentifier","src":"9940:10:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9930:6:6"},"nodeType":"YulFunctionCall","src":"9930:21:6"},"nodeType":"YulExpressionStatement","src":"9930:21:6"},{"nodeType":"YulAssignment","src":"9964:43:6","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9993:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9996:4:6","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9983:9:6"},"nodeType":"YulFunctionCall","src":"9983:18:6"},{"name":"pos","nodeType":"YulIdentifier","src":"10003:3:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9979:3:6"},"nodeType":"YulFunctionCall","src":"9979:28:6"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"9964:11:6"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1693,"isOffset":false,"isSlot":true,"src":"9940:10:6","suffix":"slot","valueSize":1},{"declaration":1695,"isOffset":false,"isSlot":false,"src":"10003:3:6","valueSize":1},{"declaration":1699,"isOffset":false,"isSlot":true,"src":"9964:11:6","suffix":"slot","valueSize":1}],"id":1701,"nodeType":"InlineAssembly","src":"9907:110:6"}]},"id":1703,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"9793:13:6","nodeType":"FunctionDefinition","parameters":{"id":1696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1693,"mutability":"mutable","name":"ckpts","nameLocation":"9828:5:6","nodeType":"VariableDeclaration","scope":1703,"src":"9807:26:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1691,"nodeType":"UserDefinedTypeName","pathNode":{"id":1690,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1024,"src":"9807:10:6"},"referencedDeclaration":1024,"src":"9807:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1024_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1692,"nodeType":"ArrayTypeName","src":"9807:12:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1024_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1695,"mutability":"mutable","name":"pos","nameLocation":"9843:3:6","nodeType":"VariableDeclaration","scope":1703,"src":"9835:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1694,"name":"uint256","nodeType":"ElementaryTypeName","src":"9835:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9806:41:6"},"returnParameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"result","nameLocation":"9889:6:6","nodeType":"VariableDeclaration","scope":1703,"src":"9870:25:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1024_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":1698,"nodeType":"UserDefinedTypeName","pathNode":{"id":1697,"name":"Checkpoint","nodeType":"IdentifierPath","referencedDeclaration":1024,"src":"9870:10:6"},"referencedDeclaration":1024,"src":"9870:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1024_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"src":"9869:27:6"},"scope":1704,"src":"9784:239:6","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1705,"src":"1253:8772:6","usedErrors":[]}],"src":"121:9905:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[963],"IERC20Metadata":[1729]},"id":1730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1706,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1707,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1730,"sourceUnit":964,"src":"135:23:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1709,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":963,"src":"305:6:7"},"id":1710,"nodeType":"InheritanceSpecifier","src":"305:6:7"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1708,"nodeType":"StructuredDocumentation","src":"160:116:7","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":1729,"linearizedBaseContracts":[1729,963],"name":"IERC20Metadata","nameLocation":"287:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1711,"nodeType":"StructuredDocumentation","src":"318:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1716,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:7","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[],"src":"390:2:7"},"returnParameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1716,"src":"416:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1713,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:7"},"scope":1729,"src":"377:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"437:56:7","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1722,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:7","nodeType":"FunctionDefinition","parameters":{"id":1718,"nodeType":"ParameterList","parameters":[],"src":"513:2:7"},"returnParameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1722,"src":"539:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1719,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:7"},"scope":1729,"src":"498:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1723,"nodeType":"StructuredDocumentation","src":"560:65:7","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1728,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:7","nodeType":"FunctionDefinition","parameters":{"id":1724,"nodeType":"ParameterList","parameters":[],"src":"647:2:7"},"returnParameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1728,"src":"673:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1725,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:7"},"scope":1729,"src":"630:50:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1730,"src":"277:405:7","usedErrors":[]}],"src":"110:573:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","exportedSymbols":{"Context":[3520],"Counters":[3594],"ECDSA":[4130],"EIP712":[4284],"ERC20":[885],"ERC20Permit":[1901],"IERC20":[963],"IERC20Metadata":[1729],"IERC20Permit":[1937],"Math":[5185],"Strings":[3769]},"id":1902,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1731,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"./draft-IERC20Permit.sol","id":1732,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1902,"sourceUnit":1938,"src":"153:34:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1902,"sourceUnit":886,"src":"188:22:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1734,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1902,"sourceUnit":4131,"src":"211:47:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1735,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1902,"sourceUnit":4285,"src":"259:48:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"../../../utils/Counters.sol","id":1736,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1902,"sourceUnit":3595,"src":"308:37:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1738,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":885,"src":"898:5:8"},"id":1739,"nodeType":"InheritanceSpecifier","src":"898:5:8"},{"baseName":{"id":1740,"name":"IERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":1937,"src":"905:12:8"},"id":1741,"nodeType":"InheritanceSpecifier","src":"905:12:8"},{"baseName":{"id":1742,"name":"EIP712","nodeType":"IdentifierPath","referencedDeclaration":4284,"src":"919:6:8"},"id":1743,"nodeType":"InheritanceSpecifier","src":"919:6:8"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1737,"nodeType":"StructuredDocumentation","src":"347:517:8","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._"},"fullyImplemented":false,"id":1901,"linearizedBaseContracts":[1901,4284,1937,885,1729,963,3520],"name":"ERC20Permit","nameLocation":"883:11:8","nodeType":"ContractDefinition","nodes":[{"id":1747,"libraryName":{"id":1744,"name":"Counters","nodeType":"IdentifierPath","referencedDeclaration":3594,"src":"938:8:8"},"nodeType":"UsingForDirective","src":"932:36:8","typeName":{"id":1746,"nodeType":"UserDefinedTypeName","pathNode":{"id":1745,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":3526,"src":"951:16:8"},"referencedDeclaration":3526,"src":"951:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":1752,"mutability":"mutable","name":"_nonces","nameLocation":"1019:7:8","nodeType":"VariableDeclaration","scope":1901,"src":"974:52:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$3526_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"typeName":{"id":1751,"keyType":{"id":1748,"name":"address","nodeType":"ElementaryTypeName","src":"982:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"974:36:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$3526_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"valueType":{"id":1750,"nodeType":"UserDefinedTypeName","pathNode":{"id":1749,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":3526,"src":"993:16:8"},"referencedDeclaration":3526,"src":"993:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage_ptr","typeString":"struct Counters.Counter"}}},"visibility":"private"},{"constant":true,"id":1757,"mutability":"constant","name":"_PERMIT_TYPEHASH","nameLocation":"1110:16:8","nodeType":"VariableDeclaration","scope":1901,"src":"1085:147:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1753,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1085:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1147:84:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1754,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1137:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1137:95:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"1238:254:8","text":" @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n However, to ensure consistency with the upgradeable transpiler, we will continue\n to reserve a slot.\n @custom:oz-renamed-from _PERMIT_TYPEHASH"},"id":1760,"mutability":"mutable","name":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","nameLocation":"1565:32:8","nodeType":"VariableDeclaration","scope":1901,"src":"1549:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1759,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1549:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":1770,"nodeType":"Block","src":"1879:2:8","statements":[]},"documentation":{"id":1761,"nodeType":"StructuredDocumentation","src":"1604:220:8","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":1771,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1766,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"1868:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1874:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1768,"kind":"baseConstructorSpecifier","modifierName":{"id":1765,"name":"EIP712","nodeType":"IdentifierPath","referencedDeclaration":4284,"src":"1861:6:8"},"nodeType":"ModifierInvocation","src":"1861:17:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1763,"mutability":"mutable","name":"name","nameLocation":"1855:4:8","nodeType":"VariableDeclaration","scope":1771,"src":"1841:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1762,"name":"string","nodeType":"ElementaryTypeName","src":"1841:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1840:20:8"},"returnParameters":{"id":1769,"nodeType":"ParameterList","parameters":[],"src":"1879:0:8"},"scope":1901,"src":"1829:52:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1922],"body":{"id":1843,"nodeType":"Block","src":"2140:428:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1791,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2158:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2158:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1793,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"2177:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2158:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2187:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""},"value":"ERC20Permit: expired deadline"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""}],"id":1790,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2150:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2150:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1797,"nodeType":"ExpressionStatement","src":"2150:69:8"},{"assignments":[1799],"declarations":[{"constant":false,"id":1799,"mutability":"mutable","name":"structHash","nameLocation":"2238:10:8","nodeType":"VariableDeclaration","scope":1843,"src":"2230:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1798,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2230:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1813,"initialValue":{"arguments":[{"arguments":[{"id":1803,"name":"_PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"2272:16:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1804,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"2290:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1805,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"2297:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"2306:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1808,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"2323:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1807,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"2313:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2313:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1810,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"2331:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1801,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2261:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"2261:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2261:79:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1800,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2251:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2251:90:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2230:111:8"},{"assignments":[1815],"declarations":[{"constant":false,"id":1815,"mutability":"mutable","name":"hash","nameLocation":"2360:4:8","nodeType":"VariableDeclaration","scope":1843,"src":"2352:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1814,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2352:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1819,"initialValue":{"arguments":[{"id":1817,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"2384:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1816,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"2367:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2367:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2352:43:8"},{"assignments":[1821],"declarations":[{"constant":false,"id":1821,"mutability":"mutable","name":"signer","nameLocation":"2414:6:8","nodeType":"VariableDeclaration","scope":1843,"src":"2406:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1820,"name":"address","nodeType":"ElementaryTypeName","src":"2406:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1829,"initialValue":{"arguments":[{"id":1824,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"2437:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1825,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"2443:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1826,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"2446:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1827,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"2449:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1822,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"2423:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4130_$","typeString":"type(library ECDSA)"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":4070,"src":"2423:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2423:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2406:45:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1831,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"2469:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1832,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"2479:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2469:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2486:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""},"value":"ERC20Permit: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""}],"id":1830,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2461:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2461:58:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1836,"nodeType":"ExpressionStatement","src":"2461:58:8"},{"expression":{"arguments":[{"id":1838,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"2539:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1839,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"2546:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"2555:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1837,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"2530:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2530:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1842,"nodeType":"ExpressionStatement","src":"2530:31:8"}]},"documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"1887:50:8","text":" @dev See {IERC20Permit-permit}."},"functionSelector":"d505accf","id":1844,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1951:6:8","nodeType":"FunctionDefinition","overrides":{"id":1788,"nodeType":"OverrideSpecifier","overrides":[],"src":"2131:8:8"},"parameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"owner","nameLocation":"1975:5:8","nodeType":"VariableDeclaration","scope":1844,"src":"1967:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1773,"name":"address","nodeType":"ElementaryTypeName","src":"1967:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1776,"mutability":"mutable","name":"spender","nameLocation":"1998:7:8","nodeType":"VariableDeclaration","scope":1844,"src":"1990:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1775,"name":"address","nodeType":"ElementaryTypeName","src":"1990:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1778,"mutability":"mutable","name":"value","nameLocation":"2023:5:8","nodeType":"VariableDeclaration","scope":1844,"src":"2015:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1777,"name":"uint256","nodeType":"ElementaryTypeName","src":"2015:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"deadline","nameLocation":"2046:8:8","nodeType":"VariableDeclaration","scope":1844,"src":"2038:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1779,"name":"uint256","nodeType":"ElementaryTypeName","src":"2038:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1782,"mutability":"mutable","name":"v","nameLocation":"2070:1:8","nodeType":"VariableDeclaration","scope":1844,"src":"2064:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1781,"name":"uint8","nodeType":"ElementaryTypeName","src":"2064:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1784,"mutability":"mutable","name":"r","nameLocation":"2089:1:8","nodeType":"VariableDeclaration","scope":1844,"src":"2081:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2081:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1786,"mutability":"mutable","name":"s","nameLocation":"2108:1:8","nodeType":"VariableDeclaration","scope":1844,"src":"2100:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1785,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2100:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1957:158:8"},"returnParameters":{"id":1789,"nodeType":"ParameterList","parameters":[],"src":"2140:0:8"},"scope":1901,"src":"1942:626:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1930],"body":{"id":1859,"nodeType":"Block","src":"2707:48:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":1853,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"2724:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$3526_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1855,"indexExpression":{"id":1854,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"2732:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2724:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage","typeString":"struct Counters.Counter storage ref"}},"id":1856,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":3538,"src":"2724:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$3526_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3526_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2724:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1852,"id":1858,"nodeType":"Return","src":"2717:31:8"}]},"documentation":{"id":1845,"nodeType":"StructuredDocumentation","src":"2574:50:8","text":" @dev See {IERC20Permit-nonces}."},"functionSelector":"7ecebe00","id":1860,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2638:6:8","nodeType":"FunctionDefinition","overrides":{"id":1849,"nodeType":"OverrideSpecifier","overrides":[],"src":"2680:8:8"},"parameters":{"id":1848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1847,"mutability":"mutable","name":"owner","nameLocation":"2653:5:8","nodeType":"VariableDeclaration","scope":1860,"src":"2645:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1846,"name":"address","nodeType":"ElementaryTypeName","src":"2645:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2644:15:8"},"returnParameters":{"id":1852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1860,"src":"2698:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1850,"name":"uint256","nodeType":"ElementaryTypeName","src":"2698:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2697:9:8"},"scope":1901,"src":"2629:126:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1936],"body":{"id":1870,"nodeType":"Block","src":"2948:44:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1867,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"2965:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2965:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1866,"id":1869,"nodeType":"Return","src":"2958:27:8"}]},"documentation":{"id":1861,"nodeType":"StructuredDocumentation","src":"2761:60:8","text":" @dev See {IERC20Permit-DOMAIN_SEPARATOR}."},"functionSelector":"3644e515","id":1871,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2888:16:8","nodeType":"FunctionDefinition","overrides":{"id":1863,"nodeType":"OverrideSpecifier","overrides":[],"src":"2921:8:8"},"parameters":{"id":1862,"nodeType":"ParameterList","parameters":[],"src":"2904:2:8"},"returnParameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1871,"src":"2939:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1864,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2939:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2938:9:8"},"scope":1901,"src":"2879:113:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1899,"nodeType":"Block","src":"3200:126:8","statements":[{"assignments":[1883],"declarations":[{"constant":false,"id":1883,"mutability":"mutable","name":"nonce","nameLocation":"3235:5:8","nodeType":"VariableDeclaration","scope":1899,"src":"3210:30:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1882,"nodeType":"UserDefinedTypeName","pathNode":{"id":1881,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":3526,"src":"3210:16:8"},"referencedDeclaration":3526,"src":"3210:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"id":1887,"initialValue":{"baseExpression":{"id":1884,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"3243:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$3526_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1886,"indexExpression":{"id":1885,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"3251:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3243:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage","typeString":"struct Counters.Counter storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3210:47:8"},{"expression":{"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1888,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"3267:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1889,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"3277:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1890,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":3538,"src":"3277:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$3526_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3526_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3277:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3267:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1893,"nodeType":"ExpressionStatement","src":"3267:25:8"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1894,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"3302:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":3552,"src":"3302:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$3526_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$3526_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3302:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1898,"nodeType":"ExpressionStatement","src":"3302:17:8"}]},"documentation":{"id":1872,"nodeType":"StructuredDocumentation","src":"2998:120:8","text":" @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"},"id":1900,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"3132:9:8","nodeType":"FunctionDefinition","parameters":{"id":1875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1874,"mutability":"mutable","name":"owner","nameLocation":"3150:5:8","nodeType":"VariableDeclaration","scope":1900,"src":"3142:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1873,"name":"address","nodeType":"ElementaryTypeName","src":"3142:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3141:15:8"},"returnParameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1877,"mutability":"mutable","name":"current","nameLocation":"3191:7:8","nodeType":"VariableDeclaration","scope":1900,"src":"3183:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1876,"name":"uint256","nodeType":"ElementaryTypeName","src":"3183:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3182:17:8"},"scope":1901,"src":"3123:203:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1902,"src":"865:2463:8","usedErrors":[]}],"src":"128:3201:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1937]},"id":1938,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1903,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1904,"nodeType":"StructuredDocumentation","src":"139:480:9","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":1937,"linearizedBaseContracts":[1937],"name":"IERC20Permit","nameLocation":"630:12:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1905,"nodeType":"StructuredDocumentation","src":"649:792:9","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":1922,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1455:6:9","nodeType":"FunctionDefinition","parameters":{"id":1920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"owner","nameLocation":"1479:5:9","nodeType":"VariableDeclaration","scope":1922,"src":"1471:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1906,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1909,"mutability":"mutable","name":"spender","nameLocation":"1502:7:9","nodeType":"VariableDeclaration","scope":1922,"src":"1494:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1908,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1911,"mutability":"mutable","name":"value","nameLocation":"1527:5:9","nodeType":"VariableDeclaration","scope":1922,"src":"1519:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1910,"name":"uint256","nodeType":"ElementaryTypeName","src":"1519:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1913,"mutability":"mutable","name":"deadline","nameLocation":"1550:8:9","nodeType":"VariableDeclaration","scope":1922,"src":"1542:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1912,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1915,"mutability":"mutable","name":"v","nameLocation":"1574:1:9","nodeType":"VariableDeclaration","scope":1922,"src":"1568:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1914,"name":"uint8","nodeType":"ElementaryTypeName","src":"1568:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1917,"mutability":"mutable","name":"r","nameLocation":"1593:1:9","nodeType":"VariableDeclaration","scope":1922,"src":"1585:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1916,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1585:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1919,"mutability":"mutable","name":"s","nameLocation":"1612:1:9","nodeType":"VariableDeclaration","scope":1922,"src":"1604:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1918,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:158:9"},"returnParameters":{"id":1921,"nodeType":"ParameterList","parameters":[],"src":"1628:0:9"},"scope":1937,"src":"1446:183:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1923,"nodeType":"StructuredDocumentation","src":"1635:294:9","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1930,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1943:6:9","nodeType":"FunctionDefinition","parameters":{"id":1926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1925,"mutability":"mutable","name":"owner","nameLocation":"1958:5:9","nodeType":"VariableDeclaration","scope":1930,"src":"1950:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1924,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1949:15:9"},"returnParameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1930,"src":"1988:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1927,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:9:9"},"scope":1937,"src":"1934:63:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1931,"nodeType":"StructuredDocumentation","src":"2003:128:9","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1936,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2198:16:9","nodeType":"FunctionDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[],"src":"2214:2:9"},"returnParameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1936,"src":"2240:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2240:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2239:9:9"},"scope":1937,"src":"2189:60:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1938,"src":"620:1631:9","usedErrors":[]}],"src":"114:2138:9"},"id":9},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[3498],"Context":[3520],"ERC165":[4308],"ERC721":[2882],"IERC165":[4320],"IERC721":[2998],"IERC721Metadata":[3168],"IERC721Receiver":[3016],"Math":[5185],"Strings":[3769]},"id":2883,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1939,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":1940,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2883,"sourceUnit":2999,"src":"132:23:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":1941,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2883,"sourceUnit":3017,"src":"156:31:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":1942,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2883,"sourceUnit":3169,"src":"188:42:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1943,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2883,"sourceUnit":3499,"src":"231:33:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1944,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2883,"sourceUnit":3521,"src":"265:33:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":1945,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2883,"sourceUnit":3770,"src":"299:33:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":1946,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2883,"sourceUnit":4309,"src":"333:46:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1948,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":3520,"src":"647:7:10"},"id":1949,"nodeType":"InheritanceSpecifier","src":"647:7:10"},{"baseName":{"id":1950,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":4308,"src":"656:6:10"},"id":1951,"nodeType":"InheritanceSpecifier","src":"656:6:10"},{"baseName":{"id":1952,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2998,"src":"664:7:10"},"id":1953,"nodeType":"InheritanceSpecifier","src":"664:7:10"},{"baseName":{"id":1954,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":3168,"src":"673:15:10"},"id":1955,"nodeType":"InheritanceSpecifier","src":"673:15:10"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":1947,"nodeType":"StructuredDocumentation","src":"381:246:10","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":2882,"linearizedBaseContracts":[2882,3168,2998,4308,4320,3520],"name":"ERC721","nameLocation":"637:6:10","nodeType":"ContractDefinition","nodes":[{"id":1958,"libraryName":{"id":1956,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":3498,"src":"701:7:10"},"nodeType":"UsingForDirective","src":"695:26:10","typeName":{"id":1957,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":1961,"libraryName":{"id":1959,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":3769,"src":"732:7:10"},"nodeType":"UsingForDirective","src":"726:26:10","typeName":{"id":1960,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1963,"mutability":"mutable","name":"_name","nameLocation":"791:5:10","nodeType":"VariableDeclaration","scope":2882,"src":"776:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1962,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1965,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:10","nodeType":"VariableDeclaration","scope":2882,"src":"823:22:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1964,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1969,"mutability":"mutable","name":"_owners","nameLocation":"934:7:10","nodeType":"VariableDeclaration","scope":2882,"src":"898:43:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1968,"keyType":{"id":1966,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":1967,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1973,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:10","nodeType":"VariableDeclaration","scope":2882,"src":"992:45:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1972,"keyType":{"id":1970,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1977,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:10","nodeType":"VariableDeclaration","scope":2882,"src":"1093:51:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1976,"keyType":{"id":1974,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":1975,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1983,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:10","nodeType":"VariableDeclaration","scope":2882,"src":"1199:71:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1982,"keyType":{"id":1978,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":1981,"keyType":{"id":1979,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1980,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1999,"nodeType":"Block","src":"1446:57:10","statements":[{"expression":{"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1991,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"1456:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1992,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"1464:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1994,"nodeType":"ExpressionStatement","src":"1456:13:10"},{"expression":{"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1995,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"1479:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1996,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"1489:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1998,"nodeType":"ExpressionStatement","src":"1479:17:10"}]},"documentation":{"id":1984,"nodeType":"StructuredDocumentation","src":"1277:108:10","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":2000,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1986,"mutability":"mutable","name":"name_","nameLocation":"1416:5:10","nodeType":"VariableDeclaration","scope":2000,"src":"1402:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1985,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1988,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:10","nodeType":"VariableDeclaration","scope":2000,"src":"1423:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1987,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:10"},"returnParameters":{"id":1990,"nodeType":"ParameterList","parameters":[],"src":"1446:0:10"},"scope":2882,"src":"1390:113:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[4307,4319],"body":{"id":2030,"nodeType":"Block","src":"1678:192:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2011,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"1707:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2013,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"1727:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2998_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$2998_$","typeString":"type(contract IERC721)"}],"id":2012,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1722:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$2998","typeString":"type(contract IERC721)"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2017,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"1763:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2019,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"1783:15:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$3168_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$3168_$","typeString":"type(contract IERC721Metadata)"}],"id":2018,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1778:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$3168","typeString":"type(contract IERC721Metadata)"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2026,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"1851:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2024,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$2882_$","typeString":"type(contract super ERC721)"}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4307,"src":"1827:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1827:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2010,"id":2029,"nodeType":"Return","src":"1688:175:10"}]},"documentation":{"id":2001,"nodeType":"StructuredDocumentation","src":"1509:56:10","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2031,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:10","nodeType":"FunctionDefinition","overrides":{"id":2007,"nodeType":"OverrideSpecifier","overrides":[{"id":2005,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":4308,"src":"1646:6:10"},{"id":2006,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":4320,"src":"1654:7:10"}],"src":"1637:25:10"},"parameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:10","nodeType":"VariableDeclaration","scope":2031,"src":"1597:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2002,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:10"},"returnParameters":{"id":2010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2031,"src":"1672:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2008,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:10"},"scope":2882,"src":"1570:300:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2923],"body":{"id":2054,"nodeType":"Block","src":"2010:123:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2041,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"2028:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2042,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:10","typeDescriptions":{}}},"id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2037:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":2040,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2020:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2049,"nodeType":"ExpressionStatement","src":"2020:73:10"},{"expression":{"baseExpression":{"id":2050,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"2110:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2052,"indexExpression":{"id":2051,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"2120:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2039,"id":2053,"nodeType":"Return","src":"2103:23:10"}]},"documentation":{"id":2032,"nodeType":"StructuredDocumentation","src":"1876:48:10","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":2055,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:10","nodeType":"FunctionDefinition","overrides":{"id":2036,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:10"},"parameters":{"id":2035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2034,"mutability":"mutable","name":"owner","nameLocation":"1956:5:10","nodeType":"VariableDeclaration","scope":2055,"src":"1948:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2033,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:10"},"returnParameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2055,"src":"2001:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2037,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:10"},"scope":2882,"src":"1929:204:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2931],"body":{"id":2082,"nodeType":"Block","src":"2271:138:10","statements":[{"assignments":[2065],"declarations":[{"constant":false,"id":2065,"mutability":"mutable","name":"owner","nameLocation":"2289:5:10","nodeType":"VariableDeclaration","scope":2082,"src":"2281:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2064,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2069,"initialValue":{"arguments":[{"id":2067,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"2306:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2066,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"2297:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2297:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:33:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2071,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"2332:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2341:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2072,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:10","typeDescriptions":{}}},"id":2075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2341:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2332:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2353:26:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":2070,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2324:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2324:56:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2079,"nodeType":"ExpressionStatement","src":"2324:56:10"},{"expression":{"id":2080,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"2397:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2063,"id":2081,"nodeType":"Return","src":"2390:12:10"}]},"documentation":{"id":2056,"nodeType":"StructuredDocumentation","src":"2139:46:10","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":2083,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:10","nodeType":"FunctionDefinition","overrides":{"id":2060,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:10"},"parameters":{"id":2059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2058,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:10","nodeType":"VariableDeclaration","scope":2083,"src":"2207:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2057,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:10"},"returnParameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2083,"src":"2262:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2061,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:10"},"scope":2882,"src":"2190:219:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3153],"body":{"id":2092,"nodeType":"Block","src":"2540:29:10","statements":[{"expression":{"id":2090,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"2557:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2089,"id":2091,"nodeType":"Return","src":"2550:12:10"}]},"documentation":{"id":2084,"nodeType":"StructuredDocumentation","src":"2415:51:10","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":2093,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2480:4:10","nodeType":"FunctionDefinition","overrides":{"id":2086,"nodeType":"OverrideSpecifier","overrides":[],"src":"2507:8:10"},"parameters":{"id":2085,"nodeType":"ParameterList","parameters":[],"src":"2484:2:10"},"returnParameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2093,"src":"2525:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2087,"name":"string","nodeType":"ElementaryTypeName","src":"2525:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2524:15:10"},"scope":2882,"src":"2471:98:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3159],"body":{"id":2102,"nodeType":"Block","src":"2704:31:10","statements":[{"expression":{"id":2100,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"2721:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2099,"id":2101,"nodeType":"Return","src":"2714:14:10"}]},"documentation":{"id":2094,"nodeType":"StructuredDocumentation","src":"2575:53:10","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":2103,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2642:6:10","nodeType":"FunctionDefinition","overrides":{"id":2096,"nodeType":"OverrideSpecifier","overrides":[],"src":"2671:8:10"},"parameters":{"id":2095,"nodeType":"ParameterList","parameters":[],"src":"2648:2:10"},"returnParameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2103,"src":"2689:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2097,"name":"string","nodeType":"ElementaryTypeName","src":"2689:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2688:15:10"},"scope":2882,"src":"2633:102:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3167],"body":{"id":2141,"nodeType":"Block","src":"2889:188:10","statements":[{"expression":{"arguments":[{"id":2113,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"2914:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2112,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"2899:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2899:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2115,"nodeType":"ExpressionStatement","src":"2899:23:10"},{"assignments":[2117],"declarations":[{"constant":false,"id":2117,"mutability":"mutable","name":"baseURI","nameLocation":"2947:7:10","nodeType":"VariableDeclaration","scope":2141,"src":"2933:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2116,"name":"string","nodeType":"ElementaryTypeName","src":"2933:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2120,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2118,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"2957:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2957:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2933:34:10"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2123,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"2990:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2984:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2121,"name":"bytes","nodeType":"ElementaryTypeName","src":"2984:5:10","typeDescriptions":{}}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2984:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2984:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3008:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2984:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3068:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2984:86:10","trueExpression":{"arguments":[{"arguments":[{"id":2132,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"3036:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2133,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"3045:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3652,"src":"3045:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3045:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2130,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3019:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3019:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3019:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3012:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2128,"name":"string","nodeType":"ElementaryTypeName","src":"3012:6:10","typeDescriptions":{}}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3012:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2111,"id":2140,"nodeType":"Return","src":"2977:93:10"}]},"documentation":{"id":2104,"nodeType":"StructuredDocumentation","src":"2741:55:10","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":2142,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2810:8:10","nodeType":"FunctionDefinition","overrides":{"id":2108,"nodeType":"OverrideSpecifier","overrides":[],"src":"2856:8:10"},"parameters":{"id":2107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2106,"mutability":"mutable","name":"tokenId","nameLocation":"2827:7:10","nodeType":"VariableDeclaration","scope":2142,"src":"2819:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2105,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2818:17:10"},"returnParameters":{"id":2111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2142,"src":"2874:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2109,"name":"string","nodeType":"ElementaryTypeName","src":"2874:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2873:15:10"},"scope":2882,"src":"2801:276:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2150,"nodeType":"Block","src":"3385:26:10","statements":[{"expression":{"hexValue":"","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3402:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":2147,"id":2149,"nodeType":"Return","src":"3395:9:10"}]},"documentation":{"id":2143,"nodeType":"StructuredDocumentation","src":"3083:231:10","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":2151,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3328:8:10","nodeType":"FunctionDefinition","parameters":{"id":2144,"nodeType":"ParameterList","parameters":[],"src":"3336:2:10"},"returnParameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2151,"src":"3370:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2145,"name":"string","nodeType":"ElementaryTypeName","src":"3370:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3369:15:10"},"scope":2882,"src":"3319:92:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2971],"body":{"id":2193,"nodeType":"Block","src":"3538:336:10","statements":[{"assignments":[2161],"declarations":[{"constant":false,"id":2161,"mutability":"mutable","name":"owner","nameLocation":"3556:5:10","nodeType":"VariableDeclaration","scope":2193,"src":"3548:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2160,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2166,"initialValue":{"arguments":[{"id":2164,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"3579:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2162,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"3564:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2882_$","typeString":"type(contract ERC721)"}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2083,"src":"3564:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3564:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3548:39:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2168,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"3605:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2169,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"3611:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3605:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3618:35:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":2167,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3597:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3597:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2173,"nodeType":"ExpressionStatement","src":"3597:57:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"3686:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3686:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2177,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"3702:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3686:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2180,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"3728:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2181,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"3735:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3735:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2179,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"3711:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3711:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3686:62:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3762:63:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""},"value":"ERC721: approve caller is not token owner or approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""}],"id":2174,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3665:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3665:170:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2187,"nodeType":"ExpressionStatement","src":"3665:170:10"},{"expression":{"arguments":[{"id":2189,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"3855:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2190,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"3859:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2188,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"3846:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2192,"nodeType":"ExpressionStatement","src":"3846:21:10"}]},"documentation":{"id":2152,"nodeType":"StructuredDocumentation","src":"3417:46:10","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":2194,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3477:7:10","nodeType":"FunctionDefinition","overrides":{"id":2158,"nodeType":"OverrideSpecifier","overrides":[],"src":"3529:8:10"},"parameters":{"id":2157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2154,"mutability":"mutable","name":"to","nameLocation":"3493:2:10","nodeType":"VariableDeclaration","scope":2194,"src":"3485:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2153,"name":"address","nodeType":"ElementaryTypeName","src":"3485:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2156,"mutability":"mutable","name":"tokenId","nameLocation":"3505:7:10","nodeType":"VariableDeclaration","scope":2194,"src":"3497:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2155,"name":"uint256","nodeType":"ElementaryTypeName","src":"3497:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3484:29:10"},"returnParameters":{"id":2159,"nodeType":"ParameterList","parameters":[],"src":"3538:0:10"},"scope":2882,"src":"3468:406:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2987],"body":{"id":2211,"nodeType":"Block","src":"4020:82:10","statements":[{"expression":{"arguments":[{"id":2204,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"4045:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2203,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"4030:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4030:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2206,"nodeType":"ExpressionStatement","src":"4030:23:10"},{"expression":{"baseExpression":{"id":2207,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"4071:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2209,"indexExpression":{"id":2208,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"4087:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2202,"id":2210,"nodeType":"Return","src":"4064:31:10"}]},"documentation":{"id":2195,"nodeType":"StructuredDocumentation","src":"3880:50:10","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":2212,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:10","nodeType":"FunctionDefinition","overrides":{"id":2199,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:10"},"parameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:10","nodeType":"VariableDeclaration","scope":2212,"src":"3956:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2196,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:10"},"returnParameters":{"id":2202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2212,"src":"4011:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2200,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:10"},"scope":2882,"src":"3935:167:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2979],"body":{"id":2228,"nodeType":"Block","src":"4253:69:10","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2222,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"4282:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4282:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2224,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"4296:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2225,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"4306:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2221,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"4263:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4263:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2227,"nodeType":"ExpressionStatement","src":"4263:52:10"}]},"documentation":{"id":2213,"nodeType":"StructuredDocumentation","src":"4108:56:10","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":2229,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:10","nodeType":"FunctionDefinition","overrides":{"id":2219,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:10"},"parameters":{"id":2218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2215,"mutability":"mutable","name":"operator","nameLocation":"4204:8:10","nodeType":"VariableDeclaration","scope":2229,"src":"4196:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2214,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2217,"mutability":"mutable","name":"approved","nameLocation":"4219:8:10","nodeType":"VariableDeclaration","scope":2229,"src":"4214:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2216,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:10"},"returnParameters":{"id":2220,"nodeType":"ParameterList","parameters":[],"src":"4253:0:10"},"scope":2882,"src":"4169:153:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2997],"body":{"id":2246,"nodeType":"Block","src":"4491:59:10","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2240,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"4508:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2242,"indexExpression":{"id":2241,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"4527:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2244,"indexExpression":{"id":2243,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"4534:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2239,"id":2245,"nodeType":"Return","src":"4501:42:10"}]},"documentation":{"id":2230,"nodeType":"StructuredDocumentation","src":"4328:55:10","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":2247,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:10","nodeType":"FunctionDefinition","overrides":{"id":2236,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:10"},"parameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2232,"mutability":"mutable","name":"owner","nameLocation":"4422:5:10","nodeType":"VariableDeclaration","scope":2247,"src":"4414:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2231,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2234,"mutability":"mutable","name":"operator","nameLocation":"4437:8:10","nodeType":"VariableDeclaration","scope":2247,"src":"4429:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2233,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:10"},"returnParameters":{"id":2239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2247,"src":"4485:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2237,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:10"},"scope":2882,"src":"4388:162:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2963],"body":{"id":2273,"nodeType":"Block","src":"4731:207:10","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2260,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"4820:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4820:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2262,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"4834:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2259,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"4801:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4801:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4844:47:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":2258,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4793:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4793:99:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2266,"nodeType":"ExpressionStatement","src":"4793:99:10"},{"expression":{"arguments":[{"id":2268,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"4913:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2269,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"4919:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2270,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"4923:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2267,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"4903:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4903:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2272,"nodeType":"ExpressionStatement","src":"4903:28:10"}]},"documentation":{"id":2248,"nodeType":"StructuredDocumentation","src":"4556:51:10","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":2274,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:10","nodeType":"FunctionDefinition","overrides":{"id":2256,"nodeType":"OverrideSpecifier","overrides":[],"src":"4722:8:10"},"parameters":{"id":2255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"mutability":"mutable","name":"from","nameLocation":"4651:4:10","nodeType":"VariableDeclaration","scope":2274,"src":"4643:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2249,"name":"address","nodeType":"ElementaryTypeName","src":"4643:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2252,"mutability":"mutable","name":"to","nameLocation":"4673:2:10","nodeType":"VariableDeclaration","scope":2274,"src":"4665:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2251,"name":"address","nodeType":"ElementaryTypeName","src":"4665:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2254,"mutability":"mutable","name":"tokenId","nameLocation":"4693:7:10","nodeType":"VariableDeclaration","scope":2274,"src":"4685:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2253,"name":"uint256","nodeType":"ElementaryTypeName","src":"4685:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:73:10"},"returnParameters":{"id":2257,"nodeType":"ParameterList","parameters":[],"src":"4731:0:10"},"scope":2882,"src":"4612:326:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2953],"body":{"id":2292,"nodeType":"Block","src":"5127:56:10","statements":[{"expression":{"arguments":[{"id":2286,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"5154:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2287,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"5160:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2288,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"5164:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5173:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2285,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[2293,2323],"referencedDeclaration":2323,"src":"5137:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2291,"nodeType":"ExpressionStatement","src":"5137:39:10"}]},"documentation":{"id":2275,"nodeType":"StructuredDocumentation","src":"4944:55:10","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":2293,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5013:16:10","nodeType":"FunctionDefinition","overrides":{"id":2283,"nodeType":"OverrideSpecifier","overrides":[],"src":"5118:8:10"},"parameters":{"id":2282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"mutability":"mutable","name":"from","nameLocation":"5047:4:10","nodeType":"VariableDeclaration","scope":2293,"src":"5039:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2276,"name":"address","nodeType":"ElementaryTypeName","src":"5039:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2279,"mutability":"mutable","name":"to","nameLocation":"5069:2:10","nodeType":"VariableDeclaration","scope":2293,"src":"5061:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2278,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2281,"mutability":"mutable","name":"tokenId","nameLocation":"5089:7:10","nodeType":"VariableDeclaration","scope":2293,"src":"5081:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2280,"name":"uint256","nodeType":"ElementaryTypeName","src":"5081:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5029:73:10"},"returnParameters":{"id":2284,"nodeType":"ParameterList","parameters":[],"src":"5127:0:10"},"scope":2882,"src":"5004:179:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2943],"body":{"id":2322,"nodeType":"Block","src":"5399:164:10","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2308,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"5436:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5436:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2310,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"5450:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2307,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"5417:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5417:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":2312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5460:47:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":2306,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5409:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5409:99:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2314,"nodeType":"ExpressionStatement","src":"5409:99:10"},{"expression":{"arguments":[{"id":2316,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"5532:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2317,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"5538:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2318,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"5542:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2319,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"5551:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2315,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"5518:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5518:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2321,"nodeType":"ExpressionStatement","src":"5518:38:10"}]},"documentation":{"id":2294,"nodeType":"StructuredDocumentation","src":"5189:55:10","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":2323,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5258:16:10","nodeType":"FunctionDefinition","overrides":{"id":2304,"nodeType":"OverrideSpecifier","overrides":[],"src":"5390:8:10"},"parameters":{"id":2303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"mutability":"mutable","name":"from","nameLocation":"5292:4:10","nodeType":"VariableDeclaration","scope":2323,"src":"5284:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2295,"name":"address","nodeType":"ElementaryTypeName","src":"5284:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2298,"mutability":"mutable","name":"to","nameLocation":"5314:2:10","nodeType":"VariableDeclaration","scope":2323,"src":"5306:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2297,"name":"address","nodeType":"ElementaryTypeName","src":"5306:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2300,"mutability":"mutable","name":"tokenId","nameLocation":"5334:7:10","nodeType":"VariableDeclaration","scope":2323,"src":"5326:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2299,"name":"uint256","nodeType":"ElementaryTypeName","src":"5326:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2302,"mutability":"mutable","name":"data","nameLocation":"5364:4:10","nodeType":"VariableDeclaration","scope":2323,"src":"5351:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2301,"name":"bytes","nodeType":"ElementaryTypeName","src":"5351:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5274:100:10"},"returnParameters":{"id":2305,"nodeType":"ParameterList","parameters":[],"src":"5399:0:10"},"scope":2882,"src":"5249:314:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2351,"nodeType":"Block","src":"6564:165:10","statements":[{"expression":{"arguments":[{"id":2336,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"6584:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2337,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"6590:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2338,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"6594:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2335,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"6574:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6574:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2340,"nodeType":"ExpressionStatement","src":"6574:28:10"},{"expression":{"arguments":[{"arguments":[{"id":2343,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"6643:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2344,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"6649:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2345,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"6653:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2346,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"6662:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2342,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"6620:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6620:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6669:52:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":2341,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6612:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6612:110:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2350,"nodeType":"ExpressionStatement","src":"6612:110:10"}]},"documentation":{"id":2324,"nodeType":"StructuredDocumentation","src":"5569:850:10","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2352,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6433:13:10","nodeType":"FunctionDefinition","parameters":{"id":2333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2326,"mutability":"mutable","name":"from","nameLocation":"6464:4:10","nodeType":"VariableDeclaration","scope":2352,"src":"6456:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2325,"name":"address","nodeType":"ElementaryTypeName","src":"6456:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2328,"mutability":"mutable","name":"to","nameLocation":"6486:2:10","nodeType":"VariableDeclaration","scope":2352,"src":"6478:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2327,"name":"address","nodeType":"ElementaryTypeName","src":"6478:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2330,"mutability":"mutable","name":"tokenId","nameLocation":"6506:7:10","nodeType":"VariableDeclaration","scope":2352,"src":"6498:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2329,"name":"uint256","nodeType":"ElementaryTypeName","src":"6498:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2332,"mutability":"mutable","name":"data","nameLocation":"6536:4:10","nodeType":"VariableDeclaration","scope":2352,"src":"6523:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2331,"name":"bytes","nodeType":"ElementaryTypeName","src":"6523:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6446:100:10"},"returnParameters":{"id":2334,"nodeType":"ParameterList","parameters":[],"src":"6564:0:10"},"scope":2882,"src":"6424:305:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2364,"nodeType":"Block","src":"6913:40:10","statements":[{"expression":{"baseExpression":{"id":2360,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"6930:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2362,"indexExpression":{"id":2361,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"6938:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6930:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2359,"id":2363,"nodeType":"Return","src":"6923:23:10"}]},"documentation":{"id":2353,"nodeType":"StructuredDocumentation","src":"6735:98:10","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"},"id":2365,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"6847:8:10","nodeType":"FunctionDefinition","parameters":{"id":2356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2355,"mutability":"mutable","name":"tokenId","nameLocation":"6864:7:10","nodeType":"VariableDeclaration","scope":2365,"src":"6856:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2354,"name":"uint256","nodeType":"ElementaryTypeName","src":"6856:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6855:17:10"},"returnParameters":{"id":2359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2365,"src":"6904:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2357,"name":"address","nodeType":"ElementaryTypeName","src":"6904:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6903:9:10"},"scope":2882,"src":"6838:115:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2382,"nodeType":"Block","src":"7327:55:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2374,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"7353:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2373,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"7344:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7344:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7373:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7365:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2376,"name":"address","nodeType":"ElementaryTypeName","src":"7365:7:10","typeDescriptions":{}}},"id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7365:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7344:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2372,"id":2381,"nodeType":"Return","src":"7337:38:10"}]},"documentation":{"id":2366,"nodeType":"StructuredDocumentation","src":"6959:292:10","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":2383,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7265:7:10","nodeType":"FunctionDefinition","parameters":{"id":2369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"tokenId","nameLocation":"7281:7:10","nodeType":"VariableDeclaration","scope":2383,"src":"7273:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2367,"name":"uint256","nodeType":"ElementaryTypeName","src":"7273:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7272:17:10"},"returnParameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2383,"src":"7321:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2370,"name":"bool","nodeType":"ElementaryTypeName","src":"7321:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7320:6:10"},"scope":2882,"src":"7256:126:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2416,"nodeType":"Block","src":"7639:162:10","statements":[{"assignments":[2394],"declarations":[{"constant":false,"id":2394,"mutability":"mutable","name":"owner","nameLocation":"7657:5:10","nodeType":"VariableDeclaration","scope":2416,"src":"7649:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2393,"name":"address","nodeType":"ElementaryTypeName","src":"7649:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2399,"initialValue":{"arguments":[{"id":2397,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"7680:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2395,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"7665:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2882_$","typeString":"type(contract ERC721)"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2083,"src":"7665:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7665:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7649:39:10"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2400,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"7706:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2401,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"7717:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7706:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2404,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"7743:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2405,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"7750:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2403,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"7726:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7726:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7706:52:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2409,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"7774:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2408,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"7762:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7762:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2411,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"7786:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7762:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7706:87:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2414,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7705:89:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2392,"id":2415,"nodeType":"Return","src":"7698:96:10"}]},"documentation":{"id":2384,"nodeType":"StructuredDocumentation","src":"7388:147:10","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":2417,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7549:18:10","nodeType":"FunctionDefinition","parameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2386,"mutability":"mutable","name":"spender","nameLocation":"7576:7:10","nodeType":"VariableDeclaration","scope":2417,"src":"7568:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2385,"name":"address","nodeType":"ElementaryTypeName","src":"7568:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2388,"mutability":"mutable","name":"tokenId","nameLocation":"7593:7:10","nodeType":"VariableDeclaration","scope":2417,"src":"7585:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2387,"name":"uint256","nodeType":"ElementaryTypeName","src":"7585:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7567:34:10"},"returnParameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2417,"src":"7633:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2390,"name":"bool","nodeType":"ElementaryTypeName","src":"7633:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7632:6:10"},"scope":2882,"src":"7540:261:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2431,"nodeType":"Block","src":"8196:43:10","statements":[{"expression":{"arguments":[{"id":2426,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"8216:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2427,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"8220:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8229:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2425,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[2432,2461],"referencedDeclaration":2461,"src":"8206:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8206:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2430,"nodeType":"ExpressionStatement","src":"8206:26:10"}]},"documentation":{"id":2418,"nodeType":"StructuredDocumentation","src":"7807:319:10","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2432,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8140:9:10","nodeType":"FunctionDefinition","parameters":{"id":2423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2420,"mutability":"mutable","name":"to","nameLocation":"8158:2:10","nodeType":"VariableDeclaration","scope":2432,"src":"8150:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2419,"name":"address","nodeType":"ElementaryTypeName","src":"8150:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2422,"mutability":"mutable","name":"tokenId","nameLocation":"8170:7:10","nodeType":"VariableDeclaration","scope":2432,"src":"8162:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2421,"name":"uint256","nodeType":"ElementaryTypeName","src":"8162:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8149:29:10"},"returnParameters":{"id":2424,"nodeType":"ParameterList","parameters":[],"src":"8196:0:10"},"scope":2882,"src":"8131:108:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2460,"nodeType":"Block","src":"8574:195:10","statements":[{"expression":{"arguments":[{"id":2443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"8590:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2444,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"8594:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2442,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"8584:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8584:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2446,"nodeType":"ExpressionStatement","src":"8584:18:10"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":2451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8664:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8656:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2449,"name":"address","nodeType":"ElementaryTypeName","src":"8656:7:10","typeDescriptions":{}}},"id":2452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8656:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2453,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"8668:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2454,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"8672:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2455,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"8681:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2448,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"8633:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8633:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":2457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8700:52:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":2447,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8612:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8612:150:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2459,"nodeType":"ExpressionStatement","src":"8612:150:10"}]},"documentation":{"id":2433,"nodeType":"StructuredDocumentation","src":"8245:210:10","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2461,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8469:9:10","nodeType":"FunctionDefinition","parameters":{"id":2440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2435,"mutability":"mutable","name":"to","nameLocation":"8496:2:10","nodeType":"VariableDeclaration","scope":2461,"src":"8488:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2434,"name":"address","nodeType":"ElementaryTypeName","src":"8488:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2437,"mutability":"mutable","name":"tokenId","nameLocation":"8516:7:10","nodeType":"VariableDeclaration","scope":2461,"src":"8508:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2436,"name":"uint256","nodeType":"ElementaryTypeName","src":"8508:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2439,"mutability":"mutable","name":"data","nameLocation":"8546:4:10","nodeType":"VariableDeclaration","scope":2461,"src":"8533:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2438,"name":"bytes","nodeType":"ElementaryTypeName","src":"8533:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8478:78:10"},"returnParameters":{"id":2441,"nodeType":"ParameterList","parameters":[],"src":"8574:0:10"},"scope":2882,"src":"8460:309:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2537,"nodeType":"Block","src":"9152:859:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2470,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"9170:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9184:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9176:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2471,"name":"address","nodeType":"ElementaryTypeName","src":"9176:7:10","typeDescriptions":{}}},"id":2474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9176:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9170:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":2476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9188:34:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":2469,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9162:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9162:61:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2478,"nodeType":"ExpressionStatement","src":"9162:61:10"},{"expression":{"arguments":[{"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9241:17:10","subExpression":{"arguments":[{"id":2481,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"9250:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2480,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"9242:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9242:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":2484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9260:30:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":2479,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9233:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9233:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2486,"nodeType":"ExpressionStatement","src":"9233:58:10"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9331:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9323:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2488,"name":"address","nodeType":"ElementaryTypeName","src":"9323:7:10","typeDescriptions":{}}},"id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9323:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2492,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"9335:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2493,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"9339:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9348:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2487,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"9302:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9302:48:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2496,"nodeType":"ExpressionStatement","src":"9302:48:10"},{"expression":{"arguments":[{"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9445:17:10","subExpression":{"arguments":[{"id":2499,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"9454:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2498,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"9446:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9446:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9464:30:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":2497,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9437:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9437:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2504,"nodeType":"ExpressionStatement","src":"9437:58:10"},{"id":2511,"nodeType":"UncheckedBlock","src":"9506:360:10","statements":[{"expression":{"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2505,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"9837:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2507,"indexExpression":{"id":2506,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"9847:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9837:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9854:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9837:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2510,"nodeType":"ExpressionStatement","src":"9837:18:10"}]},{"expression":{"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2512,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"9876:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2514,"indexExpression":{"id":2513,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"9884:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9876:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2515,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"9895:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9876:21:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2517,"nodeType":"ExpressionStatement","src":"9876:21:10"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2519,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:10","typeDescriptions":{}}},"id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9922:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2523,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"9934:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2524,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"9938:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2518,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"9913:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9913:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2526,"nodeType":"EmitStatement","src":"9908:38:10"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9985:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9977:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2528,"name":"address","nodeType":"ElementaryTypeName","src":"9977:7:10","typeDescriptions":{}}},"id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9977:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2532,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"9989:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2533,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"9993:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10002:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2527,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"9957:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9957:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2536,"nodeType":"ExpressionStatement","src":"9957:47:10"}]},"documentation":{"id":2462,"nodeType":"StructuredDocumentation","src":"8775:311:10","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":2538,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9100:5:10","nodeType":"FunctionDefinition","parameters":{"id":2467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2464,"mutability":"mutable","name":"to","nameLocation":"9114:2:10","nodeType":"VariableDeclaration","scope":2538,"src":"9106:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2463,"name":"address","nodeType":"ElementaryTypeName","src":"9106:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2466,"mutability":"mutable","name":"tokenId","nameLocation":"9126:7:10","nodeType":"VariableDeclaration","scope":2538,"src":"9118:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2465,"name":"uint256","nodeType":"ElementaryTypeName","src":"9118:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9105:29:10"},"returnParameters":{"id":2468,"nodeType":"ParameterList","parameters":[],"src":"9152:0:10"},"scope":2882,"src":"9091:920:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2604,"nodeType":"Block","src":"10386:713:10","statements":[{"assignments":[2545],"declarations":[{"constant":false,"id":2545,"mutability":"mutable","name":"owner","nameLocation":"10404:5:10","nodeType":"VariableDeclaration","scope":2604,"src":"10396:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2544,"name":"address","nodeType":"ElementaryTypeName","src":"10396:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2550,"initialValue":{"arguments":[{"id":2548,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"10427:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2546,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"10412:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2882_$","typeString":"type(contract ERC721)"}},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2083,"src":"10412:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10412:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10396:39:10"},{"expression":{"arguments":[{"id":2552,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"10467:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10482:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10474:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2553,"name":"address","nodeType":"ElementaryTypeName","src":"10474:7:10","typeDescriptions":{}}},"id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10474:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2557,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"10486:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10495:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2551,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"10446:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10446:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2560,"nodeType":"ExpressionStatement","src":"10446:51:10"},{"expression":{"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2561,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"10599:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2564,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"10622:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2562,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"10607:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2882_$","typeString":"type(contract ERC721)"}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2083,"src":"10607:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10607:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10599:31:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2567,"nodeType":"ExpressionStatement","src":"10599:31:10"},{"expression":{"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10668:31:10","subExpression":{"baseExpression":{"id":2568,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"10675:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2570,"indexExpression":{"id":2569,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"10691:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10675:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2572,"nodeType":"ExpressionStatement","src":"10668:31:10"},{"id":2579,"nodeType":"UncheckedBlock","src":"10710:237:10","statements":[{"expression":{"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2573,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"10915:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2575,"indexExpression":{"id":2574,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"10925:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10915:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10935:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10915:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2578,"nodeType":"ExpressionStatement","src":"10915:21:10"}]},{"expression":{"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10956:23:10","subExpression":{"baseExpression":{"id":2580,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"10963:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2582,"indexExpression":{"id":2581,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"10971:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10963:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2584,"nodeType":"ExpressionStatement","src":"10956:23:10"},{"eventCall":{"arguments":[{"id":2586,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"11004:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11019:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11011:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2587,"name":"address","nodeType":"ElementaryTypeName","src":"11011:7:10","typeDescriptions":{}}},"id":2590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11011:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2591,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"11023:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2585,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"10995:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10995:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2593,"nodeType":"EmitStatement","src":"10990:41:10"},{"expression":{"arguments":[{"id":2595,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"11062:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11077:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11069:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2596,"name":"address","nodeType":"ElementaryTypeName","src":"11069:7:10","typeDescriptions":{}}},"id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11069:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2600,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"11081:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11090:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2594,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"11042:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11042:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2603,"nodeType":"ExpressionStatement","src":"11042:50:10"}]},"documentation":{"id":2539,"nodeType":"StructuredDocumentation","src":"10017:315:10","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":2605,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10346:5:10","nodeType":"FunctionDefinition","parameters":{"id":2542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2541,"mutability":"mutable","name":"tokenId","nameLocation":"10360:7:10","nodeType":"VariableDeclaration","scope":2605,"src":"10352:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2540,"name":"uint256","nodeType":"ElementaryTypeName","src":"10352:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10351:17:10"},"returnParameters":{"id":2543,"nodeType":"ParameterList","parameters":[],"src":"10386:0:10"},"scope":2882,"src":"10337:762:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2689,"nodeType":"Block","src":"11532:1124:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2618,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"11565:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2616,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"11550:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2882_$","typeString":"type(contract ERC721)"}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2083,"src":"11550:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11550:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2620,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"11577:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11550:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":2622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11583:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":2615,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11542:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11542:81:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2624,"nodeType":"ExpressionStatement","src":"11542:81:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2626,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"11641:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11655:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11647:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2627,"name":"address","nodeType":"ElementaryTypeName","src":"11647:7:10","typeDescriptions":{}}},"id":2630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11647:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11641:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11659:38:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":2625,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11633:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11633:65:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2634,"nodeType":"ExpressionStatement","src":"11633:65:10"},{"expression":{"arguments":[{"id":2636,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"11730:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2637,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"11736:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2638,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"11740:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11749:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2635,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"11709:20:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11709:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2641,"nodeType":"ExpressionStatement","src":"11709:42:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2645,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"11866:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2643,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"11851:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2882_$","typeString":"type(contract ERC721)"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2083,"src":"11851:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11851:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2647,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"11878:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11851:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11884:39:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":2642,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11843:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11843:81:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2651,"nodeType":"ExpressionStatement","src":"11843:81:10"},{"expression":{"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11986:31:10","subExpression":{"baseExpression":{"id":2652,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"11993:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2654,"indexExpression":{"id":2653,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"12009:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11993:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2656,"nodeType":"ExpressionStatement","src":"11986:31:10"},{"id":2669,"nodeType":"UncheckedBlock","src":"12028:496:10","statements":[{"expression":{"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2657,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"12461:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2659,"indexExpression":{"id":2658,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"12471:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12461:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12480:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12461:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2662,"nodeType":"ExpressionStatement","src":"12461:20:10"},{"expression":{"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2663,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"12495:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2665,"indexExpression":{"id":2664,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"12505:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12495:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12512:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12495:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2668,"nodeType":"ExpressionStatement","src":"12495:18:10"}]},{"expression":{"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2670,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"12533:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2672,"indexExpression":{"id":2671,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"12541:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12533:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2673,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"12552:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12533:21:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2675,"nodeType":"ExpressionStatement","src":"12533:21:10"},{"eventCall":{"arguments":[{"id":2677,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"12579:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2678,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"12585:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2679,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"12589:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2676,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"12570:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12570:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2681,"nodeType":"EmitStatement","src":"12565:32:10"},{"expression":{"arguments":[{"id":2683,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"12628:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2684,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"12634:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2685,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"12638:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12647:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2682,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"12608:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12608:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2688,"nodeType":"ExpressionStatement","src":"12608:41:10"}]},"documentation":{"id":2606,"nodeType":"StructuredDocumentation","src":"11105:313:10","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":2690,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11432:9:10","nodeType":"FunctionDefinition","parameters":{"id":2613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2608,"mutability":"mutable","name":"from","nameLocation":"11459:4:10","nodeType":"VariableDeclaration","scope":2690,"src":"11451:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2607,"name":"address","nodeType":"ElementaryTypeName","src":"11451:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2610,"mutability":"mutable","name":"to","nameLocation":"11481:2:10","nodeType":"VariableDeclaration","scope":2690,"src":"11473:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2609,"name":"address","nodeType":"ElementaryTypeName","src":"11473:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2612,"mutability":"mutable","name":"tokenId","nameLocation":"11501:7:10","nodeType":"VariableDeclaration","scope":2690,"src":"11493:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2611,"name":"uint256","nodeType":"ElementaryTypeName","src":"11493:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11441:73:10"},"returnParameters":{"id":2614,"nodeType":"ParameterList","parameters":[],"src":"11532:0:10"},"scope":2882,"src":"11423:1233:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2713,"nodeType":"Block","src":"12832:107:10","statements":[{"expression":{"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2698,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"12842:15:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2700,"indexExpression":{"id":2699,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"12858:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12842:24:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2701,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"12869:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12842:29:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2703,"nodeType":"ExpressionStatement","src":"12842:29:10"},{"eventCall":{"arguments":[{"arguments":[{"id":2707,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"12910:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2705,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"12895:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2882_$","typeString":"type(contract ERC721)"}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2083,"src":"12895:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12895:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2709,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"12920:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2710,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"12924:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2704,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"12886:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12886:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2712,"nodeType":"EmitStatement","src":"12881:51:10"}]},"documentation":{"id":2691,"nodeType":"StructuredDocumentation","src":"12662:101:10","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":2714,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"12777:8:10","nodeType":"FunctionDefinition","parameters":{"id":2696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2693,"mutability":"mutable","name":"to","nameLocation":"12794:2:10","nodeType":"VariableDeclaration","scope":2714,"src":"12786:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2692,"name":"address","nodeType":"ElementaryTypeName","src":"12786:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2695,"mutability":"mutable","name":"tokenId","nameLocation":"12806:7:10","nodeType":"VariableDeclaration","scope":2714,"src":"12798:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2694,"name":"uint256","nodeType":"ElementaryTypeName","src":"12798:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12785:29:10"},"returnParameters":{"id":2697,"nodeType":"ParameterList","parameters":[],"src":"12832:0:10"},"scope":2882,"src":"12768:171:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2745,"nodeType":"Block","src":"13198:184:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2725,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"13216:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2726,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"13225:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13216:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":2728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13235:27:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":2724,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13208:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13208:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2730,"nodeType":"ExpressionStatement","src":"13208:55:10"},{"expression":{"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2731,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"13273:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2734,"indexExpression":{"id":2732,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"13292:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13273:25:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2735,"indexExpression":{"id":2733,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"13299:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13273:35:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2736,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"13311:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13273:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2738,"nodeType":"ExpressionStatement","src":"13273:46:10"},{"eventCall":{"arguments":[{"id":2740,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"13349:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2741,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"13356:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2742,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"13366:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2739,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"13334:14:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13334:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2744,"nodeType":"EmitStatement","src":"13329:46:10"}]},"documentation":{"id":2715,"nodeType":"StructuredDocumentation","src":"12945:125:10","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":2746,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13084:18:10","nodeType":"FunctionDefinition","parameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2717,"mutability":"mutable","name":"owner","nameLocation":"13120:5:10","nodeType":"VariableDeclaration","scope":2746,"src":"13112:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2716,"name":"address","nodeType":"ElementaryTypeName","src":"13112:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2719,"mutability":"mutable","name":"operator","nameLocation":"13143:8:10","nodeType":"VariableDeclaration","scope":2746,"src":"13135:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2718,"name":"address","nodeType":"ElementaryTypeName","src":"13135:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2721,"mutability":"mutable","name":"approved","nameLocation":"13166:8:10","nodeType":"VariableDeclaration","scope":2746,"src":"13161:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2720,"name":"bool","nodeType":"ElementaryTypeName","src":"13161:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13102:78:10"},"returnParameters":{"id":2723,"nodeType":"ParameterList","parameters":[],"src":"13198:0:10"},"scope":2882,"src":"13075:307:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2759,"nodeType":"Block","src":"13529:70:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":2754,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"13555:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2753,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"13547:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13547:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13565:26:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":2752,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13539:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13539:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2758,"nodeType":"ExpressionStatement","src":"13539:53:10"}]},"documentation":{"id":2747,"nodeType":"StructuredDocumentation","src":"13388:73:10","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":2760,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"13475:14:10","nodeType":"FunctionDefinition","parameters":{"id":2750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2749,"mutability":"mutable","name":"tokenId","nameLocation":"13498:7:10","nodeType":"VariableDeclaration","scope":2760,"src":"13490:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2748,"name":"uint256","nodeType":"ElementaryTypeName","src":"13490:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13489:17:10"},"returnParameters":{"id":2751,"nodeType":"ParameterList","parameters":[],"src":"13529:0:10"},"scope":2882,"src":"13466:133:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2821,"nodeType":"Block","src":"14306:676:10","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2774,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"14320:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":3186,"src":"14320:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14320:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2819,"nodeType":"Block","src":"14940:36:10","statements":[{"expression":{"hexValue":"74727565","id":2817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14961:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2773,"id":2818,"nodeType":"Return","src":"14954:11:10"}]},"id":2820,"nodeType":"IfStatement","src":"14316:660:10","trueBody":{"id":2816,"nodeType":"Block","src":"14337:597:10","statements":[{"clauses":[{"block":{"id":2796,"nodeType":"Block","src":"14451:91:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2790,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"14476:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":2791,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"14486:15:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$3016_$","typeString":"type(contract IERC721Receiver)"}},"id":2792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":3015,"src":"14486:32:10","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"14486:41:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14476:51:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2773,"id":2795,"nodeType":"Return","src":"14469:58:10"}]},"errorName":"","id":2797,"nodeType":"TryCatchClause","parameters":{"id":2789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2788,"mutability":"mutable","name":"retval","nameLocation":"14443:6:10","nodeType":"VariableDeclaration","scope":2797,"src":"14436:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2787,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14436:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14435:15:10"},"src":"14427:115:10"},{"block":{"id":2813,"nodeType":"Block","src":"14571:353:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2801,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"14593:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14593:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14610:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14593:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2811,"nodeType":"Block","src":"14720:190:10","statements":[{"AST":{"nodeType":"YulBlock","src":"14806:86:10","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14843:2:10","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"14847:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14839:3:10"},"nodeType":"YulFunctionCall","src":"14839:15:10"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"14862:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14856:5:10"},"nodeType":"YulFunctionCall","src":"14856:13:10"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14832:6:10"},"nodeType":"YulFunctionCall","src":"14832:38:10"},"nodeType":"YulExpressionStatement","src":"14832:38:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2799,"isOffset":false,"isSlot":false,"src":"14847:6:10","valueSize":1},{"declaration":2799,"isOffset":false,"isSlot":false,"src":"14862:6:10","valueSize":1}],"id":2810,"nodeType":"InlineAssembly","src":"14797:95:10"}]},"id":2812,"nodeType":"IfStatement","src":"14589:321:10","trueBody":{"id":2809,"nodeType":"Block","src":"14613:101:10","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":2806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14642:52:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":2805,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14635:6:10","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14635:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2808,"nodeType":"ExpressionStatement","src":"14635:60:10"}]}}]},"errorName":"","id":2814,"nodeType":"TryCatchClause","parameters":{"id":2800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2799,"mutability":"mutable","name":"reason","nameLocation":"14563:6:10","nodeType":"VariableDeclaration","scope":2814,"src":"14550:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2798,"name":"bytes","nodeType":"ElementaryTypeName","src":"14550:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14549:21:10"},"src":"14543:381:10"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2781,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"14392:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14392:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2783,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"14406:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2784,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"14412:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2785,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"14421:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2778,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"14371:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2777,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"14355:15:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$3016_$","typeString":"type(contract IERC721Receiver)"}},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14355:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$3016","typeString":"contract IERC721Receiver"}},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":3015,"src":"14355:36:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14355:71:10","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2815,"nodeType":"TryStatement","src":"14351:573:10"}]}}]},"documentation":{"id":2761,"nodeType":"StructuredDocumentation","src":"13605:541:10","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":2822,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"14160:22:10","nodeType":"FunctionDefinition","parameters":{"id":2770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2763,"mutability":"mutable","name":"from","nameLocation":"14200:4:10","nodeType":"VariableDeclaration","scope":2822,"src":"14192:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2762,"name":"address","nodeType":"ElementaryTypeName","src":"14192:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2765,"mutability":"mutable","name":"to","nameLocation":"14222:2:10","nodeType":"VariableDeclaration","scope":2822,"src":"14214:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2764,"name":"address","nodeType":"ElementaryTypeName","src":"14214:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2767,"mutability":"mutable","name":"tokenId","nameLocation":"14242:7:10","nodeType":"VariableDeclaration","scope":2822,"src":"14234:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2766,"name":"uint256","nodeType":"ElementaryTypeName","src":"14234:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2769,"mutability":"mutable","name":"data","nameLocation":"14272:4:10","nodeType":"VariableDeclaration","scope":2822,"src":"14259:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2768,"name":"bytes","nodeType":"ElementaryTypeName","src":"14259:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14182:100:10"},"returnParameters":{"id":2773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2822,"src":"14300:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2771,"name":"bool","nodeType":"ElementaryTypeName","src":"14300:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14299:6:10"},"scope":2882,"src":"14151:831:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2867,"nodeType":"Block","src":"15856:238:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2834,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"15870:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15882:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15870:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2866,"nodeType":"IfStatement","src":"15866:222:10","trueBody":{"id":2865,"nodeType":"Block","src":"15885:203:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2837,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"15903:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15919:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15911:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2838,"name":"address","nodeType":"ElementaryTypeName","src":"15911:7:10","typeDescriptions":{}}},"id":2841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15911:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15903:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2850,"nodeType":"IfStatement","src":"15899:85:10","trueBody":{"id":2849,"nodeType":"Block","src":"15923:61:10","statements":[{"expression":{"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2843,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"15941:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2845,"indexExpression":{"id":2844,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"15951:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15941:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2846,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"15960:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15941:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2848,"nodeType":"ExpressionStatement","src":"15941:28:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2851,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"16001:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16015:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16007:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2852,"name":"address","nodeType":"ElementaryTypeName","src":"16007:7:10","typeDescriptions":{}}},"id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16007:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16001:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2864,"nodeType":"IfStatement","src":"15997:81:10","trueBody":{"id":2863,"nodeType":"Block","src":"16019:59:10","statements":[{"expression":{"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2857,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"16037:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2859,"indexExpression":{"id":2858,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"16047:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16037:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2860,"name":"batchSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"16054:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16037:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2862,"nodeType":"ExpressionStatement","src":"16037:26:10"}]}}]}}]},"documentation":{"id":2823,"nodeType":"StructuredDocumentation","src":"14988:705:10","text":" @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2868,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"15707:20:10","nodeType":"FunctionDefinition","parameters":{"id":2832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2825,"mutability":"mutable","name":"from","nameLocation":"15745:4:10","nodeType":"VariableDeclaration","scope":2868,"src":"15737:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2824,"name":"address","nodeType":"ElementaryTypeName","src":"15737:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2827,"mutability":"mutable","name":"to","nameLocation":"15767:2:10","nodeType":"VariableDeclaration","scope":2868,"src":"15759:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2826,"name":"address","nodeType":"ElementaryTypeName","src":"15759:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2868,"src":"15779:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2828,"name":"uint256","nodeType":"ElementaryTypeName","src":"15779:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2831,"mutability":"mutable","name":"batchSize","nameLocation":"15823:9:10","nodeType":"VariableDeclaration","scope":2868,"src":"15815:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2830,"name":"uint256","nodeType":"ElementaryTypeName","src":"15815:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15727:111:10"},"returnParameters":{"id":2833,"nodeType":"ParameterList","parameters":[],"src":"15856:0:10"},"scope":2882,"src":"15698:396:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2880,"nodeType":"Block","src":"16951:2:10","statements":[]},"documentation":{"id":2869,"nodeType":"StructuredDocumentation","src":"16100:695:10","text":" @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2881,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"16809:19:10","nodeType":"FunctionDefinition","parameters":{"id":2878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2871,"mutability":"mutable","name":"from","nameLocation":"16846:4:10","nodeType":"VariableDeclaration","scope":2881,"src":"16838:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2870,"name":"address","nodeType":"ElementaryTypeName","src":"16838:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2873,"mutability":"mutable","name":"to","nameLocation":"16868:2:10","nodeType":"VariableDeclaration","scope":2881,"src":"16860:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2872,"name":"address","nodeType":"ElementaryTypeName","src":"16860:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2875,"mutability":"mutable","name":"firstTokenId","nameLocation":"16888:12:10","nodeType":"VariableDeclaration","scope":2881,"src":"16880:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2874,"name":"uint256","nodeType":"ElementaryTypeName","src":"16880:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2877,"mutability":"mutable","name":"batchSize","nameLocation":"16918:9:10","nodeType":"VariableDeclaration","scope":2881,"src":"16910:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2876,"name":"uint256","nodeType":"ElementaryTypeName","src":"16910:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16828:105:10"},"returnParameters":{"id":2879,"nodeType":"ParameterList","parameters":[],"src":"16951:0:10"},"scope":2882,"src":"16800:153:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2883,"src":"628:16327:10","usedErrors":[]}],"src":"107:16849:10"},"id":10},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[4320],"IERC721":[2998]},"id":2999,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2884,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:11"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2885,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2999,"sourceUnit":4321,"src":"133:47:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2887,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":4320,"src":"271:7:11"},"id":2888,"nodeType":"InheritanceSpecifier","src":"271:7:11"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":2886,"nodeType":"StructuredDocumentation","src":"182:67:11","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":2998,"linearizedBaseContracts":[2998,4320],"name":"IERC721","nameLocation":"260:7:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2889,"nodeType":"StructuredDocumentation","src":"285:88:11","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":2897,"name":"Transfer","nameLocation":"384:8:11","nodeType":"EventDefinition","parameters":{"id":2896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2891,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:11","nodeType":"VariableDeclaration","scope":2897,"src":"393:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2890,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2893,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:11","nodeType":"VariableDeclaration","scope":2897,"src":"415:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2892,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2895,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:11","nodeType":"VariableDeclaration","scope":2897,"src":"435:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2894,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:11"},"src":"378:82:11"},{"anonymous":false,"documentation":{"id":2898,"nodeType":"StructuredDocumentation","src":"466:94:11","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":2906,"name":"Approval","nameLocation":"571:8:11","nodeType":"EventDefinition","parameters":{"id":2905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2900,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:11","nodeType":"VariableDeclaration","scope":2906,"src":"580:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2899,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2902,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:11","nodeType":"VariableDeclaration","scope":2906,"src":"603:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2901,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2904,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:11","nodeType":"VariableDeclaration","scope":2906,"src":"629:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2903,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:11"},"src":"565:89:11"},{"anonymous":false,"documentation":{"id":2907,"nodeType":"StructuredDocumentation","src":"660:117:11","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":2915,"name":"ApprovalForAll","nameLocation":"788:14:11","nodeType":"EventDefinition","parameters":{"id":2914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2909,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:11","nodeType":"VariableDeclaration","scope":2915,"src":"803:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2908,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2911,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:11","nodeType":"VariableDeclaration","scope":2915,"src":"826:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2910,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2913,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:11","nodeType":"VariableDeclaration","scope":2915,"src":"852:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2912,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:11"},"src":"782:85:11"},{"documentation":{"id":2916,"nodeType":"StructuredDocumentation","src":"873:76:11","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2923,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:11","nodeType":"FunctionDefinition","parameters":{"id":2919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2918,"mutability":"mutable","name":"owner","nameLocation":"981:5:11","nodeType":"VariableDeclaration","scope":2923,"src":"973:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2917,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:11"},"returnParameters":{"id":2922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2921,"mutability":"mutable","name":"balance","nameLocation":"1019:7:11","nodeType":"VariableDeclaration","scope":2923,"src":"1011:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2920,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:11"},"scope":2998,"src":"954:74:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2924,"nodeType":"StructuredDocumentation","src":"1034:131:11","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2931,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:11","nodeType":"FunctionDefinition","parameters":{"id":2927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2926,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:11","nodeType":"VariableDeclaration","scope":2931,"src":"1187:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2925,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:11"},"returnParameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2929,"mutability":"mutable","name":"owner","nameLocation":"1235:5:11","nodeType":"VariableDeclaration","scope":2931,"src":"1227:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2928,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:11"},"scope":2998,"src":"1170:72:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2932,"nodeType":"StructuredDocumentation","src":"1248:556:11","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2943,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:11","nodeType":"FunctionDefinition","parameters":{"id":2941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2934,"mutability":"mutable","name":"from","nameLocation":"1852:4:11","nodeType":"VariableDeclaration","scope":2943,"src":"1844:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2933,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2936,"mutability":"mutable","name":"to","nameLocation":"1874:2:11","nodeType":"VariableDeclaration","scope":2943,"src":"1866:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2935,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2938,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:11","nodeType":"VariableDeclaration","scope":2943,"src":"1886:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2937,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2940,"mutability":"mutable","name":"data","nameLocation":"1926:4:11","nodeType":"VariableDeclaration","scope":2943,"src":"1911:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2939,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:11"},"returnParameters":{"id":2942,"nodeType":"ParameterList","parameters":[],"src":"1945:0:11"},"scope":2998,"src":"1809:137:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2944,"nodeType":"StructuredDocumentation","src":"1952:687:11","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2953,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:11","nodeType":"FunctionDefinition","parameters":{"id":2951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2946,"mutability":"mutable","name":"from","nameLocation":"2687:4:11","nodeType":"VariableDeclaration","scope":2953,"src":"2679:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2945,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2948,"mutability":"mutable","name":"to","nameLocation":"2709:2:11","nodeType":"VariableDeclaration","scope":2953,"src":"2701:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2947,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2950,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:11","nodeType":"VariableDeclaration","scope":2953,"src":"2721:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2949,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:11"},"returnParameters":{"id":2952,"nodeType":"ParameterList","parameters":[],"src":"2751:0:11"},"scope":2998,"src":"2644:108:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2954,"nodeType":"StructuredDocumentation","src":"2758:732:11","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2963,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3504:12:11","nodeType":"FunctionDefinition","parameters":{"id":2961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2956,"mutability":"mutable","name":"from","nameLocation":"3534:4:11","nodeType":"VariableDeclaration","scope":2963,"src":"3526:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2955,"name":"address","nodeType":"ElementaryTypeName","src":"3526:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2958,"mutability":"mutable","name":"to","nameLocation":"3556:2:11","nodeType":"VariableDeclaration","scope":2963,"src":"3548:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2957,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2960,"mutability":"mutable","name":"tokenId","nameLocation":"3576:7:11","nodeType":"VariableDeclaration","scope":2963,"src":"3568:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2959,"name":"uint256","nodeType":"ElementaryTypeName","src":"3568:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:73:11"},"returnParameters":{"id":2962,"nodeType":"ParameterList","parameters":[],"src":"3598:0:11"},"scope":2998,"src":"3495:104:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2964,"nodeType":"StructuredDocumentation","src":"3605:452:11","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2971,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4071:7:11","nodeType":"FunctionDefinition","parameters":{"id":2969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2966,"mutability":"mutable","name":"to","nameLocation":"4087:2:11","nodeType":"VariableDeclaration","scope":2971,"src":"4079:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2965,"name":"address","nodeType":"ElementaryTypeName","src":"4079:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2968,"mutability":"mutable","name":"tokenId","nameLocation":"4099:7:11","nodeType":"VariableDeclaration","scope":2971,"src":"4091:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2967,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4078:29:11"},"returnParameters":{"id":2970,"nodeType":"ParameterList","parameters":[],"src":"4116:0:11"},"scope":2998,"src":"4062:55:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2972,"nodeType":"StructuredDocumentation","src":"4123:309:11","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2979,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4446:17:11","nodeType":"FunctionDefinition","parameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2974,"mutability":"mutable","name":"operator","nameLocation":"4472:8:11","nodeType":"VariableDeclaration","scope":2979,"src":"4464:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2973,"name":"address","nodeType":"ElementaryTypeName","src":"4464:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2976,"mutability":"mutable","name":"_approved","nameLocation":"4487:9:11","nodeType":"VariableDeclaration","scope":2979,"src":"4482:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2975,"name":"bool","nodeType":"ElementaryTypeName","src":"4482:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4463:34:11"},"returnParameters":{"id":2978,"nodeType":"ParameterList","parameters":[],"src":"4506:0:11"},"scope":2998,"src":"4437:70:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2980,"nodeType":"StructuredDocumentation","src":"4513:139:11","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2987,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4666:11:11","nodeType":"FunctionDefinition","parameters":{"id":2983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2982,"mutability":"mutable","name":"tokenId","nameLocation":"4686:7:11","nodeType":"VariableDeclaration","scope":2987,"src":"4678:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2981,"name":"uint256","nodeType":"ElementaryTypeName","src":"4678:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4677:17:11"},"returnParameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2985,"mutability":"mutable","name":"operator","nameLocation":"4726:8:11","nodeType":"VariableDeclaration","scope":2987,"src":"4718:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2984,"name":"address","nodeType":"ElementaryTypeName","src":"4718:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4717:18:11"},"scope":2998,"src":"4657:79:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2988,"nodeType":"StructuredDocumentation","src":"4742:138:11","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2997,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4894:16:11","nodeType":"FunctionDefinition","parameters":{"id":2993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2990,"mutability":"mutable","name":"owner","nameLocation":"4919:5:11","nodeType":"VariableDeclaration","scope":2997,"src":"4911:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2989,"name":"address","nodeType":"ElementaryTypeName","src":"4911:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2992,"mutability":"mutable","name":"operator","nameLocation":"4934:8:11","nodeType":"VariableDeclaration","scope":2997,"src":"4926:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2991,"name":"address","nodeType":"ElementaryTypeName","src":"4926:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4910:33:11"},"returnParameters":{"id":2996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2997,"src":"4967:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2994,"name":"bool","nodeType":"ElementaryTypeName","src":"4967:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4966:6:11"},"scope":2998,"src":"4885:88:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2999,"src":"250:4725:11","usedErrors":[]}],"src":"108:4868:11"},"id":11},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[3016]},"id":3017,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3000,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":3001,"nodeType":"StructuredDocumentation","src":"141:152:12","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":3016,"linearizedBaseContracts":[3016],"name":"IERC721Receiver","nameLocation":"304:15:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3002,"nodeType":"StructuredDocumentation","src":"326:493:12","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":3015,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:12","nodeType":"FunctionDefinition","parameters":{"id":3011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3004,"mutability":"mutable","name":"operator","nameLocation":"867:8:12","nodeType":"VariableDeclaration","scope":3015,"src":"859:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3003,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3006,"mutability":"mutable","name":"from","nameLocation":"893:4:12","nodeType":"VariableDeclaration","scope":3015,"src":"885:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3005,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3008,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:12","nodeType":"VariableDeclaration","scope":3015,"src":"907:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3007,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3010,"mutability":"mutable","name":"data","nameLocation":"947:4:12","nodeType":"VariableDeclaration","scope":3015,"src":"932:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3009,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:12"},"returnParameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3015,"src":"976:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3012,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:12"},"scope":3016,"src":"824:160:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3017,"src":"294:692:12","usedErrors":[]}],"src":"116:871:12"},"id":12},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"Address":[3498],"Context":[3520],"ERC165":[4308],"ERC721":[2882],"ERC721URIStorage":[3141],"IERC165":[4320],"IERC721":[2998],"IERC721Metadata":[3168],"IERC721Receiver":[3016],"Math":[5185],"Strings":[3769]},"id":3142,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3018,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":3019,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3142,"sourceUnit":2883,"src":"153:23:13","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3021,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2882,"src":"286:6:13"},"id":3022,"nodeType":"InheritanceSpecifier","src":"286:6:13"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":3020,"nodeType":"StructuredDocumentation","src":"178:69:13","text":" @dev ERC721 token with storage based token URI management."},"fullyImplemented":false,"id":3141,"linearizedBaseContracts":[3141,2882,3168,2998,4308,4320,3520],"name":"ERC721URIStorage","nameLocation":"266:16:13","nodeType":"ContractDefinition","nodes":[{"id":3025,"libraryName":{"id":3023,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":3769,"src":"305:7:13"},"nodeType":"UsingForDirective","src":"299:26:13","typeName":{"id":3024,"name":"uint256","nodeType":"ElementaryTypeName","src":"317:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":3029,"mutability":"mutable","name":"_tokenURIs","nameLocation":"405:10:13","nodeType":"VariableDeclaration","scope":3141,"src":"370:45:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":3028,"keyType":{"id":3026,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"370:26:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueType":{"id":3027,"name":"string","nodeType":"ElementaryTypeName","src":"389:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[2142],"body":{"id":3087,"nodeType":"Block","src":"570:520:13","statements":[{"expression":{"arguments":[{"id":3039,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"595:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3038,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"580:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"580:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3041,"nodeType":"ExpressionStatement","src":"580:23:13"},{"assignments":[3043],"declarations":[{"constant":false,"id":3043,"mutability":"mutable","name":"_tokenURI","nameLocation":"628:9:13","nodeType":"VariableDeclaration","scope":3087,"src":"614:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3042,"name":"string","nodeType":"ElementaryTypeName","src":"614:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3047,"initialValue":{"baseExpression":{"id":3044,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"640:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":3046,"indexExpression":{"id":3045,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"651:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"640:19:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"614:45:13"},{"assignments":[3049],"declarations":[{"constant":false,"id":3049,"mutability":"mutable","name":"base","nameLocation":"683:4:13","nodeType":"VariableDeclaration","scope":3087,"src":"669:18:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3048,"name":"string","nodeType":"ElementaryTypeName","src":"669:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3052,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3050,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"690:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"690:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"669:31:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3055,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"779:4:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"773:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3053,"name":"bytes","nodeType":"ElementaryTypeName","src":"773:5:13","typeDescriptions":{}}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"773:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"773:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"795:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"773:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3063,"nodeType":"IfStatement","src":"769:70:13","trueBody":{"id":3062,"nodeType":"Block","src":"798:41:13","statements":[{"expression":{"id":3060,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"819:9:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3037,"id":3061,"nodeType":"Return","src":"812:16:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3066,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"947:9:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"941:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3064,"name":"bytes","nodeType":"ElementaryTypeName","src":"941:5:13","typeDescriptions":{}}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"941:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"941:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"967:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"941:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3081,"nodeType":"IfStatement","src":"937:106:13","trueBody":{"id":3080,"nodeType":"Block","src":"970:73:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":3075,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"1015:4:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3076,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"1021:9:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3073,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"998:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"998:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"998:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"991:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3071,"name":"string","nodeType":"ElementaryTypeName","src":"991:6:13","typeDescriptions":{}}},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"991:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3037,"id":3079,"nodeType":"Return","src":"984:48:13"}]}},{"expression":{"arguments":[{"id":3084,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"1075:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3082,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1060:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$3141_$","typeString":"type(contract super ERC721URIStorage)"}},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":2142,"src":"1060:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1060:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3037,"id":3086,"nodeType":"Return","src":"1053:30:13"}]},"documentation":{"id":3030,"nodeType":"StructuredDocumentation","src":"422:55:13","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":3088,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"491:8:13","nodeType":"FunctionDefinition","overrides":{"id":3034,"nodeType":"OverrideSpecifier","overrides":[],"src":"537:8:13"},"parameters":{"id":3033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3032,"mutability":"mutable","name":"tokenId","nameLocation":"508:7:13","nodeType":"VariableDeclaration","scope":3088,"src":"500:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3031,"name":"uint256","nodeType":"ElementaryTypeName","src":"500:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"499:17:13"},"returnParameters":{"id":3037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3088,"src":"555:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3035,"name":"string","nodeType":"ElementaryTypeName","src":"555:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"554:15:13"},"scope":3141,"src":"482:608:13","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3109,"nodeType":"Block","src":"1318:133:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":3098,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"1344:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3097,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"1336:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1336:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e","id":3100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1354:48:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""},"value":"ERC721URIStorage: URI set of nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""}],"id":3096,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1328:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1328:75:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3102,"nodeType":"ExpressionStatement","src":"1328:75:13"},{"expression":{"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3103,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"1413:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":3105,"indexExpression":{"id":3104,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"1424:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1413:19:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3106,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"1435:9:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1413:31:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3108,"nodeType":"ExpressionStatement","src":"1413:31:13"}]},"documentation":{"id":3089,"nodeType":"StructuredDocumentation","src":"1096:136:13","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":3110,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1246:12:13","nodeType":"FunctionDefinition","parameters":{"id":3094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"tokenId","nameLocation":"1267:7:13","nodeType":"VariableDeclaration","scope":3110,"src":"1259:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3090,"name":"uint256","nodeType":"ElementaryTypeName","src":"1259:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3093,"mutability":"mutable","name":"_tokenURI","nameLocation":"1290:9:13","nodeType":"VariableDeclaration","scope":3110,"src":"1276:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3092,"name":"string","nodeType":"ElementaryTypeName","src":"1276:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1258:42:13"},"returnParameters":{"id":3095,"nodeType":"ParameterList","parameters":[],"src":"1318:0:13"},"scope":3141,"src":"1237:214:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[2605],"body":{"id":3139,"nodeType":"Block","src":"1727:142:13","statements":[{"expression":{"arguments":[{"id":3120,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"1749:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3117,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1737:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$3141_$","typeString":"type(contract super ERC721URIStorage)"}},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":2605,"src":"1737:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1737:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3122,"nodeType":"ExpressionStatement","src":"1737:20:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":3125,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"1778:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":3127,"indexExpression":{"id":3126,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"1789:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1778:19:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":3124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1772:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3123,"name":"bytes","nodeType":"ElementaryTypeName","src":"1772:5:13","typeDescriptions":{}}},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1772:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1772:33:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1809:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1772:38:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3138,"nodeType":"IfStatement","src":"1768:95:13","trueBody":{"id":3137,"nodeType":"Block","src":"1812:51:13","statements":[{"expression":{"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1826:26:13","subExpression":{"baseExpression":{"id":3132,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"1833:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":3134,"indexExpression":{"id":3133,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"1844:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1833:19:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3136,"nodeType":"ExpressionStatement","src":"1826:26:13"}]}}]},"documentation":{"id":3111,"nodeType":"StructuredDocumentation","src":"1457:207:13","text":" @dev See {ERC721-_burn}. This override additionally checks to see if a\n token-specific URI was set for the token, and if so, it deletes the token URI from\n the storage mapping."},"id":3140,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"1678:5:13","nodeType":"FunctionDefinition","overrides":{"id":3115,"nodeType":"OverrideSpecifier","overrides":[],"src":"1718:8:13"},"parameters":{"id":3114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3113,"mutability":"mutable","name":"tokenId","nameLocation":"1692:7:13","nodeType":"VariableDeclaration","scope":3140,"src":"1684:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3112,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1683:17:13"},"returnParameters":{"id":3116,"nodeType":"ParameterList","parameters":[],"src":"1727:0:13"},"scope":3141,"src":"1669:200:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3142,"src":"248:1623:13","usedErrors":[]}],"src":"128:1744:13"},"id":13},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[4320],"IERC721":[2998],"IERC721Metadata":[3168]},"id":3169,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3143,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":3144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3169,"sourceUnit":2999,"src":"137:24:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3146,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2998,"src":"326:7:14"},"id":3147,"nodeType":"InheritanceSpecifier","src":"326:7:14"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":3145,"nodeType":"StructuredDocumentation","src":"163:133:14","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":3168,"linearizedBaseContracts":[3168,2998,4320],"name":"IERC721Metadata","nameLocation":"307:15:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3148,"nodeType":"StructuredDocumentation","src":"340:58:14","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":3153,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:14","nodeType":"FunctionDefinition","parameters":{"id":3149,"nodeType":"ParameterList","parameters":[],"src":"416:2:14"},"returnParameters":{"id":3152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3153,"src":"442:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3150,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:14"},"scope":3168,"src":"403:54:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3154,"nodeType":"StructuredDocumentation","src":"463:60:14","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":3159,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:14","nodeType":"FunctionDefinition","parameters":{"id":3155,"nodeType":"ParameterList","parameters":[],"src":"543:2:14"},"returnParameters":{"id":3158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3159,"src":"569:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3156,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:14"},"scope":3168,"src":"528:56:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3160,"nodeType":"StructuredDocumentation","src":"590:90:14","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":3167,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:14","nodeType":"FunctionDefinition","parameters":{"id":3163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3162,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:14","nodeType":"VariableDeclaration","scope":3167,"src":"703:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3161,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:14"},"returnParameters":{"id":3166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3167,"src":"743:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3164,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:14"},"scope":3168,"src":"685:73:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3169,"src":"297:463:14","usedErrors":[]}],"src":"112:649:14"},"id":14},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[3498]},"id":3499,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3170,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":3171,"nodeType":"StructuredDocumentation","src":"126:67:15","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":3498,"linearizedBaseContracts":[3498],"name":"Address","nameLocation":"202:7:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":3185,"nodeType":"Block","src":"1241:254:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3179,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"1465:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3178,"id":3184,"nodeType":"Return","src":"1458:30:15"}]},"documentation":{"id":3172,"nodeType":"StructuredDocumentation","src":"216:954:15","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":3186,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:15","nodeType":"FunctionDefinition","parameters":{"id":3175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3174,"mutability":"mutable","name":"account","nameLocation":"1203:7:15","nodeType":"VariableDeclaration","scope":3186,"src":"1195:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3173,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:15"},"returnParameters":{"id":3178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3186,"src":"1235:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3176,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:15"},"scope":3498,"src":"1175:320:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3219,"nodeType":"Block","src":"2483:241:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3197,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3498","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3498","typeString":"library Address"}],"id":3196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3195,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:15","typeDescriptions":{}}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3200,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"2526:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":3202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":3194,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3204,"nodeType":"ExpressionStatement","src":"2493:73:15"},{"assignments":[3206,null],"declarations":[{"constant":false,"id":3206,"mutability":"mutable","name":"success","nameLocation":"2583:7:15","nodeType":"VariableDeclaration","scope":3219,"src":"2578:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3205,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3213,"initialValue":{"arguments":[{"hexValue":"","id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3207,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"2596:9:15","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3209,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"2618:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:15"},{"expression":{"arguments":[{"id":3215,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"2647:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":3216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":3214,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3218,"nodeType":"ExpressionStatement","src":"2639:78:15"}]},"documentation":{"id":3187,"nodeType":"StructuredDocumentation","src":"1501:906:15","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":3220,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:15","nodeType":"FunctionDefinition","parameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3189,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:15","nodeType":"VariableDeclaration","scope":3220,"src":"2431:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3188,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:15","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3191,"mutability":"mutable","name":"amount","nameLocation":"2466:6:15","nodeType":"VariableDeclaration","scope":3220,"src":"2458:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3190,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:15"},"returnParameters":{"id":3193,"nodeType":"ParameterList","parameters":[],"src":"2483:0:15"},"scope":3498,"src":"2412:312:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3237,"nodeType":"Block","src":"3555:96:15","statements":[{"expression":{"arguments":[{"id":3231,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"3594:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3232,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3225,"src":"3602:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":3230,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3278,3322],"referencedDeclaration":3322,"src":"3572:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:72:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3229,"id":3236,"nodeType":"Return","src":"3565:79:15"}]},"documentation":{"id":3221,"nodeType":"StructuredDocumentation","src":"2730:731:15","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":3238,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:15","nodeType":"FunctionDefinition","parameters":{"id":3226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3223,"mutability":"mutable","name":"target","nameLocation":"3496:6:15","nodeType":"VariableDeclaration","scope":3238,"src":"3488:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3222,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3225,"mutability":"mutable","name":"data","nameLocation":"3517:4:15","nodeType":"VariableDeclaration","scope":3238,"src":"3504:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3224,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:15"},"returnParameters":{"id":3229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3238,"src":"3541:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3227,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:15"},"scope":3498,"src":"3466:185:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3257,"nodeType":"Block","src":"4020:76:15","statements":[{"expression":{"arguments":[{"id":3251,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"4059:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3252,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"4067:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3254,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"4076:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3250,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3278,3322],"referencedDeclaration":3322,"src":"4037:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4037:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3249,"id":3256,"nodeType":"Return","src":"4030:59:15"}]},"documentation":{"id":3239,"nodeType":"StructuredDocumentation","src":"3657:211:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":3258,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:15","nodeType":"FunctionDefinition","parameters":{"id":3246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3241,"mutability":"mutable","name":"target","nameLocation":"3912:6:15","nodeType":"VariableDeclaration","scope":3258,"src":"3904:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3240,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3243,"mutability":"mutable","name":"data","nameLocation":"3941:4:15","nodeType":"VariableDeclaration","scope":3258,"src":"3928:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3242,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3245,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:15","nodeType":"VariableDeclaration","scope":3258,"src":"3955:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3244,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:15"},"returnParameters":{"id":3249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3258,"src":"4006:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3247,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:15"},"scope":3498,"src":"3873:223:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3277,"nodeType":"Block","src":"4601:111:15","statements":[{"expression":{"arguments":[{"id":3271,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"4640:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3272,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"4648:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"4654:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":3274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":3270,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3278,3322],"referencedDeclaration":3322,"src":"4618:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4618:87:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3269,"id":3276,"nodeType":"Return","src":"4611:94:15"}]},"documentation":{"id":3259,"nodeType":"StructuredDocumentation","src":"4102:351:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":3278,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:15","nodeType":"FunctionDefinition","parameters":{"id":3266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"target","nameLocation":"4506:6:15","nodeType":"VariableDeclaration","scope":3278,"src":"4498:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3260,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3263,"mutability":"mutable","name":"data","nameLocation":"4535:4:15","nodeType":"VariableDeclaration","scope":3278,"src":"4522:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3262,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3265,"mutability":"mutable","name":"value","nameLocation":"4557:5:15","nodeType":"VariableDeclaration","scope":3278,"src":"4549:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:15"},"returnParameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3278,"src":"4587:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3267,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:15"},"scope":3498,"src":"4458:254:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3321,"nodeType":"Block","src":"5139:267:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3295,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3498","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3498","typeString":"library Address"}],"id":3294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3293,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:15","typeDescriptions":{}}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5157:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5157:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"5182:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":3300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":3292,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5149:81:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3302,"nodeType":"ExpressionStatement","src":"5149:81:15"},{"assignments":[3304,3306],"declarations":[{"constant":false,"id":3304,"mutability":"mutable","name":"success","nameLocation":"5246:7:15","nodeType":"VariableDeclaration","scope":3321,"src":"5241:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3303,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3306,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:15","nodeType":"VariableDeclaration","scope":3321,"src":"5255:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3305,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3313,"initialValue":{"arguments":[{"id":3311,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"5308:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3307,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"5282:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5282:11:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"5301:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5282:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:15"},{"expression":{"arguments":[{"id":3315,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"5357:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3316,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"5365:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3317,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"5374:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3318,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"5386:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3314,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"5330:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5330:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3291,"id":3320,"nodeType":"Return","src":"5323:76:15"}]},"documentation":{"id":3279,"nodeType":"StructuredDocumentation","src":"4718:237:15","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":3322,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:15","nodeType":"FunctionDefinition","parameters":{"id":3288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3281,"mutability":"mutable","name":"target","nameLocation":"5008:6:15","nodeType":"VariableDeclaration","scope":3322,"src":"5000:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3280,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3283,"mutability":"mutable","name":"data","nameLocation":"5037:4:15","nodeType":"VariableDeclaration","scope":3322,"src":"5024:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3282,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3285,"mutability":"mutable","name":"value","nameLocation":"5059:5:15","nodeType":"VariableDeclaration","scope":3322,"src":"5051:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3284,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3287,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:15","nodeType":"VariableDeclaration","scope":3322,"src":"5074:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3286,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:15"},"returnParameters":{"id":3291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3322,"src":"5125:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3289,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:15"},"scope":3498,"src":"4960:446:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3338,"nodeType":"Block","src":"5683:97:15","statements":[{"expression":{"arguments":[{"id":3333,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"5719:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3334,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"5727:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":3332,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[3339,3368],"referencedDeclaration":3368,"src":"5700:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5700:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3331,"id":3337,"nodeType":"Return","src":"5693:80:15"}]},"documentation":{"id":3323,"nodeType":"StructuredDocumentation","src":"5412:166:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3339,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:15","nodeType":"FunctionDefinition","parameters":{"id":3328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3325,"mutability":"mutable","name":"target","nameLocation":"5619:6:15","nodeType":"VariableDeclaration","scope":3339,"src":"5611:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3324,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3327,"mutability":"mutable","name":"data","nameLocation":"5640:4:15","nodeType":"VariableDeclaration","scope":3339,"src":"5627:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3326,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:15"},"returnParameters":{"id":3331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3339,"src":"5669:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3329,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:15"},"scope":3498,"src":"5583:197:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3367,"nodeType":"Block","src":"6122:168:15","statements":[{"assignments":[3352,3354],"declarations":[{"constant":false,"id":3352,"mutability":"mutable","name":"success","nameLocation":"6138:7:15","nodeType":"VariableDeclaration","scope":3367,"src":"6133:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3351,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3354,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:15","nodeType":"VariableDeclaration","scope":3367,"src":"6147:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3353,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3359,"initialValue":{"arguments":[{"id":3357,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"6192:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3355,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"6174:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:15","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6174:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:15"},{"expression":{"arguments":[{"id":3361,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"6241:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3362,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"6249:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3363,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"6258:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3364,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"6270:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3360,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"6214:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6214:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3350,"id":3366,"nodeType":"Return","src":"6207:76:15"}]},"documentation":{"id":3340,"nodeType":"StructuredDocumentation","src":"5786:173:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3368,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:15","nodeType":"FunctionDefinition","parameters":{"id":3347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3342,"mutability":"mutable","name":"target","nameLocation":"6009:6:15","nodeType":"VariableDeclaration","scope":3368,"src":"6001:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3341,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3344,"mutability":"mutable","name":"data","nameLocation":"6038:4:15","nodeType":"VariableDeclaration","scope":3368,"src":"6025:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3343,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3346,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:15","nodeType":"VariableDeclaration","scope":3368,"src":"6052:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3345,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:15"},"returnParameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3368,"src":"6108:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3348,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:15"},"scope":3498,"src":"5964:326:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3384,"nodeType":"Block","src":"6566:101:15","statements":[{"expression":{"arguments":[{"id":3379,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"6604:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3380,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"6612:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":3381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":3378,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[3385,3414],"referencedDeclaration":3414,"src":"6583:20:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6583:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3377,"id":3383,"nodeType":"Return","src":"6576:84:15"}]},"documentation":{"id":3369,"nodeType":"StructuredDocumentation","src":"6296:168:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":3385,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:15","nodeType":"FunctionDefinition","parameters":{"id":3374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3371,"mutability":"mutable","name":"target","nameLocation":"6507:6:15","nodeType":"VariableDeclaration","scope":3385,"src":"6499:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3370,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3373,"mutability":"mutable","name":"data","nameLocation":"6528:4:15","nodeType":"VariableDeclaration","scope":3385,"src":"6515:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3372,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:15"},"returnParameters":{"id":3377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3385,"src":"6552:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3375,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:15"},"scope":3498,"src":"6469:198:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3413,"nodeType":"Block","src":"7008:170:15","statements":[{"assignments":[3398,3400],"declarations":[{"constant":false,"id":3398,"mutability":"mutable","name":"success","nameLocation":"7024:7:15","nodeType":"VariableDeclaration","scope":3413,"src":"7019:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3397,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3400,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:15","nodeType":"VariableDeclaration","scope":3413,"src":"7033:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3399,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3405,"initialValue":{"arguments":[{"id":3403,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"7080:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3401,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"7060:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:15","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7060:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:15"},{"expression":{"arguments":[{"id":3407,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"7129:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3408,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"7137:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3409,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"7146:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3410,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"7158:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3406,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"7102:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7102:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3396,"id":3412,"nodeType":"Return","src":"7095:76:15"}]},"documentation":{"id":3386,"nodeType":"StructuredDocumentation","src":"6673:175:15","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":3414,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:15","nodeType":"FunctionDefinition","parameters":{"id":3393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3388,"mutability":"mutable","name":"target","nameLocation":"6900:6:15","nodeType":"VariableDeclaration","scope":3414,"src":"6892:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3387,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3390,"mutability":"mutable","name":"data","nameLocation":"6929:4:15","nodeType":"VariableDeclaration","scope":3414,"src":"6916:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3389,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3392,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:15","nodeType":"VariableDeclaration","scope":3414,"src":"6943:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3391,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:15"},"returnParameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3414,"src":"6994:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3394,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:15"},"scope":3498,"src":"6853:325:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3452,"nodeType":"Block","src":"7660:434:15","statements":[{"condition":{"id":3428,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"7674:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3450,"nodeType":"Block","src":"8030:58:15","statements":[{"expression":{"arguments":[{"id":3446,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"8052:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3447,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"8064:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3445,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"8044:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8044:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3449,"nodeType":"ExpressionStatement","src":"8044:33:15"}]},"id":3451,"nodeType":"IfStatement","src":"7670:418:15","trueBody":{"id":3444,"nodeType":"Block","src":"7683:341:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3429,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"7701:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7701:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3441,"nodeType":"IfStatement","src":"7697:286:15","trueBody":{"id":3440,"nodeType":"Block","src":"7725:258:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3435,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"7927:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3434,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"7916:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7916:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":3437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":3433,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7908:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3439,"nodeType":"ExpressionStatement","src":"7908:60:15"}]}},{"expression":{"id":3442,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"8003:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3427,"id":3443,"nodeType":"Return","src":"7996:17:15"}]}}]},"documentation":{"id":3415,"nodeType":"StructuredDocumentation","src":"7184:277:15","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":3453,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:15","nodeType":"FunctionDefinition","parameters":{"id":3424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3417,"mutability":"mutable","name":"target","nameLocation":"7519:6:15","nodeType":"VariableDeclaration","scope":3453,"src":"7511:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3416,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3419,"mutability":"mutable","name":"success","nameLocation":"7540:7:15","nodeType":"VariableDeclaration","scope":3453,"src":"7535:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3418,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3421,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:15","nodeType":"VariableDeclaration","scope":3453,"src":"7557:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3420,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3423,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:15","nodeType":"VariableDeclaration","scope":3453,"src":"7590:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3422,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:15"},"returnParameters":{"id":3427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3453,"src":"7646:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3425,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:15"},"scope":3498,"src":"7466:628:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3476,"nodeType":"Block","src":"8475:135:15","statements":[{"condition":{"id":3465,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"8489:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3474,"nodeType":"Block","src":"8546:58:15","statements":[{"expression":{"arguments":[{"id":3470,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"8568:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3471,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"8580:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3469,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"8560:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8560:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3473,"nodeType":"ExpressionStatement","src":"8560:33:15"}]},"id":3475,"nodeType":"IfStatement","src":"8485:119:15","trueBody":{"id":3468,"nodeType":"Block","src":"8498:42:15","statements":[{"expression":{"id":3466,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3458,"src":"8519:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3464,"id":3467,"nodeType":"Return","src":"8512:17:15"}]}}]},"documentation":{"id":3454,"nodeType":"StructuredDocumentation","src":"8100:210:15","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":3477,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:15","nodeType":"FunctionDefinition","parameters":{"id":3461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3456,"mutability":"mutable","name":"success","nameLocation":"8355:7:15","nodeType":"VariableDeclaration","scope":3477,"src":"8350:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3455,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3458,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:15","nodeType":"VariableDeclaration","scope":3477,"src":"8372:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3457,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3460,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:15","nodeType":"VariableDeclaration","scope":3477,"src":"8405:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3459,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:15"},"returnParameters":{"id":3464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3477,"src":"8461:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3462,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:15"},"scope":3498,"src":"8315:295:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3496,"nodeType":"Block","src":"8699:457:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3484,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"8775:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8775:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3494,"nodeType":"Block","src":"9105:45:15","statements":[{"expression":{"arguments":[{"id":3491,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"9126:12:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3490,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9119:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3493,"nodeType":"ExpressionStatement","src":"9119:20:15"}]},"id":3495,"nodeType":"IfStatement","src":"8771:379:15","trueBody":{"id":3489,"nodeType":"Block","src":"8798:301:15","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:15","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:15","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:15"},"nodeType":"YulFunctionCall","src":"8997:17:15"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:15","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:15","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:15"},"nodeType":"YulFunctionCall","src":"9038:19:15"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:15"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:15"},"nodeType":"YulFunctionCall","src":"9031:44:15"},"nodeType":"YulExpressionStatement","src":"9031:44:15"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3479,"isOffset":false,"isSlot":false,"src":"9003:10:15","valueSize":1},{"declaration":3479,"isOffset":false,"isSlot":false,"src":"9046:10:15","valueSize":1}],"id":3488,"nodeType":"InlineAssembly","src":"8947:142:15"}]}}]},"id":3497,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:15","nodeType":"FunctionDefinition","parameters":{"id":3482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3479,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:15","nodeType":"VariableDeclaration","scope":3497,"src":"8633:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3478,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3481,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:15","nodeType":"VariableDeclaration","scope":3497,"src":"8658:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3480,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:15"},"returnParameters":{"id":3483,"nodeType":"ParameterList","parameters":[],"src":"8699:0:15"},"scope":3498,"src":"8616:540:15","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3499,"src":"194:8964:15","usedErrors":[]}],"src":"101:9058:15"},"id":15},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3520]},"id":3521,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3500,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:16"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":3501,"nodeType":"StructuredDocumentation","src":"111:496:16","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3520,"linearizedBaseContracts":[3520],"name":"Context","nameLocation":"626:7:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":3509,"nodeType":"Block","src":"702:34:16","statements":[{"expression":{"expression":{"id":3506,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3505,"id":3508,"nodeType":"Return","src":"712:17:16"}]},"id":3510,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:16","nodeType":"FunctionDefinition","parameters":{"id":3502,"nodeType":"ParameterList","parameters":[],"src":"659:2:16"},"returnParameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3510,"src":"693:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3503,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:16"},"scope":3520,"src":"640:96:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3518,"nodeType":"Block","src":"809:32:16","statements":[{"expression":{"expression":{"id":3515,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3514,"id":3517,"nodeType":"Return","src":"819:15:16"}]},"id":3519,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:16","nodeType":"FunctionDefinition","parameters":{"id":3511,"nodeType":"ParameterList","parameters":[],"src":"759:2:16"},"returnParameters":{"id":3514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3519,"src":"793:14:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3512,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:16"},"scope":3520,"src":"742:99:16","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3521,"src":"608:235:16","usedErrors":[]}],"src":"86:758:16"},"id":16},"@openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[3594]},"id":3595,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3522,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":3523,"nodeType":"StructuredDocumentation","src":"112:311:17","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":3594,"linearizedBaseContracts":[3594],"name":"Counters","nameLocation":"432:8:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":3526,"members":[{"constant":false,"id":3525,"mutability":"mutable","name":"_value","nameLocation":"794:6:17","nodeType":"VariableDeclaration","scope":3526,"src":"786:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3524,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:17","nodeType":"StructDefinition","scope":3594,"src":"447:374:17","visibility":"public"},{"body":{"id":3537,"nodeType":"Block","src":"901:38:17","statements":[{"expression":{"expression":{"id":3534,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"918:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":3535,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3525,"src":"918:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3533,"id":3536,"nodeType":"Return","src":"911:21:17"}]},"id":3538,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:17","nodeType":"FunctionDefinition","parameters":{"id":3530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3529,"mutability":"mutable","name":"counter","nameLocation":"860:7:17","nodeType":"VariableDeclaration","scope":3538,"src":"844:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":3528,"nodeType":"UserDefinedTypeName","pathNode":{"id":3527,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":3526,"src":"844:7:17"},"referencedDeclaration":3526,"src":"844:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:17"},"returnParameters":{"id":3533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3538,"src":"892:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3531,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:17"},"scope":3594,"src":"827:112:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3551,"nodeType":"Block","src":"998:70:17","statements":[{"id":3550,"nodeType":"UncheckedBlock","src":"1008:54:17","statements":[{"expression":{"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3544,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"1032:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":3546,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3525,"src":"1032:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3549,"nodeType":"ExpressionStatement","src":"1032:19:17"}]}]},"id":3552,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:17","nodeType":"FunctionDefinition","parameters":{"id":3542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3541,"mutability":"mutable","name":"counter","nameLocation":"980:7:17","nodeType":"VariableDeclaration","scope":3552,"src":"964:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":3540,"nodeType":"UserDefinedTypeName","pathNode":{"id":3539,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":3526,"src":"964:7:17"},"referencedDeclaration":3526,"src":"964:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:17"},"returnParameters":{"id":3543,"nodeType":"ParameterList","parameters":[],"src":"998:0:17"},"scope":3594,"src":"945:123:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3579,"nodeType":"Block","src":"1127:176:17","statements":[{"assignments":[3559],"declarations":[{"constant":false,"id":3559,"mutability":"mutable","name":"value","nameLocation":"1145:5:17","nodeType":"VariableDeclaration","scope":3579,"src":"1137:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3562,"initialValue":{"expression":{"id":3560,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"1153:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":3561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3525,"src":"1153:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"1185:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":3567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":3563,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1177:49:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3569,"nodeType":"ExpressionStatement","src":"1177:49:17"},{"id":3578,"nodeType":"UncheckedBlock","src":"1236:61:17","statements":[{"expression":{"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3570,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"1260:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":3572,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3525,"src":"1260:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"1277:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3577,"nodeType":"ExpressionStatement","src":"1260:26:17"}]}]},"id":3580,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:17","nodeType":"FunctionDefinition","parameters":{"id":3556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3555,"mutability":"mutable","name":"counter","nameLocation":"1109:7:17","nodeType":"VariableDeclaration","scope":3580,"src":"1093:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":3554,"nodeType":"UserDefinedTypeName","pathNode":{"id":3553,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":3526,"src":"1093:7:17"},"referencedDeclaration":3526,"src":"1093:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:17"},"returnParameters":{"id":3557,"nodeType":"ParameterList","parameters":[],"src":"1127:0:17"},"scope":3594,"src":"1074:229:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3592,"nodeType":"Block","src":"1358:35:17","statements":[{"expression":{"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3586,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"1368:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":3588,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":3525,"src":"1368:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3591,"nodeType":"ExpressionStatement","src":"1368:18:17"}]},"id":3593,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:17","nodeType":"FunctionDefinition","parameters":{"id":3584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3583,"mutability":"mutable","name":"counter","nameLocation":"1340:7:17","nodeType":"VariableDeclaration","scope":3593,"src":"1324:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":3582,"nodeType":"UserDefinedTypeName","pathNode":{"id":3581,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":3526,"src":"1324:7:17"},"referencedDeclaration":3526,"src":"1324:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:17"},"returnParameters":{"id":3585,"nodeType":"ParameterList","parameters":[],"src":"1358:0:17"},"scope":3594,"src":"1309:84:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3595,"src":"424:971:17","usedErrors":[]}],"src":"87:1309:17"},"id":17},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5185],"Strings":[3769]},"id":3770,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3596,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:18"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3597,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3770,"sourceUnit":5186,"src":"126:25:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3598,"nodeType":"StructuredDocumentation","src":"153:34:18","text":" @dev String operations."},"fullyImplemented":true,"id":3769,"linearizedBaseContracts":[3769],"name":"Strings","nameLocation":"196:7:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3601,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:18","nodeType":"VariableDeclaration","scope":3769,"src":"210:54:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3599,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3604,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:18","nodeType":"VariableDeclaration","scope":3769,"src":"270:43:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3602,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:18","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":3651,"nodeType":"Block","src":"486:625:18","statements":[{"id":3650,"nodeType":"UncheckedBlock","src":"496:609:18","statements":[{"assignments":[3613],"declarations":[{"constant":false,"id":3613,"mutability":"mutable","name":"length","nameLocation":"528:6:18","nodeType":"VariableDeclaration","scope":3650,"src":"520:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3612,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3620,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"548:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3614,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"537:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5185_$","typeString":"type(library Math)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5022,"src":"537:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"537:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:18"},{"assignments":[3622],"declarations":[{"constant":false,"id":3622,"mutability":"mutable","name":"buffer","nameLocation":"586:6:18","nodeType":"VariableDeclaration","scope":3650,"src":"572:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3621,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3627,"initialValue":{"arguments":[{"id":3625,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"606:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3623,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"595:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:18"},{"assignments":[3629],"declarations":[{"constant":false,"id":3629,"mutability":"mutable","name":"ptr","nameLocation":"635:3:18","nodeType":"VariableDeclaration","scope":3650,"src":"627:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3628,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3630,"nodeType":"VariableDeclarationStatement","src":"627:11:18"},{"AST":{"nodeType":"YulBlock","src":"708:67:18","statements":[{"nodeType":"YulAssignment","src":"726:35:18","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:18","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:18"},"nodeType":"YulFunctionCall","src":"745:15:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:18"},"nodeType":"YulFunctionCall","src":"733:28:18"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3622,"isOffset":false,"isSlot":false,"src":"737:6:18","valueSize":1},{"declaration":3613,"isOffset":false,"isSlot":false,"src":"753:6:18","valueSize":1},{"declaration":3629,"isOffset":false,"isSlot":false,"src":"726:3:18","valueSize":1}],"id":3631,"nodeType":"InlineAssembly","src":"699:76:18"},{"body":{"id":3646,"nodeType":"Block","src":"801:267:18","statements":[{"expression":{"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:18","subExpression":{"id":3633,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"819:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3635,"nodeType":"ExpressionStatement","src":"819:5:18"},{"AST":{"nodeType":"YulBlock","src":"902:84:18","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:18","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:18"},"nodeType":"YulFunctionCall","src":"942:14:18"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:18"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:18"},"nodeType":"YulFunctionCall","src":"937:30:18"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:18"},"nodeType":"YulFunctionCall","src":"924:44:18"},"nodeType":"YulExpressionStatement","src":"924:44:18"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3601,"isOffset":false,"isSlot":false,"src":"958:8:18","valueSize":1},{"declaration":3629,"isOffset":false,"isSlot":false,"src":"932:3:18","valueSize":1},{"declaration":3607,"isOffset":false,"isSlot":false,"src":"946:5:18","valueSize":1}],"id":3636,"nodeType":"InlineAssembly","src":"893:93:18"},{"expression":{"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"1003:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3640,"nodeType":"ExpressionStatement","src":"1003:11:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"1036:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3645,"nodeType":"IfStatement","src":"1032:21:18","trueBody":{"id":3644,"nodeType":"Break","src":"1048:5:18"}}]},"condition":{"hexValue":"74727565","id":3632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3647,"nodeType":"WhileStatement","src":"788:280:18"},{"expression":{"id":3648,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"1088:6:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3611,"id":3649,"nodeType":"Return","src":"1081:13:18"}]}]},"documentation":{"id":3605,"nodeType":"StructuredDocumentation","src":"320:90:18","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3652,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:18","nodeType":"FunctionDefinition","parameters":{"id":3608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3607,"mutability":"mutable","name":"value","nameLocation":"441:5:18","nodeType":"VariableDeclaration","scope":3652,"src":"433:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3606,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:18"},"returnParameters":{"id":3611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3652,"src":"471:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3609,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:18"},"scope":3769,"src":"415:696:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3671,"nodeType":"Block","src":"1290:100:18","statements":[{"id":3670,"nodeType":"UncheckedBlock","src":"1300:84:18","statements":[{"expression":{"arguments":[{"id":3661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"1343:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"1362:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3662,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"1350:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5185_$","typeString":"type(library Math)"}},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5145,"src":"1350:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1350:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3660,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3672,3748,3768],"referencedDeclaration":3748,"src":"1331:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1331:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3659,"id":3669,"nodeType":"Return","src":"1324:49:18"}]}]},"documentation":{"id":3653,"nodeType":"StructuredDocumentation","src":"1117:94:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3672,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:18","nodeType":"FunctionDefinition","parameters":{"id":3656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3655,"mutability":"mutable","name":"value","nameLocation":"1245:5:18","nodeType":"VariableDeclaration","scope":3672,"src":"1237:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3654,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:18"},"returnParameters":{"id":3659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3672,"src":"1275:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3657,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:18"},"scope":3769,"src":"1216:174:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3747,"nodeType":"Block","src":"1603:347:18","statements":[{"assignments":[3683],"declarations":[{"constant":false,"id":3683,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:18","nodeType":"VariableDeclaration","scope":3747,"src":"1613:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3682,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3692,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3687,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"1649:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3684,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1635:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:18"},{"expression":{"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3693,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"1670:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3695,"indexExpression":{"hexValue":"30","id":3694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3698,"nodeType":"ExpressionStatement","src":"1670:15:18"},{"expression":{"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3699,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"1695:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3701,"indexExpression":{"hexValue":"31","id":3700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3704,"nodeType":"ExpressionStatement","src":"1695:15:18"},{"body":{"id":3733,"nodeType":"Block","src":"1765:83:18","statements":[{"expression":{"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3719,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"1779:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3721,"indexExpression":{"id":3720,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"1786:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3722,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"1791:8:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3726,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"1800:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3728,"nodeType":"ExpressionStatement","src":"1779:33:18"},{"expression":{"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"1826:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3732,"nodeType":"ExpressionStatement","src":"1826:11:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3713,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"1753:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3734,"initializationExpression":{"assignments":[3706],"declarations":[{"constant":false,"id":3706,"mutability":"mutable","name":"i","nameLocation":"1733:1:18","nodeType":"VariableDeclaration","scope":3734,"src":"1725:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3705,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3712,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3708,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"1741:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:18"},"loopExpression":{"expression":{"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:18","subExpression":{"id":3716,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"1762:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3718,"nodeType":"ExpressionStatement","src":"1760:3:18"},"nodeType":"ForStatement","src":"1720:128:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"1865:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":3735,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1857:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3741,"nodeType":"ExpressionStatement","src":"1857:55:18"},{"expression":{"arguments":[{"id":3744,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"1936:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3742,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:18","typeDescriptions":{}}},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1929:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3681,"id":3746,"nodeType":"Return","src":"1922:21:18"}]},"documentation":{"id":3673,"nodeType":"StructuredDocumentation","src":"1396:112:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3748,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:18","nodeType":"FunctionDefinition","parameters":{"id":3678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3675,"mutability":"mutable","name":"value","nameLocation":"1542:5:18","nodeType":"VariableDeclaration","scope":3748,"src":"1534:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3674,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3677,"mutability":"mutable","name":"length","nameLocation":"1557:6:18","nodeType":"VariableDeclaration","scope":3748,"src":"1549:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3676,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:18"},"returnParameters":{"id":3681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3748,"src":"1588:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3679,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:18"},"scope":3769,"src":"1513:437:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3767,"nodeType":"Block","src":"2175:76:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3761,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"2220:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3759,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:18","typeDescriptions":{}}},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2212:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3757,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:18","typeDescriptions":{}}},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2204:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3764,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"2228:15:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3756,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3672,3748,3768],"referencedDeclaration":3748,"src":"2192:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2192:52:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3755,"id":3766,"nodeType":"Return","src":"2185:59:18"}]},"documentation":{"id":3749,"nodeType":"StructuredDocumentation","src":"1956:141:18","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":3768,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:18","nodeType":"FunctionDefinition","parameters":{"id":3752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3751,"mutability":"mutable","name":"addr","nameLocation":"2131:4:18","nodeType":"VariableDeclaration","scope":3768,"src":"2123:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3750,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:18"},"returnParameters":{"id":3755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3768,"src":"2160:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3753,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:18"},"scope":3769,"src":"2102:149:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3770,"src":"188:2065:18","usedErrors":[]}],"src":"101:2153:18"},"id":18},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[4130],"Math":[5185],"Strings":[3769]},"id":4131,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3771,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:19"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3772,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4131,"sourceUnit":3770,"src":"137:24:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3773,"nodeType":"StructuredDocumentation","src":"163:205:19","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":4130,"linearizedBaseContracts":[4130],"name":"ECDSA","nameLocation":"377:5:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3779,"members":[{"id":3774,"name":"NoError","nameLocation":"417:7:19","nodeType":"EnumValue","src":"417:7:19"},{"id":3775,"name":"InvalidSignature","nameLocation":"434:16:19","nodeType":"EnumValue","src":"434:16:19"},{"id":3776,"name":"InvalidSignatureLength","nameLocation":"460:22:19","nodeType":"EnumValue","src":"460:22:19"},{"id":3777,"name":"InvalidSignatureS","nameLocation":"492:17:19","nodeType":"EnumValue","src":"492:17:19"},{"id":3778,"name":"InvalidSignatureV","nameLocation":"519:17:19","nodeType":"EnumValue","src":"519:17:19"}],"name":"RecoverError","nameLocation":"394:12:19","nodeType":"EnumDefinition","src":"389:175:19"},{"body":{"id":3822,"nodeType":"Block","src":"624:457:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3785,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"638:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3786,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"647:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3779_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3774,"src":"647:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3791,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"734:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3792,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"743:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3779_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3775,"src":"743:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3800,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"843:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3801,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"852:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3779_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3776,"src":"852:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3809,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"965:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3810,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"974:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3779_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3777,"src":"974:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3818,"nodeType":"IfStatement","src":"961:114:19","trueBody":{"id":3817,"nodeType":"Block","src":"1006:69:19","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":3814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":3813,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:19","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1020:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3816,"nodeType":"ExpressionStatement","src":"1020:44:19"}]}},"id":3819,"nodeType":"IfStatement","src":"839:236:19","trueBody":{"id":3808,"nodeType":"Block","src":"889:66:19","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":3805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":3804,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:19","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"903:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3807,"nodeType":"ExpressionStatement","src":"903:41:19"}]}},"id":3820,"nodeType":"IfStatement","src":"730:345:19","trueBody":{"id":3799,"nodeType":"Block","src":"774:59:19","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":3796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":3795,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:19","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"788:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3798,"nodeType":"ExpressionStatement","src":"788:34:19"}]}},"id":3821,"nodeType":"IfStatement","src":"634:441:19","trueBody":{"id":3790,"nodeType":"Block","src":"669:55:19","statements":[{"functionReturnParameters":3784,"id":3789,"nodeType":"Return","src":"683:7:19"}]}}]},"id":3823,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:19","nodeType":"FunctionDefinition","parameters":{"id":3783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3782,"mutability":"mutable","name":"error","nameLocation":"604:5:19","nodeType":"VariableDeclaration","scope":3823,"src":"591:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3781,"nodeType":"UserDefinedTypeName","pathNode":{"id":3780,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3779,"src":"591:12:19"},"referencedDeclaration":3779,"src":"591:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:19"},"returnParameters":{"id":3784,"nodeType":"ParameterList","parameters":[],"src":"624:0:19"},"scope":4130,"src":"570:511:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3868,"nodeType":"Block","src":"2249:626:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3836,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"2263:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2263:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:19","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3866,"nodeType":"Block","src":"2788:81:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3858,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:19","typeDescriptions":{}}},"id":3861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2810:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3862,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"2822:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3779_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3776,"src":"2822:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}}],"id":3864,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3779_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3835,"id":3865,"nodeType":"Return","src":"2802:56:19"}]},"id":3867,"nodeType":"IfStatement","src":"2259:610:19","trueBody":{"id":3857,"nodeType":"Block","src":"2287:495:19","statements":[{"assignments":[3841],"declarations":[{"constant":false,"id":3841,"mutability":"mutable","name":"r","nameLocation":"2309:1:19","nodeType":"VariableDeclaration","scope":3857,"src":"2301:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3840,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3842,"nodeType":"VariableDeclarationStatement","src":"2301:9:19"},{"assignments":[3844],"declarations":[{"constant":false,"id":3844,"mutability":"mutable","name":"s","nameLocation":"2332:1:19","nodeType":"VariableDeclaration","scope":3857,"src":"2324:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3843,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3845,"nodeType":"VariableDeclarationStatement","src":"2324:9:19"},{"assignments":[3847],"declarations":[{"constant":false,"id":3847,"mutability":"mutable","name":"v","nameLocation":"2353:1:19","nodeType":"VariableDeclaration","scope":3857,"src":"2347:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3846,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3848,"nodeType":"VariableDeclarationStatement","src":"2347:7:19"},{"AST":{"nodeType":"YulBlock","src":"2555:171:19","statements":[{"nodeType":"YulAssignment","src":"2573:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:19"},"nodeType":"YulFunctionCall","src":"2584:20:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:19"},"nodeType":"YulFunctionCall","src":"2578:27:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:19"}]},{"nodeType":"YulAssignment","src":"2622:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:19"},"nodeType":"YulFunctionCall","src":"2633:20:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:19"},"nodeType":"YulFunctionCall","src":"2627:27:19"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:19"}]},{"nodeType":"YulAssignment","src":"2671:41:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:19","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:19"},"nodeType":"YulFunctionCall","src":"2690:20:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:19"},"nodeType":"YulFunctionCall","src":"2684:27:19"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:19"},"nodeType":"YulFunctionCall","src":"2676:36:19"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3841,"isOffset":false,"isSlot":false,"src":"2573:1:19","valueSize":1},{"declaration":3844,"isOffset":false,"isSlot":false,"src":"2622:1:19","valueSize":1},{"declaration":3828,"isOffset":false,"isSlot":false,"src":"2588:9:19","valueSize":1},{"declaration":3828,"isOffset":false,"isSlot":false,"src":"2637:9:19","valueSize":1},{"declaration":3828,"isOffset":false,"isSlot":false,"src":"2694:9:19","valueSize":1},{"declaration":3847,"isOffset":false,"isSlot":false,"src":"2671:1:19","valueSize":1}],"id":3849,"nodeType":"InlineAssembly","src":"2546:180:19"},{"expression":{"arguments":[{"id":3851,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"2757:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3852,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"2763:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3853,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"2766:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3854,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"2769:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3850,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3869,3943,4037],"referencedDeclaration":4037,"src":"2746:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3779_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2746:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3779_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3835,"id":3856,"nodeType":"Return","src":"2739:32:19"}]}}]},"documentation":{"id":3824,"nodeType":"StructuredDocumentation","src":"1087:1053:19","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":3869,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:19","nodeType":"FunctionDefinition","parameters":{"id":3829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3826,"mutability":"mutable","name":"hash","nameLocation":"2173:4:19","nodeType":"VariableDeclaration","scope":3869,"src":"2165:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3825,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3828,"mutability":"mutable","name":"signature","nameLocation":"2192:9:19","nodeType":"VariableDeclaration","scope":3869,"src":"2179:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3827,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:19"},"returnParameters":{"id":3835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3869,"src":"2226:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3830,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3869,"src":"2235:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3833,"nodeType":"UserDefinedTypeName","pathNode":{"id":3832,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3779,"src":"2235:12:19"},"referencedDeclaration":3779,"src":"2235:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:19"},"scope":4130,"src":"2145:730:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3895,"nodeType":"Block","src":"3748:140:19","statements":[{"assignments":[3880,3883],"declarations":[{"constant":false,"id":3880,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:19","nodeType":"VariableDeclaration","scope":3895,"src":"3759:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3879,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3883,"mutability":"mutable","name":"error","nameLocation":"3791:5:19","nodeType":"VariableDeclaration","scope":3895,"src":"3778:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3882,"nodeType":"UserDefinedTypeName","pathNode":{"id":3881,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3779,"src":"3778:12:19"},"referencedDeclaration":3779,"src":"3778:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":3888,"initialValue":{"arguments":[{"id":3885,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"3811:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3886,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"3817:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3884,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3869,3943,4037],"referencedDeclaration":3869,"src":"3800:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3779_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3800:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3779_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:19"},{"expression":{"arguments":[{"id":3890,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"3849:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}],"id":3889,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"3837:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3779_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3837:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3892,"nodeType":"ExpressionStatement","src":"3837:18:19"},{"expression":{"id":3893,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"3872:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3878,"id":3894,"nodeType":"Return","src":"3865:16:19"}]},"documentation":{"id":3870,"nodeType":"StructuredDocumentation","src":"2881:775:19","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":3896,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:19","nodeType":"FunctionDefinition","parameters":{"id":3875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3872,"mutability":"mutable","name":"hash","nameLocation":"3686:4:19","nodeType":"VariableDeclaration","scope":3896,"src":"3678:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3871,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3874,"mutability":"mutable","name":"signature","nameLocation":"3705:9:19","nodeType":"VariableDeclaration","scope":3896,"src":"3692:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3873,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:19"},"returnParameters":{"id":3878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3896,"src":"3739:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3876,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:19"},"scope":4130,"src":"3661:227:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3942,"nodeType":"Block","src":"4275:203:19","statements":[{"assignments":[3912],"declarations":[{"constant":false,"id":3912,"mutability":"mutable","name":"s","nameLocation":"4293:1:19","nodeType":"VariableDeclaration","scope":3942,"src":"4285:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4285:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3919,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3913,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"4297:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4310:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4302:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3914,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4302:7:19","typeDescriptions":{}}},"id":3917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4302:75:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4297:80:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4285:92:19"},{"assignments":[3921],"declarations":[{"constant":false,"id":3921,"mutability":"mutable","name":"v","nameLocation":"4393:1:19","nodeType":"VariableDeclaration","scope":3942,"src":"4387:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3920,"name":"uint8","nodeType":"ElementaryTypeName","src":"4387:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3934,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3926,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"4412:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4404:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3924,"name":"uint256","nodeType":"ElementaryTypeName","src":"4404:7:19","typeDescriptions":{}}},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4404:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4419:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4404:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4403:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4426:2:19","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4403:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4397:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3922,"name":"uint8","nodeType":"ElementaryTypeName","src":"4397:5:19","typeDescriptions":{}}},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4397:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4387:42:19"},{"expression":{"arguments":[{"id":3936,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"4457:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3937,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"4463:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3938,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"4466:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3939,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"4469:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3935,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3869,3943,4037],"referencedDeclaration":4037,"src":"4446:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3779_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4446:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3779_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3910,"id":3941,"nodeType":"Return","src":"4439:32:19"}]},"documentation":{"id":3897,"nodeType":"StructuredDocumentation","src":"3894:243:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":3943,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:19","nodeType":"FunctionDefinition","parameters":{"id":3904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3899,"mutability":"mutable","name":"hash","nameLocation":"4179:4:19","nodeType":"VariableDeclaration","scope":3943,"src":"4171:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4171:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3901,"mutability":"mutable","name":"r","nameLocation":"4201:1:19","nodeType":"VariableDeclaration","scope":3943,"src":"4193:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3900,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3903,"mutability":"mutable","name":"vs","nameLocation":"4220:2:19","nodeType":"VariableDeclaration","scope":3943,"src":"4212:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4212:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:67:19"},"returnParameters":{"id":3910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3943,"src":"4252:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3905,"name":"address","nodeType":"ElementaryTypeName","src":"4252:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3943,"src":"4261:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3908,"nodeType":"UserDefinedTypeName","pathNode":{"id":3907,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3779,"src":"4261:12:19"},"referencedDeclaration":3779,"src":"4261:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4251:23:19"},"scope":4130,"src":"4142:336:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3972,"nodeType":"Block","src":"4759:136:19","statements":[{"assignments":[3956,3959],"declarations":[{"constant":false,"id":3956,"mutability":"mutable","name":"recovered","nameLocation":"4778:9:19","nodeType":"VariableDeclaration","scope":3972,"src":"4770:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3955,"name":"address","nodeType":"ElementaryTypeName","src":"4770:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3959,"mutability":"mutable","name":"error","nameLocation":"4802:5:19","nodeType":"VariableDeclaration","scope":3972,"src":"4789:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3958,"nodeType":"UserDefinedTypeName","pathNode":{"id":3957,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3779,"src":"4789:12:19"},"referencedDeclaration":3779,"src":"4789:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":3965,"initialValue":{"arguments":[{"id":3961,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"4822:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3962,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"4828:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3963,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"4831:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3960,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3869,3943,4037],"referencedDeclaration":3943,"src":"4811:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3779_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4811:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3779_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4769:65:19"},{"expression":{"arguments":[{"id":3967,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"4856:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}],"id":3966,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"4844:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3779_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4844:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3969,"nodeType":"ExpressionStatement","src":"4844:18:19"},{"expression":{"id":3970,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3956,"src":"4879:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3954,"id":3971,"nodeType":"Return","src":"4872:16:19"}]},"documentation":{"id":3944,"nodeType":"StructuredDocumentation","src":"4484:154:19","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":3973,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4652:7:19","nodeType":"FunctionDefinition","parameters":{"id":3951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3946,"mutability":"mutable","name":"hash","nameLocation":"4677:4:19","nodeType":"VariableDeclaration","scope":3973,"src":"4669:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4669:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3948,"mutability":"mutable","name":"r","nameLocation":"4699:1:19","nodeType":"VariableDeclaration","scope":3973,"src":"4691:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4691:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3950,"mutability":"mutable","name":"vs","nameLocation":"4718:2:19","nodeType":"VariableDeclaration","scope":3973,"src":"4710:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3949,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4710:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4659:67:19"},"returnParameters":{"id":3954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3973,"src":"4750:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3952,"name":"address","nodeType":"ElementaryTypeName","src":"4750:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4749:9:19"},"scope":4130,"src":"4643:252:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4036,"nodeType":"Block","src":"5218:1345:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3992,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"6114:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6106:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3990,"name":"uint256","nodeType":"ElementaryTypeName","src":"6106:7:19","typeDescriptions":{}}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6106:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6106:79:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4005,"nodeType":"IfStatement","src":"6102:161:19","trueBody":{"id":4004,"nodeType":"Block","src":"6187:76:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6217:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6209:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3996,"name":"address","nodeType":"ElementaryTypeName","src":"6209:7:19","typeDescriptions":{}}},"id":3999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6209:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4000,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"6221:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3779_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3777,"src":"6221:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}}],"id":4002,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6208:44:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3779_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3989,"id":4003,"nodeType":"Return","src":"6201:51:19"}]}},{"assignments":[4007],"declarations":[{"constant":false,"id":4007,"mutability":"mutable","name":"signer","nameLocation":"6365:6:19","nodeType":"VariableDeclaration","scope":4036,"src":"6357:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4006,"name":"address","nodeType":"ElementaryTypeName","src":"6357:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4014,"initialValue":{"arguments":[{"id":4009,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"6384:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4010,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"6390:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4011,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"6393:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4012,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"6396:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4008,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6374:9:19","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6374:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6357:41:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4015,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"6412:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6430:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6422:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4016,"name":"address","nodeType":"ElementaryTypeName","src":"6422:7:19","typeDescriptions":{}}},"id":4019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6422:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6412:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4030,"nodeType":"IfStatement","src":"6408:101:19","trueBody":{"id":4029,"nodeType":"Block","src":"6434:75:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6464:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6456:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4021,"name":"address","nodeType":"ElementaryTypeName","src":"6456:7:19","typeDescriptions":{}}},"id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6456:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4025,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"6468:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3779_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3775,"src":"6468:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}}],"id":4027,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6455:43:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3779_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3989,"id":4028,"nodeType":"Return","src":"6448:50:19"}]}},{"expression":{"components":[{"id":4031,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"6527:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4032,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"6535:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3779_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3774,"src":"6535:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}}],"id":4034,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6526:30:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3779_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3989,"id":4035,"nodeType":"Return","src":"6519:37:19"}]},"documentation":{"id":3974,"nodeType":"StructuredDocumentation","src":"4901:163:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":4037,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5078:10:19","nodeType":"FunctionDefinition","parameters":{"id":3983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3976,"mutability":"mutable","name":"hash","nameLocation":"5106:4:19","nodeType":"VariableDeclaration","scope":4037,"src":"5098:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3975,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5098:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3978,"mutability":"mutable","name":"v","nameLocation":"5126:1:19","nodeType":"VariableDeclaration","scope":4037,"src":"5120:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3977,"name":"uint8","nodeType":"ElementaryTypeName","src":"5120:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3980,"mutability":"mutable","name":"r","nameLocation":"5145:1:19","nodeType":"VariableDeclaration","scope":4037,"src":"5137:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5137:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3982,"mutability":"mutable","name":"s","nameLocation":"5164:1:19","nodeType":"VariableDeclaration","scope":4037,"src":"5156:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3981,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5156:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5088:83:19"},"returnParameters":{"id":3989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4037,"src":"5195:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3984,"name":"address","nodeType":"ElementaryTypeName","src":"5195:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4037,"src":"5204:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3987,"nodeType":"UserDefinedTypeName","pathNode":{"id":3986,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3779,"src":"5204:12:19"},"referencedDeclaration":3779,"src":"5204:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5194:23:19"},"scope":4130,"src":"5069:1494:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4069,"nodeType":"Block","src":"6828:138:19","statements":[{"assignments":[4052,4055],"declarations":[{"constant":false,"id":4052,"mutability":"mutable","name":"recovered","nameLocation":"6847:9:19","nodeType":"VariableDeclaration","scope":4069,"src":"6839:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4051,"name":"address","nodeType":"ElementaryTypeName","src":"6839:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4055,"mutability":"mutable","name":"error","nameLocation":"6871:5:19","nodeType":"VariableDeclaration","scope":4069,"src":"6858:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4054,"nodeType":"UserDefinedTypeName","pathNode":{"id":4053,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":3779,"src":"6858:12:19"},"referencedDeclaration":3779,"src":"6858:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":4062,"initialValue":{"arguments":[{"id":4057,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"6891:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4058,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"6897:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4059,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"6900:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4060,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"6903:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4056,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3869,3943,4037],"referencedDeclaration":4037,"src":"6880:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3779_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6880:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3779_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6838:67:19"},{"expression":{"arguments":[{"id":4064,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"6927:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3779","typeString":"enum ECDSA.RecoverError"}],"id":4063,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"6915:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3779_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6915:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4066,"nodeType":"ExpressionStatement","src":"6915:18:19"},{"expression":{"id":4067,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"6950:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4050,"id":4068,"nodeType":"Return","src":"6943:16:19"}]},"documentation":{"id":4038,"nodeType":"StructuredDocumentation","src":"6569:122:19","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":4070,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6705:7:19","nodeType":"FunctionDefinition","parameters":{"id":4047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4040,"mutability":"mutable","name":"hash","nameLocation":"6730:4:19","nodeType":"VariableDeclaration","scope":4070,"src":"6722:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4039,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6722:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4042,"mutability":"mutable","name":"v","nameLocation":"6750:1:19","nodeType":"VariableDeclaration","scope":4070,"src":"6744:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4041,"name":"uint8","nodeType":"ElementaryTypeName","src":"6744:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4044,"mutability":"mutable","name":"r","nameLocation":"6769:1:19","nodeType":"VariableDeclaration","scope":4070,"src":"6761:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4043,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6761:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4046,"mutability":"mutable","name":"s","nameLocation":"6788:1:19","nodeType":"VariableDeclaration","scope":4070,"src":"6780:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4045,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6780:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6712:83:19"},"returnParameters":{"id":4050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4070,"src":"6819:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4048,"name":"address","nodeType":"ElementaryTypeName","src":"6819:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6818:9:19"},"scope":4130,"src":"6696:270:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4086,"nodeType":"Block","src":"7334:187:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":4081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7472:34:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":4082,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"7508:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4079,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7455:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7455:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7455:58:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4078,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7445:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7445:69:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4077,"id":4085,"nodeType":"Return","src":"7438:76:19"}]},"documentation":{"id":4071,"nodeType":"StructuredDocumentation","src":"6972:279:19","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":4087,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7265:22:19","nodeType":"FunctionDefinition","parameters":{"id":4074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4073,"mutability":"mutable","name":"hash","nameLocation":"7296:4:19","nodeType":"VariableDeclaration","scope":4087,"src":"7288:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7288:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7287:14:19"},"returnParameters":{"id":4077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4087,"src":"7325:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7325:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7324:9:19"},"scope":4130,"src":"7256:265:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4108,"nodeType":"Block","src":"7886:116:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7930:32:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":4101,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"7981:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7981:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4099,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"7964:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3769_$","typeString":"type(library Strings)"}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3652,"src":"7964:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7964:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4104,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"7992:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4096,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7913:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7913:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7913:81:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4095,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7903:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7903:92:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4094,"id":4107,"nodeType":"Return","src":"7896:99:19"}]},"documentation":{"id":4088,"nodeType":"StructuredDocumentation","src":"7527:274:19","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":4109,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7815:22:19","nodeType":"FunctionDefinition","parameters":{"id":4091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4090,"mutability":"mutable","name":"s","nameLocation":"7851:1:19","nodeType":"VariableDeclaration","scope":4109,"src":"7838:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4089,"name":"bytes","nodeType":"ElementaryTypeName","src":"7838:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7837:16:19"},"returnParameters":{"id":4094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4109,"src":"7877:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4092,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7877:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7876:9:19"},"scope":4130,"src":"7806:196:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4128,"nodeType":"Block","src":"8443:92:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":4122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8487:10:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":4123,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4112,"src":"8499:15:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4124,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"8516:10:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4120,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8470:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"8470:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8470:57:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4119,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8460:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8460:68:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4118,"id":4127,"nodeType":"Return","src":"8453:75:19"}]},"documentation":{"id":4110,"nodeType":"StructuredDocumentation","src":"8008:328:19","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":4129,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8350:15:19","nodeType":"FunctionDefinition","parameters":{"id":4115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4112,"mutability":"mutable","name":"domainSeparator","nameLocation":"8374:15:19","nodeType":"VariableDeclaration","scope":4129,"src":"8366:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4111,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8366:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4114,"mutability":"mutable","name":"structHash","nameLocation":"8399:10:19","nodeType":"VariableDeclaration","scope":4129,"src":"8391:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4113,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8391:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8365:45:19"},"returnParameters":{"id":4118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4129,"src":"8434:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8434:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8433:9:19"},"scope":4130,"src":"8341:194:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4131,"src":"369:8168:19","usedErrors":[]}],"src":"112:8426:19"},"id":19},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"ECDSA":[4130],"EIP712":[4284],"Math":[5185],"Strings":[3769]},"id":4285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4132,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:20"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":4133,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4285,"sourceUnit":4131,"src":"138:21:20","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":4134,"nodeType":"StructuredDocumentation","src":"161:1142:20","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n _Available since v3.4._"},"fullyImplemented":true,"id":4284,"linearizedBaseContracts":[4284],"name":"EIP712","nameLocation":"1322:6:20","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4136,"mutability":"immutable","name":"_CACHED_DOMAIN_SEPARATOR","nameLocation":"1598:24:20","nodeType":"VariableDeclaration","scope":4284,"src":"1572:50:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1572:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4138,"mutability":"immutable","name":"_CACHED_CHAIN_ID","nameLocation":"1654:16:20","nodeType":"VariableDeclaration","scope":4284,"src":"1628:42:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4137,"name":"uint256","nodeType":"ElementaryTypeName","src":"1628:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4140,"mutability":"immutable","name":"_CACHED_THIS","nameLocation":"1702:12:20","nodeType":"VariableDeclaration","scope":4284,"src":"1676:38:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4139,"name":"address","nodeType":"ElementaryTypeName","src":"1676:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":4142,"mutability":"immutable","name":"_HASHED_NAME","nameLocation":"1747:12:20","nodeType":"VariableDeclaration","scope":4284,"src":"1721:38:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1721:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4144,"mutability":"immutable","name":"_HASHED_VERSION","nameLocation":"1791:15:20","nodeType":"VariableDeclaration","scope":4284,"src":"1765:41:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1765:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4146,"mutability":"immutable","name":"_TYPE_HASH","nameLocation":"1838:10:20","nodeType":"VariableDeclaration","scope":4284,"src":"1812:36:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1812:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":4210,"nodeType":"Block","src":"2519:547:20","statements":[{"assignments":[4155],"declarations":[{"constant":false,"id":4155,"mutability":"mutable","name":"hashedName","nameLocation":"2537:10:20","nodeType":"VariableDeclaration","scope":4210,"src":"2529:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2529:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4162,"initialValue":{"arguments":[{"arguments":[{"id":4159,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"2566:4:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2560:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4157,"name":"bytes","nodeType":"ElementaryTypeName","src":"2560:5:20","typeDescriptions":{}}},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2560:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4156,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2550:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2550:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2529:43:20"},{"assignments":[4164],"declarations":[{"constant":false,"id":4164,"mutability":"mutable","name":"hashedVersion","nameLocation":"2590:13:20","nodeType":"VariableDeclaration","scope":4210,"src":"2582:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2582:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4171,"initialValue":{"arguments":[{"arguments":[{"id":4168,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"2622:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2616:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4166,"name":"bytes","nodeType":"ElementaryTypeName","src":"2616:5:20","typeDescriptions":{}}},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2616:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4165,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2606:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2606:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2582:49:20"},{"assignments":[4173],"declarations":[{"constant":false,"id":4173,"mutability":"mutable","name":"typeHash","nameLocation":"2649:8:20","nodeType":"VariableDeclaration","scope":4210,"src":"2641:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2641:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4177,"initialValue":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":4175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2683:84:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":4174,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2660:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2660:117:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2641:136:20"},{"expression":{"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4178,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"2787:12:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4179,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"2802:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2787:25:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4181,"nodeType":"ExpressionStatement","src":"2787:25:20"},{"expression":{"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4182,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"2822:15:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4183,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"2840:13:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2822:31:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4185,"nodeType":"ExpressionStatement","src":"2822:31:20"},{"expression":{"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4186,"name":"_CACHED_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"2863:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4187,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2882:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"2882:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2863:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4190,"nodeType":"ExpressionStatement","src":"2863:32:20"},{"expression":{"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4191,"name":"_CACHED_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"2905:24:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4193,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"2954:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4194,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"2964:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4195,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"2976:13:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4192,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"2932:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) view returns (bytes32)"}},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2932:58:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2905:85:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4198,"nodeType":"ExpressionStatement","src":"2905:85:20"},{"expression":{"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4199,"name":"_CACHED_THIS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"3000:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4202,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3023:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4284","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4284","typeString":"contract EIP712"}],"id":4201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3015:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4200,"name":"address","nodeType":"ElementaryTypeName","src":"3015:7:20","typeDescriptions":{}}},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3015:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3000:28:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4205,"nodeType":"ExpressionStatement","src":"3000:28:20"},{"expression":{"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4206,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"3038:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4207,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"3051:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3038:21:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4209,"nodeType":"ExpressionStatement","src":"3038:21:20"}]},"documentation":{"id":4147,"nodeType":"StructuredDocumentation","src":"1900:559:20","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":4211,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4149,"mutability":"mutable","name":"name","nameLocation":"2490:4:20","nodeType":"VariableDeclaration","scope":4211,"src":"2476:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4148,"name":"string","nodeType":"ElementaryTypeName","src":"2476:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4151,"mutability":"mutable","name":"version","nameLocation":"2510:7:20","nodeType":"VariableDeclaration","scope":4211,"src":"2496:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4150,"name":"string","nodeType":"ElementaryTypeName","src":"2496:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2475:43:20"},"returnParameters":{"id":4153,"nodeType":"ParameterList","parameters":[],"src":"2519:0:20"},"scope":4284,"src":"2464:602:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4239,"nodeType":"Block","src":"3214:246:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4219,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3236:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4284","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4284","typeString":"contract EIP712"}],"id":4218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3228:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4217,"name":"address","nodeType":"ElementaryTypeName","src":"3228:7:20","typeDescriptions":{}}},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3228:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4221,"name":"_CACHED_THIS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"3245:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3228:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4223,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3261:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3261:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4225,"name":"_CACHED_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"3278:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3261:33:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3228:66:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4237,"nodeType":"Block","src":"3358:96:20","statements":[{"expression":{"arguments":[{"id":4232,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"3401:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4233,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"3413:12:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4234,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"3427:15:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4231,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"3379:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) view returns (bytes32)"}},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3379:64:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4216,"id":4236,"nodeType":"Return","src":"3372:71:20"}]},"id":4238,"nodeType":"IfStatement","src":"3224:230:20","trueBody":{"id":4230,"nodeType":"Block","src":"3296:56:20","statements":[{"expression":{"id":4228,"name":"_CACHED_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"3317:24:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4216,"id":4229,"nodeType":"Return","src":"3310:31:20"}]}}]},"documentation":{"id":4212,"nodeType":"StructuredDocumentation","src":"3072:75:20","text":" @dev Returns the domain separator for the current chain."},"id":4240,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3161:18:20","nodeType":"FunctionDefinition","parameters":{"id":4213,"nodeType":"ParameterList","parameters":[],"src":"3179:2:20"},"returnParameters":{"id":4216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4240,"src":"3205:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3205:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3204:9:20"},"scope":4284,"src":"3152:308:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4266,"nodeType":"Block","src":"3615:108:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":4254,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"3653:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4255,"name":"nameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"3663:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4256,"name":"versionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"3673:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4257,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3686:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3686:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4261,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3709:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4284","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4284","typeString":"contract EIP712"}],"id":4260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4259,"name":"address","nodeType":"ElementaryTypeName","src":"3701:7:20","typeDescriptions":{}}},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3701:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4252,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3642:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"3642:10:20","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3642:73:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4251,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3632:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3632:84:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4250,"id":4265,"nodeType":"Return","src":"3625:91:20"}]},"id":4267,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3475:21:20","nodeType":"FunctionDefinition","parameters":{"id":4247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4242,"mutability":"mutable","name":"typeHash","nameLocation":"3514:8:20","nodeType":"VariableDeclaration","scope":4267,"src":"3506:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3506:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4244,"mutability":"mutable","name":"nameHash","nameLocation":"3540:8:20","nodeType":"VariableDeclaration","scope":4267,"src":"3532:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3532:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4246,"mutability":"mutable","name":"versionHash","nameLocation":"3566:11:20","nodeType":"VariableDeclaration","scope":4267,"src":"3558:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3558:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3496:87:20"},"returnParameters":{"id":4250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4267,"src":"3606:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3606:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3605:9:20"},"scope":4284,"src":"3466:257:20","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4282,"nodeType":"Block","src":"4434:79:20","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4277,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"4473:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4473:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4279,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"4495:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4275,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"4451:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$4130_$","typeString":"type(library ECDSA)"}},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4129,"src":"4451:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4451:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4274,"id":4281,"nodeType":"Return","src":"4444:62:20"}]},"documentation":{"id":4268,"nodeType":"StructuredDocumentation","src":"3729:614:20","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":4283,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4357:16:20","nodeType":"FunctionDefinition","parameters":{"id":4271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4270,"mutability":"mutable","name":"structHash","nameLocation":"4382:10:20","nodeType":"VariableDeclaration","scope":4283,"src":"4374:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4374:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4373:20:20"},"returnParameters":{"id":4274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4283,"src":"4425:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4425:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4424:9:20"},"scope":4284,"src":"4348:165:20","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":4285,"src":"1304:3211:20","usedErrors":[]}],"src":"113:4403:20"},"id":20},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4308],"IERC165":[4320]},"id":4309,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4286,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:21"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4287,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4309,"sourceUnit":4321,"src":"124:23:21","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4289,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":4320,"src":"754:7:21"},"id":4290,"nodeType":"InheritanceSpecifier","src":"754:7:21"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4288,"nodeType":"StructuredDocumentation","src":"149:576:21","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":4308,"linearizedBaseContracts":[4308,4320],"name":"ERC165","nameLocation":"744:6:21","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4319],"body":{"id":4306,"nodeType":"Block","src":"920:64:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4299,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"937:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4301,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"957:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4320_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4320_$","typeString":"type(contract IERC165)"}],"id":4300,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4320","typeString":"type(contract IERC165)"}},"id":4303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4298,"id":4305,"nodeType":"Return","src":"930:47:21"}]},"documentation":{"id":4291,"nodeType":"StructuredDocumentation","src":"768:56:21","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":4307,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:21","nodeType":"FunctionDefinition","overrides":{"id":4295,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:21"},"parameters":{"id":4294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4293,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:21","nodeType":"VariableDeclaration","scope":4307,"src":"856:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4292,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:21"},"returnParameters":{"id":4298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4307,"src":"914:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4296,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:21"},"scope":4308,"src":"829:155:21","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4309,"src":"726:260:21","usedErrors":[]}],"src":"99:888:21"},"id":21},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4320]},"id":4321,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4310,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:22"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4311,"nodeType":"StructuredDocumentation","src":"125:279:22","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4320,"linearizedBaseContracts":[4320],"name":"IERC165","nameLocation":"415:7:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4312,"nodeType":"StructuredDocumentation","src":"429:340:22","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4319,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:22","nodeType":"FunctionDefinition","parameters":{"id":4315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4314,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:22","nodeType":"VariableDeclaration","scope":4319,"src":"801:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4313,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:22"},"returnParameters":{"id":4318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4319,"src":"844:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4316,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:22"},"scope":4320,"src":"774:76:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4321,"src":"405:447:22","usedErrors":[]}],"src":"100:753:22"},"id":22},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5185]},"id":5186,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4322,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:23"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4323,"nodeType":"StructuredDocumentation","src":"128:73:23","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5185,"linearizedBaseContracts":[5185],"name":"Math","nameLocation":"210:4:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4327,"members":[{"id":4324,"name":"Down","nameLocation":"245:4:23","nodeType":"EnumValue","src":"245:4:23"},{"id":4325,"name":"Up","nameLocation":"287:2:23","nodeType":"EnumValue","src":"287:2:23"},{"id":4326,"name":"Zero","nameLocation":"318:4:23","nodeType":"EnumValue","src":"318:4:23"}],"name":"Rounding","nameLocation":"226:8:23","nodeType":"EnumDefinition","src":"221:122:23"},{"body":{"id":4344,"nodeType":"Block","src":"480:37:23","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4337,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"497:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4338,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"501:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4341,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"509:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:23","trueExpression":{"id":4340,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"505:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4336,"id":4343,"nodeType":"Return","src":"490:20:23"}]},"documentation":{"id":4328,"nodeType":"StructuredDocumentation","src":"349:59:23","text":" @dev Returns the largest of two numbers."},"id":4345,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:23","nodeType":"FunctionDefinition","parameters":{"id":4333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4330,"mutability":"mutable","name":"a","nameLocation":"434:1:23","nodeType":"VariableDeclaration","scope":4345,"src":"426:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4329,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4332,"mutability":"mutable","name":"b","nameLocation":"445:1:23","nodeType":"VariableDeclaration","scope":4345,"src":"437:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4331,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:23"},"returnParameters":{"id":4336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4345,"src":"471:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4334,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:23"},"scope":5185,"src":"413:104:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4362,"nodeType":"Block","src":"655:37:23","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4355,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4348,"src":"672:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4356,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4350,"src":"676:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4359,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4350,"src":"684:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:23","trueExpression":{"id":4358,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4348,"src":"680:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4354,"id":4361,"nodeType":"Return","src":"665:20:23"}]},"documentation":{"id":4346,"nodeType":"StructuredDocumentation","src":"523:60:23","text":" @dev Returns the smallest of two numbers."},"id":4363,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:23","nodeType":"FunctionDefinition","parameters":{"id":4351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4348,"mutability":"mutable","name":"a","nameLocation":"609:1:23","nodeType":"VariableDeclaration","scope":4363,"src":"601:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4347,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4350,"mutability":"mutable","name":"b","nameLocation":"620:1:23","nodeType":"VariableDeclaration","scope":4363,"src":"612:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4349,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:23"},"returnParameters":{"id":4354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4363,"src":"646:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4352,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:23"},"scope":5185,"src":"588:104:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4385,"nodeType":"Block","src":"876:82:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4373,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"931:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4374,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"935:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4377,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"941:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4378,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"945:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4380,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4372,"id":4384,"nodeType":"Return","src":"923:28:23"}]},"documentation":{"id":4364,"nodeType":"StructuredDocumentation","src":"698:102:23","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4386,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:23","nodeType":"FunctionDefinition","parameters":{"id":4369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4366,"mutability":"mutable","name":"a","nameLocation":"830:1:23","nodeType":"VariableDeclaration","scope":4386,"src":"822:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4365,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4368,"mutability":"mutable","name":"b","nameLocation":"841:1:23","nodeType":"VariableDeclaration","scope":4386,"src":"833:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4367,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:23"},"returnParameters":{"id":4372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4386,"src":"867:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4370,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:23"},"scope":5185,"src":"805:153:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4410,"nodeType":"Block","src":"1228:123:23","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4396,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"1316:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4400,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"1330:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4403,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4404,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"1339:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:23","trueExpression":{"hexValue":"30","id":4399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4395,"id":4409,"nodeType":"Return","src":"1309:35:23"}]},"documentation":{"id":4387,"nodeType":"StructuredDocumentation","src":"964:188:23","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":4411,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:23","nodeType":"FunctionDefinition","parameters":{"id":4392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4389,"mutability":"mutable","name":"a","nameLocation":"1182:1:23","nodeType":"VariableDeclaration","scope":4411,"src":"1174:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4388,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4391,"mutability":"mutable","name":"b","nameLocation":"1193:1:23","nodeType":"VariableDeclaration","scope":4411,"src":"1185:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:23"},"returnParameters":{"id":4395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4411,"src":"1219:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4393,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:23"},"scope":5185,"src":"1157:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4532,"nodeType":"Block","src":"1795:3797:23","statements":[{"id":4531,"nodeType":"UncheckedBlock","src":"1805:3781:23","statements":[{"assignments":[4424],"declarations":[{"constant":false,"id":4424,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:23","nodeType":"VariableDeclaration","scope":4531,"src":"2126:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4423,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4425,"nodeType":"VariableDeclarationStatement","src":"2126:13:23"},{"assignments":[4427],"declarations":[{"constant":false,"id":4427,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:23","nodeType":"VariableDeclaration","scope":4531,"src":"2198:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4426,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4428,"nodeType":"VariableDeclarationStatement","src":"2198:13:23"},{"AST":{"nodeType":"YulBlock","src":"2278:157:23","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:23"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:23","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:23"},"nodeType":"YulFunctionCall","src":"2319:6:23"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:23"},"nodeType":"YulFunctionCall","src":"2306:20:23"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:23","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:23"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:23"},"nodeType":"YulFunctionCall","src":"2352:9:23"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:23"}]},{"nodeType":"YulAssignment","src":"2378:43:23","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:23"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:23"},"nodeType":"YulFunctionCall","src":"2391:14:23"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:23"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:23"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:23"},"nodeType":"YulFunctionCall","src":"2407:13:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:23"},"nodeType":"YulFunctionCall","src":"2387:34:23"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:23"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4424,"isOffset":false,"isSlot":false,"src":"2343:5:23","valueSize":1},{"declaration":4424,"isOffset":false,"isSlot":false,"src":"2399:5:23","valueSize":1},{"declaration":4424,"isOffset":false,"isSlot":false,"src":"2414:5:23","valueSize":1},{"declaration":4427,"isOffset":false,"isSlot":false,"src":"2378:5:23","valueSize":1},{"declaration":4414,"isOffset":false,"isSlot":false,"src":"2313:1:23","valueSize":1},{"declaration":4414,"isOffset":false,"isSlot":false,"src":"2356:1:23","valueSize":1},{"declaration":4416,"isOffset":false,"isSlot":false,"src":"2316:1:23","valueSize":1},{"declaration":4416,"isOffset":false,"isSlot":false,"src":"2359:1:23","valueSize":1}],"id":4429,"nodeType":"InlineAssembly","src":"2269:166:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4430,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"2516:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4438,"nodeType":"IfStatement","src":"2512:75:23","trueBody":{"id":4437,"nodeType":"Block","src":"2528:59:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4433,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"2553:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4434,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"2561:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4422,"id":4436,"nodeType":"Return","src":"2546:26:23"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4440,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"2697:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4441,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"2711:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4439,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2689:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4444,"nodeType":"ExpressionStatement","src":"2689:28:23"},{"assignments":[4446],"declarations":[{"constant":false,"id":4446,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:23","nodeType":"VariableDeclaration","scope":4531,"src":"2973:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4445,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4447,"nodeType":"VariableDeclarationStatement","src":"2973:17:23"},{"AST":{"nodeType":"YulBlock","src":"3013:291:23","statements":[{"nodeType":"YulAssignment","src":"3082:38:23","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:23"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:23"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:23"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:23"},"nodeType":"YulFunctionCall","src":"3095:25:23"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:23"}]},{"nodeType":"YulAssignment","src":"3202:41:23","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:23"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:23"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:23"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:23"},"nodeType":"YulFunctionCall","src":"3222:20:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:23"},"nodeType":"YulFunctionCall","src":"3211:32:23"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:23"}]},{"nodeType":"YulAssignment","src":"3260:30:23","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:23"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:23"},"nodeType":"YulFunctionCall","src":"3269:21:23"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:23"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4418,"isOffset":false,"isSlot":false,"src":"3108:11:23","valueSize":1},{"declaration":4424,"isOffset":false,"isSlot":false,"src":"3236:5:23","valueSize":1},{"declaration":4424,"isOffset":false,"isSlot":false,"src":"3260:5:23","valueSize":1},{"declaration":4424,"isOffset":false,"isSlot":false,"src":"3273:5:23","valueSize":1},{"declaration":4427,"isOffset":false,"isSlot":false,"src":"3202:5:23","valueSize":1},{"declaration":4427,"isOffset":false,"isSlot":false,"src":"3215:5:23","valueSize":1},{"declaration":4446,"isOffset":false,"isSlot":false,"src":"3082:9:23","valueSize":1},{"declaration":4446,"isOffset":false,"isSlot":false,"src":"3225:9:23","valueSize":1},{"declaration":4446,"isOffset":false,"isSlot":false,"src":"3280:9:23","valueSize":1},{"declaration":4414,"isOffset":false,"isSlot":false,"src":"3102:1:23","valueSize":1},{"declaration":4416,"isOffset":false,"isSlot":false,"src":"3105:1:23","valueSize":1}],"id":4448,"nodeType":"InlineAssembly","src":"3004:300:23"},{"assignments":[4450],"declarations":[{"constant":false,"id":4450,"mutability":"mutable","name":"twos","nameLocation":"3619:4:23","nodeType":"VariableDeclaration","scope":4531,"src":"3611:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4449,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4458,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4451,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"3626:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:23","subExpression":{"id":4452,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"3642:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4456,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:23"},{"AST":{"nodeType":"YulBlock","src":"3681:362:23","statements":[{"nodeType":"YulAssignment","src":"3746:37:23","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:23"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:23"},"nodeType":"YulFunctionCall","src":"3761:22:23"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:23"}]},{"nodeType":"YulAssignment","src":"3850:25:23","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:23"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:23"},"nodeType":"YulFunctionCall","src":"3859:16:23"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:23"}]},{"nodeType":"YulAssignment","src":"3990:39:23","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:23","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:23"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:23"},"nodeType":"YulFunctionCall","src":"4006:12:23"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:23"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:23"},"nodeType":"YulFunctionCall","src":"4002:23:23"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:23","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:23"},"nodeType":"YulFunctionCall","src":"3998:31:23"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:23"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4418,"isOffset":false,"isSlot":false,"src":"3746:11:23","valueSize":1},{"declaration":4418,"isOffset":false,"isSlot":false,"src":"3765:11:23","valueSize":1},{"declaration":4424,"isOffset":false,"isSlot":false,"src":"3850:5:23","valueSize":1},{"declaration":4424,"isOffset":false,"isSlot":false,"src":"3863:5:23","valueSize":1},{"declaration":4450,"isOffset":false,"isSlot":false,"src":"3778:4:23","valueSize":1},{"declaration":4450,"isOffset":false,"isSlot":false,"src":"3870:4:23","valueSize":1},{"declaration":4450,"isOffset":false,"isSlot":false,"src":"3990:4:23","valueSize":1},{"declaration":4450,"isOffset":false,"isSlot":false,"src":"4013:4:23","valueSize":1},{"declaration":4450,"isOffset":false,"isSlot":false,"src":"4020:4:23","valueSize":1}],"id":4459,"nodeType":"InlineAssembly","src":"3672:371:23"},{"expression":{"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4460,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"4109:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4461,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"4118:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4462,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"4126:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4465,"nodeType":"ExpressionStatement","src":"4109:21:23"},{"assignments":[4467],"declarations":[{"constant":false,"id":4467,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:23","nodeType":"VariableDeclaration","scope":4531,"src":"4448:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4466,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4474,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4469,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"4471:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4471,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:23"},{"expression":{"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4475,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"4704:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4477,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"4719:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4478,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"4733:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4482,"nodeType":"ExpressionStatement","src":"4704:36:23"},{"expression":{"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4483,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"4773:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4485,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"4788:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4486,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"4802:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4490,"nodeType":"ExpressionStatement","src":"4773:36:23"},{"expression":{"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4491,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"4843:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4493,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"4858:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4494,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"4872:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4498,"nodeType":"ExpressionStatement","src":"4843:36:23"},{"expression":{"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4499,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"4913:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4501,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"4928:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4502,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"4942:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4506,"nodeType":"ExpressionStatement","src":"4913:36:23"},{"expression":{"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4507,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"4983:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4509,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"4998:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4510,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"5012:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4514,"nodeType":"ExpressionStatement","src":"4983:36:23"},{"expression":{"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4515,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"5054:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4517,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"5069:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4518,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"5083:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4522,"nodeType":"ExpressionStatement","src":"5054:36:23"},{"expression":{"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4523,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"5524:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4524,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"5533:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4525,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"5541:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4528,"nodeType":"ExpressionStatement","src":"5524:24:23"},{"expression":{"id":4529,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4421,"src":"5569:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4422,"id":4530,"nodeType":"Return","src":"5562:13:23"}]}]},"documentation":{"id":4412,"nodeType":"StructuredDocumentation","src":"1357:305:23","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":4533,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:23","nodeType":"FunctionDefinition","parameters":{"id":4419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4414,"mutability":"mutable","name":"x","nameLocation":"1700:1:23","nodeType":"VariableDeclaration","scope":4533,"src":"1692:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4413,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4416,"mutability":"mutable","name":"y","nameLocation":"1719:1:23","nodeType":"VariableDeclaration","scope":4533,"src":"1711:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4415,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4418,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:23","nodeType":"VariableDeclaration","scope":4533,"src":"1730:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4417,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:23"},"returnParameters":{"id":4422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4421,"mutability":"mutable","name":"result","nameLocation":"1787:6:23","nodeType":"VariableDeclaration","scope":4533,"src":"1779:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4420,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:23"},"scope":5185,"src":"1667:3925:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4576,"nodeType":"Block","src":"5872:189:23","statements":[{"assignments":[4549],"declarations":[{"constant":false,"id":4549,"mutability":"mutable","name":"result","nameLocation":"5890:6:23","nodeType":"VariableDeclaration","scope":4576,"src":"5882:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4548,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4555,"initialValue":{"arguments":[{"id":4551,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"5906:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4552,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"5909:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4553,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"5912:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4550,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4533,4577],"referencedDeclaration":4533,"src":"5899:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5899:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:23"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4556,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"5938:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4557,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4327,"src":"5950:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4327_$","typeString":"type(enum Math.Rounding)"}},"id":4558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4325,"src":"5950:11:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"}},"src":"5938:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4561,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"5972:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4562,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"5975:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4563,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"5978:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4560,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:23","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5965:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4573,"nodeType":"IfStatement","src":"5934:98:23","trueBody":{"id":4572,"nodeType":"Block","src":"5996:36:23","statements":[{"expression":{"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4568,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"6010:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4571,"nodeType":"ExpressionStatement","src":"6010:11:23"}]}},{"expression":{"id":4574,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"6048:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4547,"id":4575,"nodeType":"Return","src":"6041:13:23"}]},"documentation":{"id":4534,"nodeType":"StructuredDocumentation","src":"5598:121:23","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4577,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:23","nodeType":"FunctionDefinition","parameters":{"id":4544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4536,"mutability":"mutable","name":"x","nameLocation":"5757:1:23","nodeType":"VariableDeclaration","scope":4577,"src":"5749:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4535,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4538,"mutability":"mutable","name":"y","nameLocation":"5776:1:23","nodeType":"VariableDeclaration","scope":4577,"src":"5768:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4537,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4540,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:23","nodeType":"VariableDeclaration","scope":4577,"src":"5787:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4539,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4543,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:23","nodeType":"VariableDeclaration","scope":4577,"src":"5816:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"},"typeName":{"id":4542,"nodeType":"UserDefinedTypeName","pathNode":{"id":4541,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":4327,"src":"5816:8:23"},"referencedDeclaration":4327,"src":"5816:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:23"},"returnParameters":{"id":4547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4577,"src":"5863:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4545,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:23"},"scope":5185,"src":"5724:337:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4688,"nodeType":"Block","src":"6337:1585:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4585,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"6351:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4591,"nodeType":"IfStatement","src":"6347:45:23","trueBody":{"id":4590,"nodeType":"Block","src":"6359:33:23","statements":[{"expression":{"hexValue":"30","id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4584,"id":4589,"nodeType":"Return","src":"6373:8:23"}]}},{"assignments":[4593],"declarations":[{"constant":false,"id":4593,"mutability":"mutable","name":"result","nameLocation":"7079:6:23","nodeType":"VariableDeclaration","scope":4688,"src":"7071:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4592,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4602,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4596,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"7099:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4595,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4857,4893],"referencedDeclaration":4857,"src":"7094:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7094:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4600,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:23"},{"id":4687,"nodeType":"UncheckedBlock","src":"7508:408:23","statements":[{"expression":{"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4603,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"7532:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4604,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"7542:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4605,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"7551:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4606,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"7555:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4609,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4613,"nodeType":"ExpressionStatement","src":"7532:35:23"},{"expression":{"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4614,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"7581:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4615,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"7591:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4616,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"7600:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4617,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"7604:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4624,"nodeType":"ExpressionStatement","src":"7581:35:23"},{"expression":{"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4625,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"7630:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4626,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"7640:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4627,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"7649:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4628,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"7653:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4635,"nodeType":"ExpressionStatement","src":"7630:35:23"},{"expression":{"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4636,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"7679:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4637,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"7689:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4638,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"7698:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4639,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"7702:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4642,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4646,"nodeType":"ExpressionStatement","src":"7679:35:23"},{"expression":{"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4647,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"7728:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4648,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"7738:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4649,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"7747:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4650,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"7751:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4653,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4657,"nodeType":"ExpressionStatement","src":"7728:35:23"},{"expression":{"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4658,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"7777:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4659,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"7787:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4660,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"7796:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4661,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"7800:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4664,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4668,"nodeType":"ExpressionStatement","src":"7777:35:23"},{"expression":{"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4669,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"7826:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4670,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"7836:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4671,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"7845:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4672,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"7849:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4675,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4679,"nodeType":"ExpressionStatement","src":"7826:35:23"},{"expression":{"arguments":[{"id":4681,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"7886:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4682,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"7894:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4683,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"7898:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4680,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"7882:3:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7882:23:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4584,"id":4686,"nodeType":"Return","src":"7875:30:23"}]}]},"documentation":{"id":4578,"nodeType":"StructuredDocumentation","src":"6067:208:23","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":4689,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:23","nodeType":"FunctionDefinition","parameters":{"id":4581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4580,"mutability":"mutable","name":"a","nameLocation":"6302:1:23","nodeType":"VariableDeclaration","scope":4689,"src":"6294:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4579,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:23"},"returnParameters":{"id":4584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4689,"src":"6328:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4582,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:23"},"scope":5185,"src":"6280:1642:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4724,"nodeType":"Block","src":"8098:161:23","statements":[{"id":4723,"nodeType":"UncheckedBlock","src":"8108:145:23","statements":[{"assignments":[4701],"declarations":[{"constant":false,"id":4701,"mutability":"mutable","name":"result","nameLocation":"8140:6:23","nodeType":"VariableDeclaration","scope":4723,"src":"8132:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4700,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4705,"initialValue":{"arguments":[{"id":4703,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"8154:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4702,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4689,4725],"referencedDeclaration":4689,"src":"8149:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8149:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4706,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"8177:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"},"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4707,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4695,"src":"8187:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4708,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4327,"src":"8199:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4327_$","typeString":"type(enum Math.Rounding)"}},"id":4709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4325,"src":"8199:11:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"}},"src":"8187:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4711,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"8214:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4712,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"8223:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4714,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"8232:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:23","trueExpression":{"hexValue":"31","id":4717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4720,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4699,"id":4722,"nodeType":"Return","src":"8170:72:23"}]}]},"documentation":{"id":4690,"nodeType":"StructuredDocumentation","src":"7928:89:23","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":4725,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:23","nodeType":"FunctionDefinition","parameters":{"id":4696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4692,"mutability":"mutable","name":"a","nameLocation":"8044:1:23","nodeType":"VariableDeclaration","scope":4725,"src":"8036:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4691,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4695,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:23","nodeType":"VariableDeclaration","scope":4725,"src":"8047:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"},"typeName":{"id":4694,"nodeType":"UserDefinedTypeName","pathNode":{"id":4693,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":4327,"src":"8047:8:23"},"referencedDeclaration":4327,"src":"8047:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:23"},"returnParameters":{"id":4699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4725,"src":"8089:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4697,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:23"},"scope":5185,"src":"8022:237:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4856,"nodeType":"Block","src":"8444:922:23","statements":[{"assignments":[4734],"declarations":[{"constant":false,"id":4734,"mutability":"mutable","name":"result","nameLocation":"8462:6:23","nodeType":"VariableDeclaration","scope":4856,"src":"8454:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4733,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4736,"initialValue":{"hexValue":"30","id":4735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:23"},{"id":4853,"nodeType":"UncheckedBlock","src":"8482:855:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"8510:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4751,"nodeType":"IfStatement","src":"8506:99:23","trueBody":{"id":4750,"nodeType":"Block","src":"8528:77:23","statements":[{"expression":{"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"8546:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4745,"nodeType":"ExpressionStatement","src":"8546:13:23"},{"expression":{"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4746,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"8577:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":4747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4749,"nodeType":"ExpressionStatement","src":"8577:13:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"8622:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4766,"nodeType":"IfStatement","src":"8618:96:23","trueBody":{"id":4765,"nodeType":"Block","src":"8639:75:23","statements":[{"expression":{"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"8657:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4760,"nodeType":"ExpressionStatement","src":"8657:12:23"},{"expression":{"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4761,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"8687:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4764,"nodeType":"ExpressionStatement","src":"8687:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"8731:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4781,"nodeType":"IfStatement","src":"8727:96:23","trueBody":{"id":4780,"nodeType":"Block","src":"8748:75:23","statements":[{"expression":{"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"8766:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4775,"nodeType":"ExpressionStatement","src":"8766:12:23"},{"expression":{"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4776,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"8796:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4779,"nodeType":"ExpressionStatement","src":"8796:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"8840:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4796,"nodeType":"IfStatement","src":"8836:96:23","trueBody":{"id":4795,"nodeType":"Block","src":"8857:75:23","statements":[{"expression":{"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"8875:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4790,"nodeType":"ExpressionStatement","src":"8875:12:23"},{"expression":{"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4791,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"8905:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4794,"nodeType":"ExpressionStatement","src":"8905:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"8949:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4811,"nodeType":"IfStatement","src":"8945:93:23","trueBody":{"id":4810,"nodeType":"Block","src":"8965:73:23","statements":[{"expression":{"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"8983:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4805,"nodeType":"ExpressionStatement","src":"8983:11:23"},{"expression":{"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4806,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"9012:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4809,"nodeType":"ExpressionStatement","src":"9012:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"9055:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":4813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4826,"nodeType":"IfStatement","src":"9051:93:23","trueBody":{"id":4825,"nodeType":"Block","src":"9071:73:23","statements":[{"expression":{"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"9089:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4820,"nodeType":"ExpressionStatement","src":"9089:11:23"},{"expression":{"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4821,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"9118:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4824,"nodeType":"ExpressionStatement","src":"9118:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"9161:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":4828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4841,"nodeType":"IfStatement","src":"9157:93:23","trueBody":{"id":4840,"nodeType":"Block","src":"9177:73:23","statements":[{"expression":{"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"9195:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":4833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4835,"nodeType":"ExpressionStatement","src":"9195:11:23"},{"expression":{"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4836,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"9224:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4839,"nodeType":"ExpressionStatement","src":"9224:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"9267:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4852,"nodeType":"IfStatement","src":"9263:64:23","trueBody":{"id":4851,"nodeType":"Block","src":"9283:44:23","statements":[{"expression":{"id":4849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4847,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"9301:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4850,"nodeType":"ExpressionStatement","src":"9301:11:23"}]}}]},{"expression":{"id":4854,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4734,"src":"9353:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4732,"id":4855,"nodeType":"Return","src":"9346:13:23"}]},"documentation":{"id":4726,"nodeType":"StructuredDocumentation","src":"8265:113:23","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":4857,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:23","nodeType":"FunctionDefinition","parameters":{"id":4729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4728,"mutability":"mutable","name":"value","nameLocation":"8405:5:23","nodeType":"VariableDeclaration","scope":4857,"src":"8397:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4727,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:23"},"returnParameters":{"id":4732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4857,"src":"8435:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4730,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:23"},"scope":5185,"src":"8383:983:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4892,"nodeType":"Block","src":"9599:165:23","statements":[{"id":4891,"nodeType":"UncheckedBlock","src":"9609:149:23","statements":[{"assignments":[4869],"declarations":[{"constant":false,"id":4869,"mutability":"mutable","name":"result","nameLocation":"9641:6:23","nodeType":"VariableDeclaration","scope":4891,"src":"9633:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4868,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4873,"initialValue":{"arguments":[{"id":4871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"9655:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4870,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4857,4893],"referencedDeclaration":4857,"src":"9650:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9650:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4874,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"9682:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4875,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"9692:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4876,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4327,"src":"9704:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4327_$","typeString":"type(enum Math.Rounding)"}},"id":4877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4325,"src":"9704:11:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"}},"src":"9692:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4880,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"9724:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"9733:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:23","trueExpression":{"hexValue":"31","id":4885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4888,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4867,"id":4890,"nodeType":"Return","src":"9675:72:23"}]}]},"documentation":{"id":4858,"nodeType":"StructuredDocumentation","src":"9372:142:23","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4893,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:23","nodeType":"FunctionDefinition","parameters":{"id":4864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4860,"mutability":"mutable","name":"value","nameLocation":"9541:5:23","nodeType":"VariableDeclaration","scope":4893,"src":"9533:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4859,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4863,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:23","nodeType":"VariableDeclaration","scope":4893,"src":"9548:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"},"typeName":{"id":4862,"nodeType":"UserDefinedTypeName","pathNode":{"id":4861,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":4327,"src":"9548:8:23"},"referencedDeclaration":4327,"src":"9548:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:23"},"returnParameters":{"id":4867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4893,"src":"9590:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4865,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:23"},"scope":5185,"src":"9519:245:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5021,"nodeType":"Block","src":"9951:828:23","statements":[{"assignments":[4902],"declarations":[{"constant":false,"id":4902,"mutability":"mutable","name":"result","nameLocation":"9969:6:23","nodeType":"VariableDeclaration","scope":5021,"src":"9961:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4901,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4904,"initialValue":{"hexValue":"30","id":4903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:23"},{"id":5018,"nodeType":"UncheckedBlock","src":"9989:761:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"10017:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4921,"nodeType":"IfStatement","src":"10013:99:23","trueBody":{"id":4920,"nodeType":"Block","src":"10034:78:23","statements":[{"expression":{"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"10052:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4915,"nodeType":"ExpressionStatement","src":"10052:15:23"},{"expression":{"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4916,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"10085:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4919,"nodeType":"ExpressionStatement","src":"10085:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"10129:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4938,"nodeType":"IfStatement","src":"10125:99:23","trueBody":{"id":4937,"nodeType":"Block","src":"10146:78:23","statements":[{"expression":{"id":4931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"10164:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4932,"nodeType":"ExpressionStatement","src":"10164:15:23"},{"expression":{"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4933,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"10197:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4936,"nodeType":"ExpressionStatement","src":"10197:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"10241:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4955,"nodeType":"IfStatement","src":"10237:99:23","trueBody":{"id":4954,"nodeType":"Block","src":"10258:78:23","statements":[{"expression":{"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"10276:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4949,"nodeType":"ExpressionStatement","src":"10276:15:23"},{"expression":{"id":4952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4950,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"10309:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4953,"nodeType":"ExpressionStatement","src":"10309:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"10353:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4972,"nodeType":"IfStatement","src":"10349:96:23","trueBody":{"id":4971,"nodeType":"Block","src":"10369:76:23","statements":[{"expression":{"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"10387:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4966,"nodeType":"ExpressionStatement","src":"10387:14:23"},{"expression":{"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4967,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"10419:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4970,"nodeType":"ExpressionStatement","src":"10419:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"10462:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4989,"nodeType":"IfStatement","src":"10458:96:23","trueBody":{"id":4988,"nodeType":"Block","src":"10478:76:23","statements":[{"expression":{"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"10496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4983,"nodeType":"ExpressionStatement","src":"10496:14:23"},{"expression":{"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4984,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"10528:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4987,"nodeType":"ExpressionStatement","src":"10528:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"10571:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5006,"nodeType":"IfStatement","src":"10567:96:23","trueBody":{"id":5005,"nodeType":"Block","src":"10587:76:23","statements":[{"expression":{"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"10605:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5000,"nodeType":"ExpressionStatement","src":"10605:14:23"},{"expression":{"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5001,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"10637:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5004,"nodeType":"ExpressionStatement","src":"10637:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"10680:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5017,"nodeType":"IfStatement","src":"10676:64:23","trueBody":{"id":5016,"nodeType":"Block","src":"10696:44:23","statements":[{"expression":{"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5012,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"10714:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5015,"nodeType":"ExpressionStatement","src":"10714:11:23"}]}}]},{"expression":{"id":5019,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"10766:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4900,"id":5020,"nodeType":"Return","src":"10759:13:23"}]},"documentation":{"id":4894,"nodeType":"StructuredDocumentation","src":"9770:114:23","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":5022,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:23","nodeType":"FunctionDefinition","parameters":{"id":4897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4896,"mutability":"mutable","name":"value","nameLocation":"9912:5:23","nodeType":"VariableDeclaration","scope":5022,"src":"9904:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4895,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:23"},"returnParameters":{"id":4900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5022,"src":"9942:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4898,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:23"},"scope":5185,"src":"9889:890:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5057,"nodeType":"Block","src":"11014:165:23","statements":[{"id":5056,"nodeType":"UncheckedBlock","src":"11024:149:23","statements":[{"assignments":[5034],"declarations":[{"constant":false,"id":5034,"mutability":"mutable","name":"result","nameLocation":"11056:6:23","nodeType":"VariableDeclaration","scope":5056,"src":"11048:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5033,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5038,"initialValue":{"arguments":[{"id":5036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"11071:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5035,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5022,5058],"referencedDeclaration":5022,"src":"11065:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11065:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5039,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"11098:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5040,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5028,"src":"11108:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5041,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4327,"src":"11120:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4327_$","typeString":"type(enum Math.Rounding)"}},"id":5042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4325,"src":"11120:11:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"}},"src":"11108:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5045,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5034,"src":"11139:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"11148:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:23","trueExpression":{"hexValue":"31","id":5050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5053,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5032,"id":5055,"nodeType":"Return","src":"11091:71:23"}]}]},"documentation":{"id":5023,"nodeType":"StructuredDocumentation","src":"10785:143:23","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5058,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:23","nodeType":"FunctionDefinition","parameters":{"id":5029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5025,"mutability":"mutable","name":"value","nameLocation":"10956:5:23","nodeType":"VariableDeclaration","scope":5058,"src":"10948:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5024,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5028,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:23","nodeType":"VariableDeclaration","scope":5058,"src":"10963:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"},"typeName":{"id":5027,"nodeType":"UserDefinedTypeName","pathNode":{"id":5026,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":4327,"src":"10963:8:23"},"referencedDeclaration":4327,"src":"10963:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:23"},"returnParameters":{"id":5032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5058,"src":"11005:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5030,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:23"},"scope":5185,"src":"10933:246:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5144,"nodeType":"Block","src":"11493:600:23","statements":[{"assignments":[5067],"declarations":[{"constant":false,"id":5067,"mutability":"mutable","name":"result","nameLocation":"11511:6:23","nodeType":"VariableDeclaration","scope":5144,"src":"11503:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5066,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5069,"initialValue":{"hexValue":"30","id":5068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:23"},{"id":5141,"nodeType":"UncheckedBlock","src":"11531:533:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"11559:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":5071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5084,"nodeType":"IfStatement","src":"11555:98:23","trueBody":{"id":5083,"nodeType":"Block","src":"11577:76:23","statements":[{"expression":{"id":5077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"11595:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5078,"nodeType":"ExpressionStatement","src":"11595:13:23"},{"expression":{"id":5081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5079,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"11626:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5082,"nodeType":"ExpressionStatement","src":"11626:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"11670:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":5086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5099,"nodeType":"IfStatement","src":"11666:95:23","trueBody":{"id":5098,"nodeType":"Block","src":"11687:74:23","statements":[{"expression":{"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"11705:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5093,"nodeType":"ExpressionStatement","src":"11705:12:23"},{"expression":{"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5094,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"11735:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5097,"nodeType":"ExpressionStatement","src":"11735:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"11778:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":5101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5114,"nodeType":"IfStatement","src":"11774:95:23","trueBody":{"id":5113,"nodeType":"Block","src":"11795:74:23","statements":[{"expression":{"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"11813:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5108,"nodeType":"ExpressionStatement","src":"11813:12:23"},{"expression":{"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5109,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"11843:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5112,"nodeType":"ExpressionStatement","src":"11843:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"11886:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":5116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5129,"nodeType":"IfStatement","src":"11882:95:23","trueBody":{"id":5128,"nodeType":"Block","src":"11903:74:23","statements":[{"expression":{"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"11921:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5123,"nodeType":"ExpressionStatement","src":"11921:12:23"},{"expression":{"id":5126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5124,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"11951:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5127,"nodeType":"ExpressionStatement","src":"11951:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"11994:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":5131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5140,"nodeType":"IfStatement","src":"11990:64:23","trueBody":{"id":5139,"nodeType":"Block","src":"12010:44:23","statements":[{"expression":{"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5135,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"12028:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5138,"nodeType":"ExpressionStatement","src":"12028:11:23"}]}}]},{"expression":{"id":5142,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"12080:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5065,"id":5143,"nodeType":"Return","src":"12073:13:23"}]},"documentation":{"id":5059,"nodeType":"StructuredDocumentation","src":"11185:240:23","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5145,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:23","nodeType":"FunctionDefinition","parameters":{"id":5062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5061,"mutability":"mutable","name":"value","nameLocation":"11454:5:23","nodeType":"VariableDeclaration","scope":5145,"src":"11446:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5060,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:23"},"returnParameters":{"id":5065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5145,"src":"11484:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5063,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:23"},"scope":5185,"src":"11430:663:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5183,"nodeType":"Block","src":"12329:173:23","statements":[{"id":5182,"nodeType":"UncheckedBlock","src":"12339:157:23","statements":[{"assignments":[5157],"declarations":[{"constant":false,"id":5157,"mutability":"mutable","name":"result","nameLocation":"12371:6:23","nodeType":"VariableDeclaration","scope":5182,"src":"12363:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5156,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5161,"initialValue":{"arguments":[{"id":5159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"12387:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5158,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5145,5184],"referencedDeclaration":5145,"src":"12380:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12380:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5162,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"12414:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5163,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"12424:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5164,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4327,"src":"12436:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4327_$","typeString":"type(enum Math.Rounding)"}},"id":5165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":4325,"src":"12436:11:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"}},"src":"12424:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5168,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"12457:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":5169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"12471:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:23","trueExpression":{"hexValue":"31","id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5155,"id":5181,"nodeType":"Return","src":"12407:78:23"}]}]},"documentation":{"id":5146,"nodeType":"StructuredDocumentation","src":"12099:143:23","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5184,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:23","nodeType":"FunctionDefinition","parameters":{"id":5152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5148,"mutability":"mutable","name":"value","nameLocation":"12271:5:23","nodeType":"VariableDeclaration","scope":5184,"src":"12263:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5147,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5151,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:23","nodeType":"VariableDeclaration","scope":5184,"src":"12278:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"},"typeName":{"id":5150,"nodeType":"UserDefinedTypeName","pathNode":{"id":5149,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":4327,"src":"12278:8:23"},"referencedDeclaration":4327,"src":"12278:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4327","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:23"},"returnParameters":{"id":5155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5184,"src":"12320:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5153,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:23"},"scope":5185,"src":"12247:255:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5186,"src":"202:12302:23","usedErrors":[]}],"src":"103:12402:23"},"id":23},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6726]},"id":6727,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5187,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"192:23:24"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5188,"nodeType":"StructuredDocumentation","src":"217:709:24","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":6726,"linearizedBaseContracts":[6726],"name":"SafeCast","nameLocation":"935:8:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":5212,"nodeType":"Block","src":"1339:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"1357:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1371:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5199,"name":"uint248","nodeType":"ElementaryTypeName","src":"1371:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5198,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1366:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1366:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1366:17:24","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1357:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":5204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1385:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":5196,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1349:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1349:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5206,"nodeType":"ExpressionStatement","src":"1349:78:24"},{"expression":{"arguments":[{"id":5209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5191,"src":"1452:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1444:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5207,"name":"uint248","nodeType":"ElementaryTypeName","src":"1444:7:24","typeDescriptions":{}}},"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1444:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5195,"id":5211,"nodeType":"Return","src":"1437:21:24"}]},"documentation":{"id":5189,"nodeType":"StructuredDocumentation","src":"950:318:24","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":5213,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1282:9:24","nodeType":"FunctionDefinition","parameters":{"id":5192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5191,"mutability":"mutable","name":"value","nameLocation":"1300:5:24","nodeType":"VariableDeclaration","scope":5213,"src":"1292:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5190,"name":"uint256","nodeType":"ElementaryTypeName","src":"1292:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1291:15:24"},"returnParameters":{"id":5195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5213,"src":"1330:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5193,"name":"uint248","nodeType":"ElementaryTypeName","src":"1330:7:24","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1329:9:24"},"scope":6726,"src":"1273:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5237,"nodeType":"Block","src":"1860:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"1878:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1892:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5224,"name":"uint240","nodeType":"ElementaryTypeName","src":"1892:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5223,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1887:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1887:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"1887:17:24","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1878:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":5229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":5221,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1870:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1870:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5231,"nodeType":"ExpressionStatement","src":"1870:78:24"},{"expression":{"arguments":[{"id":5234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"1973:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1965:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5232,"name":"uint240","nodeType":"ElementaryTypeName","src":"1965:7:24","typeDescriptions":{}}},"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1965:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5220,"id":5236,"nodeType":"Return","src":"1958:21:24"}]},"documentation":{"id":5214,"nodeType":"StructuredDocumentation","src":"1471:318:24","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":5238,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1803:9:24","nodeType":"FunctionDefinition","parameters":{"id":5217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5216,"mutability":"mutable","name":"value","nameLocation":"1821:5:24","nodeType":"VariableDeclaration","scope":5238,"src":"1813:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5215,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1812:15:24"},"returnParameters":{"id":5220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5238,"src":"1851:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5218,"name":"uint240","nodeType":"ElementaryTypeName","src":"1851:7:24","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1850:9:24"},"scope":6726,"src":"1794:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5262,"nodeType":"Block","src":"2381:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"2399:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2413:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5249,"name":"uint232","nodeType":"ElementaryTypeName","src":"2413:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5248,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2408:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2408:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2408:17:24","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2399:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":5254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2427:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":5246,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2391:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2391:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5256,"nodeType":"ExpressionStatement","src":"2391:78:24"},{"expression":{"arguments":[{"id":5259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5241,"src":"2494:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2486:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5257,"name":"uint232","nodeType":"ElementaryTypeName","src":"2486:7:24","typeDescriptions":{}}},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2486:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5245,"id":5261,"nodeType":"Return","src":"2479:21:24"}]},"documentation":{"id":5239,"nodeType":"StructuredDocumentation","src":"1992:318:24","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":5263,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2324:9:24","nodeType":"FunctionDefinition","parameters":{"id":5242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5241,"mutability":"mutable","name":"value","nameLocation":"2342:5:24","nodeType":"VariableDeclaration","scope":5263,"src":"2334:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5240,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:24"},"returnParameters":{"id":5245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5263,"src":"2372:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5243,"name":"uint232","nodeType":"ElementaryTypeName","src":"2372:7:24","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2371:9:24"},"scope":6726,"src":"2315:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5287,"nodeType":"Block","src":"2902:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5266,"src":"2920:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2934:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5274,"name":"uint224","nodeType":"ElementaryTypeName","src":"2934:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5273,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2929:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2929:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2929:17:24","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2920:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":5279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2948:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":5271,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2912:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2912:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5281,"nodeType":"ExpressionStatement","src":"2912:78:24"},{"expression":{"arguments":[{"id":5284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5266,"src":"3015:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3007:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5282,"name":"uint224","nodeType":"ElementaryTypeName","src":"3007:7:24","typeDescriptions":{}}},"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3007:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5270,"id":5286,"nodeType":"Return","src":"3000:21:24"}]},"documentation":{"id":5264,"nodeType":"StructuredDocumentation","src":"2513:318:24","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":5288,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2845:9:24","nodeType":"FunctionDefinition","parameters":{"id":5267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5266,"mutability":"mutable","name":"value","nameLocation":"2863:5:24","nodeType":"VariableDeclaration","scope":5288,"src":"2855:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5265,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:15:24"},"returnParameters":{"id":5270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5288,"src":"2893:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5268,"name":"uint224","nodeType":"ElementaryTypeName","src":"2893:7:24","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2892:9:24"},"scope":6726,"src":"2836:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5312,"nodeType":"Block","src":"3423:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"3441:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3455:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5299,"name":"uint216","nodeType":"ElementaryTypeName","src":"3455:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5298,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3450:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3450:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3450:17:24","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3441:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":5304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3469:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":5296,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3433:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3433:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5306,"nodeType":"ExpressionStatement","src":"3433:78:24"},{"expression":{"arguments":[{"id":5309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"3536:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3528:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5307,"name":"uint216","nodeType":"ElementaryTypeName","src":"3528:7:24","typeDescriptions":{}}},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3528:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5295,"id":5311,"nodeType":"Return","src":"3521:21:24"}]},"documentation":{"id":5289,"nodeType":"StructuredDocumentation","src":"3034:318:24","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":5313,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3366:9:24","nodeType":"FunctionDefinition","parameters":{"id":5292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5291,"mutability":"mutable","name":"value","nameLocation":"3384:5:24","nodeType":"VariableDeclaration","scope":5313,"src":"3376:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5290,"name":"uint256","nodeType":"ElementaryTypeName","src":"3376:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3375:15:24"},"returnParameters":{"id":5295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5313,"src":"3414:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5293,"name":"uint216","nodeType":"ElementaryTypeName","src":"3414:7:24","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3413:9:24"},"scope":6726,"src":"3357:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5337,"nodeType":"Block","src":"3944:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"3962:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3976:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5324,"name":"uint208","nodeType":"ElementaryTypeName","src":"3976:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5323,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3971:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3971:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3971:17:24","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3962:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":5329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3990:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":5321,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3954:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3954:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5331,"nodeType":"ExpressionStatement","src":"3954:78:24"},{"expression":{"arguments":[{"id":5334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"4057:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4049:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5332,"name":"uint208","nodeType":"ElementaryTypeName","src":"4049:7:24","typeDescriptions":{}}},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4049:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5320,"id":5336,"nodeType":"Return","src":"4042:21:24"}]},"documentation":{"id":5314,"nodeType":"StructuredDocumentation","src":"3555:318:24","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":5338,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3887:9:24","nodeType":"FunctionDefinition","parameters":{"id":5317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5316,"mutability":"mutable","name":"value","nameLocation":"3905:5:24","nodeType":"VariableDeclaration","scope":5338,"src":"3897:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5315,"name":"uint256","nodeType":"ElementaryTypeName","src":"3897:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3896:15:24"},"returnParameters":{"id":5320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5338,"src":"3935:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5318,"name":"uint208","nodeType":"ElementaryTypeName","src":"3935:7:24","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3934:9:24"},"scope":6726,"src":"3878:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5362,"nodeType":"Block","src":"4465:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5341,"src":"4483:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4497:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5349,"name":"uint200","nodeType":"ElementaryTypeName","src":"4497:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5348,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4492:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4492:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"4492:17:24","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4483:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":5354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4511:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":5346,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4475:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4475:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5356,"nodeType":"ExpressionStatement","src":"4475:78:24"},{"expression":{"arguments":[{"id":5359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5341,"src":"4578:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4570:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5357,"name":"uint200","nodeType":"ElementaryTypeName","src":"4570:7:24","typeDescriptions":{}}},"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4570:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5345,"id":5361,"nodeType":"Return","src":"4563:21:24"}]},"documentation":{"id":5339,"nodeType":"StructuredDocumentation","src":"4076:318:24","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":5363,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4408:9:24","nodeType":"FunctionDefinition","parameters":{"id":5342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5341,"mutability":"mutable","name":"value","nameLocation":"4426:5:24","nodeType":"VariableDeclaration","scope":5363,"src":"4418:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5340,"name":"uint256","nodeType":"ElementaryTypeName","src":"4418:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4417:15:24"},"returnParameters":{"id":5345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5363,"src":"4456:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5343,"name":"uint200","nodeType":"ElementaryTypeName","src":"4456:7:24","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4455:9:24"},"scope":6726,"src":"4399:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5387,"nodeType":"Block","src":"4986:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5366,"src":"5004:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5018:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5374,"name":"uint192","nodeType":"ElementaryTypeName","src":"5018:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5373,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5013:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5013:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5013:17:24","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5004:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":5379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5032:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":5371,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4996:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4996:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5381,"nodeType":"ExpressionStatement","src":"4996:78:24"},{"expression":{"arguments":[{"id":5384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5366,"src":"5099:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5091:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5382,"name":"uint192","nodeType":"ElementaryTypeName","src":"5091:7:24","typeDescriptions":{}}},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5091:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5370,"id":5386,"nodeType":"Return","src":"5084:21:24"}]},"documentation":{"id":5364,"nodeType":"StructuredDocumentation","src":"4597:318:24","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":5388,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4929:9:24","nodeType":"FunctionDefinition","parameters":{"id":5367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5366,"mutability":"mutable","name":"value","nameLocation":"4947:5:24","nodeType":"VariableDeclaration","scope":5388,"src":"4939:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5365,"name":"uint256","nodeType":"ElementaryTypeName","src":"4939:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4938:15:24"},"returnParameters":{"id":5370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5388,"src":"4977:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5368,"name":"uint192","nodeType":"ElementaryTypeName","src":"4977:7:24","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4976:9:24"},"scope":6726,"src":"4920:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5412,"nodeType":"Block","src":"5507:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5391,"src":"5525:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5539:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5399,"name":"uint184","nodeType":"ElementaryTypeName","src":"5539:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5534:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5534:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5534:17:24","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5525:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":5404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5553:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":5396,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5517:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5517:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5406,"nodeType":"ExpressionStatement","src":"5517:78:24"},{"expression":{"arguments":[{"id":5409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5391,"src":"5620:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5407,"name":"uint184","nodeType":"ElementaryTypeName","src":"5612:7:24","typeDescriptions":{}}},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5612:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5395,"id":5411,"nodeType":"Return","src":"5605:21:24"}]},"documentation":{"id":5389,"nodeType":"StructuredDocumentation","src":"5118:318:24","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":5413,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5450:9:24","nodeType":"FunctionDefinition","parameters":{"id":5392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5391,"mutability":"mutable","name":"value","nameLocation":"5468:5:24","nodeType":"VariableDeclaration","scope":5413,"src":"5460:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5390,"name":"uint256","nodeType":"ElementaryTypeName","src":"5460:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5459:15:24"},"returnParameters":{"id":5395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5413,"src":"5498:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5393,"name":"uint184","nodeType":"ElementaryTypeName","src":"5498:7:24","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5497:9:24"},"scope":6726,"src":"5441:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5437,"nodeType":"Block","src":"6028:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5416,"src":"6046:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6060:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5424,"name":"uint176","nodeType":"ElementaryTypeName","src":"6060:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5423,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6055:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6055:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6055:17:24","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6046:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":5429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6074:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":5421,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6038:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6038:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5431,"nodeType":"ExpressionStatement","src":"6038:78:24"},{"expression":{"arguments":[{"id":5434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5416,"src":"6141:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5432,"name":"uint176","nodeType":"ElementaryTypeName","src":"6133:7:24","typeDescriptions":{}}},"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6133:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5420,"id":5436,"nodeType":"Return","src":"6126:21:24"}]},"documentation":{"id":5414,"nodeType":"StructuredDocumentation","src":"5639:318:24","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":5438,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5971:9:24","nodeType":"FunctionDefinition","parameters":{"id":5417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5416,"mutability":"mutable","name":"value","nameLocation":"5989:5:24","nodeType":"VariableDeclaration","scope":5438,"src":"5981:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5415,"name":"uint256","nodeType":"ElementaryTypeName","src":"5981:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5980:15:24"},"returnParameters":{"id":5420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5438,"src":"6019:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5418,"name":"uint176","nodeType":"ElementaryTypeName","src":"6019:7:24","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6018:9:24"},"scope":6726,"src":"5962:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5462,"nodeType":"Block","src":"6549:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"6567:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6581:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5449,"name":"uint168","nodeType":"ElementaryTypeName","src":"6581:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5448,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6576:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6576:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6576:17:24","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6567:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":5454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6595:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":5446,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6559:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6559:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5456,"nodeType":"ExpressionStatement","src":"6559:78:24"},{"expression":{"arguments":[{"id":5459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5441,"src":"6662:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6654:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5457,"name":"uint168","nodeType":"ElementaryTypeName","src":"6654:7:24","typeDescriptions":{}}},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6654:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5445,"id":5461,"nodeType":"Return","src":"6647:21:24"}]},"documentation":{"id":5439,"nodeType":"StructuredDocumentation","src":"6160:318:24","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":5463,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6492:9:24","nodeType":"FunctionDefinition","parameters":{"id":5442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5441,"mutability":"mutable","name":"value","nameLocation":"6510:5:24","nodeType":"VariableDeclaration","scope":5463,"src":"6502:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5440,"name":"uint256","nodeType":"ElementaryTypeName","src":"6502:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6501:15:24"},"returnParameters":{"id":5445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5463,"src":"6540:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5443,"name":"uint168","nodeType":"ElementaryTypeName","src":"6540:7:24","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6539:9:24"},"scope":6726,"src":"6483:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5487,"nodeType":"Block","src":"7070:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"7088:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7102:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5474,"name":"uint160","nodeType":"ElementaryTypeName","src":"7102:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5473,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7097:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7097:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7097:17:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7088:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":5479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7116:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":5471,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7080:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7080:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5481,"nodeType":"ExpressionStatement","src":"7080:78:24"},{"expression":{"arguments":[{"id":5484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"7183:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7175:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5482,"name":"uint160","nodeType":"ElementaryTypeName","src":"7175:7:24","typeDescriptions":{}}},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7175:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5470,"id":5486,"nodeType":"Return","src":"7168:21:24"}]},"documentation":{"id":5464,"nodeType":"StructuredDocumentation","src":"6681:318:24","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":5488,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7013:9:24","nodeType":"FunctionDefinition","parameters":{"id":5467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5466,"mutability":"mutable","name":"value","nameLocation":"7031:5:24","nodeType":"VariableDeclaration","scope":5488,"src":"7023:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5465,"name":"uint256","nodeType":"ElementaryTypeName","src":"7023:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7022:15:24"},"returnParameters":{"id":5470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5488,"src":"7061:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5468,"name":"uint160","nodeType":"ElementaryTypeName","src":"7061:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7060:9:24"},"scope":6726,"src":"7004:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5512,"nodeType":"Block","src":"7591:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"7609:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7623:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5499,"name":"uint152","nodeType":"ElementaryTypeName","src":"7623:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5498,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7618:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7618:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7618:17:24","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7609:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":5504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7637:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":5496,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7601:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7601:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5506,"nodeType":"ExpressionStatement","src":"7601:78:24"},{"expression":{"arguments":[{"id":5509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"7704:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7696:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5507,"name":"uint152","nodeType":"ElementaryTypeName","src":"7696:7:24","typeDescriptions":{}}},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7696:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5495,"id":5511,"nodeType":"Return","src":"7689:21:24"}]},"documentation":{"id":5489,"nodeType":"StructuredDocumentation","src":"7202:318:24","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":5513,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7534:9:24","nodeType":"FunctionDefinition","parameters":{"id":5492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5491,"mutability":"mutable","name":"value","nameLocation":"7552:5:24","nodeType":"VariableDeclaration","scope":5513,"src":"7544:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5490,"name":"uint256","nodeType":"ElementaryTypeName","src":"7544:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7543:15:24"},"returnParameters":{"id":5495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5513,"src":"7582:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5493,"name":"uint152","nodeType":"ElementaryTypeName","src":"7582:7:24","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7581:9:24"},"scope":6726,"src":"7525:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5537,"nodeType":"Block","src":"8112:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"8130:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8144:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5524,"name":"uint144","nodeType":"ElementaryTypeName","src":"8144:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5523,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8139:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8139:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8139:17:24","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8130:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":5529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8158:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":5521,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8122:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8122:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5531,"nodeType":"ExpressionStatement","src":"8122:78:24"},{"expression":{"arguments":[{"id":5534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"8225:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8217:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5532,"name":"uint144","nodeType":"ElementaryTypeName","src":"8217:7:24","typeDescriptions":{}}},"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8217:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5520,"id":5536,"nodeType":"Return","src":"8210:21:24"}]},"documentation":{"id":5514,"nodeType":"StructuredDocumentation","src":"7723:318:24","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":5538,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8055:9:24","nodeType":"FunctionDefinition","parameters":{"id":5517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5516,"mutability":"mutable","name":"value","nameLocation":"8073:5:24","nodeType":"VariableDeclaration","scope":5538,"src":"8065:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5515,"name":"uint256","nodeType":"ElementaryTypeName","src":"8065:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8064:15:24"},"returnParameters":{"id":5520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5538,"src":"8103:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5518,"name":"uint144","nodeType":"ElementaryTypeName","src":"8103:7:24","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8102:9:24"},"scope":6726,"src":"8046:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5562,"nodeType":"Block","src":"8633:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"8651:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8665:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5549,"name":"uint136","nodeType":"ElementaryTypeName","src":"8665:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5548,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8660:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8660:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"8660:17:24","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8651:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":5554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8679:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":5546,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8643:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8643:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5556,"nodeType":"ExpressionStatement","src":"8643:78:24"},{"expression":{"arguments":[{"id":5559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"8746:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8738:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5557,"name":"uint136","nodeType":"ElementaryTypeName","src":"8738:7:24","typeDescriptions":{}}},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8738:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5545,"id":5561,"nodeType":"Return","src":"8731:21:24"}]},"documentation":{"id":5539,"nodeType":"StructuredDocumentation","src":"8244:318:24","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":5563,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8576:9:24","nodeType":"FunctionDefinition","parameters":{"id":5542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5541,"mutability":"mutable","name":"value","nameLocation":"8594:5:24","nodeType":"VariableDeclaration","scope":5563,"src":"8586:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5540,"name":"uint256","nodeType":"ElementaryTypeName","src":"8586:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8585:15:24"},"returnParameters":{"id":5545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5563,"src":"8624:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5543,"name":"uint136","nodeType":"ElementaryTypeName","src":"8624:7:24","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8623:9:24"},"scope":6726,"src":"8567:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5587,"nodeType":"Block","src":"9154:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"9172:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9186:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5574,"name":"uint128","nodeType":"ElementaryTypeName","src":"9186:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5573,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9181:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9181:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9181:17:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9172:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":5579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9200:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":5571,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9164:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9164:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5581,"nodeType":"ExpressionStatement","src":"9164:78:24"},{"expression":{"arguments":[{"id":5584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5566,"src":"9267:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9259:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5582,"name":"uint128","nodeType":"ElementaryTypeName","src":"9259:7:24","typeDescriptions":{}}},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9259:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5570,"id":5586,"nodeType":"Return","src":"9252:21:24"}]},"documentation":{"id":5564,"nodeType":"StructuredDocumentation","src":"8765:318:24","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":5588,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9097:9:24","nodeType":"FunctionDefinition","parameters":{"id":5567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5566,"mutability":"mutable","name":"value","nameLocation":"9115:5:24","nodeType":"VariableDeclaration","scope":5588,"src":"9107:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5565,"name":"uint256","nodeType":"ElementaryTypeName","src":"9107:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9106:15:24"},"returnParameters":{"id":5570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5588,"src":"9145:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5568,"name":"uint128","nodeType":"ElementaryTypeName","src":"9145:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9144:9:24"},"scope":6726,"src":"9088:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5612,"nodeType":"Block","src":"9675:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"9693:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5599,"name":"uint120","nodeType":"ElementaryTypeName","src":"9707:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5598,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9702:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9702:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"9702:17:24","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9693:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":5604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9721:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":5596,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9685:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9685:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5606,"nodeType":"ExpressionStatement","src":"9685:78:24"},{"expression":{"arguments":[{"id":5609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"9788:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5607,"name":"uint120","nodeType":"ElementaryTypeName","src":"9780:7:24","typeDescriptions":{}}},"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9780:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5595,"id":5611,"nodeType":"Return","src":"9773:21:24"}]},"documentation":{"id":5589,"nodeType":"StructuredDocumentation","src":"9286:318:24","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":5613,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9618:9:24","nodeType":"FunctionDefinition","parameters":{"id":5592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5591,"mutability":"mutable","name":"value","nameLocation":"9636:5:24","nodeType":"VariableDeclaration","scope":5613,"src":"9628:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5590,"name":"uint256","nodeType":"ElementaryTypeName","src":"9628:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9627:15:24"},"returnParameters":{"id":5595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5613,"src":"9666:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5593,"name":"uint120","nodeType":"ElementaryTypeName","src":"9666:7:24","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9665:9:24"},"scope":6726,"src":"9609:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5637,"nodeType":"Block","src":"10196:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"10214:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10228:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5624,"name":"uint112","nodeType":"ElementaryTypeName","src":"10228:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5623,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10223:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10223:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10223:17:24","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10214:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":5629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10242:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":5621,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10206:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10206:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5631,"nodeType":"ExpressionStatement","src":"10206:78:24"},{"expression":{"arguments":[{"id":5634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"10309:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10301:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5632,"name":"uint112","nodeType":"ElementaryTypeName","src":"10301:7:24","typeDescriptions":{}}},"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10301:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5620,"id":5636,"nodeType":"Return","src":"10294:21:24"}]},"documentation":{"id":5614,"nodeType":"StructuredDocumentation","src":"9807:318:24","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":5638,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10139:9:24","nodeType":"FunctionDefinition","parameters":{"id":5617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5616,"mutability":"mutable","name":"value","nameLocation":"10157:5:24","nodeType":"VariableDeclaration","scope":5638,"src":"10149:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5615,"name":"uint256","nodeType":"ElementaryTypeName","src":"10149:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10148:15:24"},"returnParameters":{"id":5620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5638,"src":"10187:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5618,"name":"uint112","nodeType":"ElementaryTypeName","src":"10187:7:24","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10186:9:24"},"scope":6726,"src":"10130:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5662,"nodeType":"Block","src":"10717:126:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5641,"src":"10735:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10749:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5649,"name":"uint104","nodeType":"ElementaryTypeName","src":"10749:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5648,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10744:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10744:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"10744:17:24","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10735:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":5654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10763:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":5646,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10727:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10727:78:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5656,"nodeType":"ExpressionStatement","src":"10727:78:24"},{"expression":{"arguments":[{"id":5659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5641,"src":"10830:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10822:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5657,"name":"uint104","nodeType":"ElementaryTypeName","src":"10822:7:24","typeDescriptions":{}}},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10822:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5645,"id":5661,"nodeType":"Return","src":"10815:21:24"}]},"documentation":{"id":5639,"nodeType":"StructuredDocumentation","src":"10328:318:24","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":5663,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10660:9:24","nodeType":"FunctionDefinition","parameters":{"id":5642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5641,"mutability":"mutable","name":"value","nameLocation":"10678:5:24","nodeType":"VariableDeclaration","scope":5663,"src":"10670:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5640,"name":"uint256","nodeType":"ElementaryTypeName","src":"10670:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10669:15:24"},"returnParameters":{"id":5645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5663,"src":"10708:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5643,"name":"uint104","nodeType":"ElementaryTypeName","src":"10708:7:24","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10707:9:24"},"scope":6726,"src":"10651:192:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5687,"nodeType":"Block","src":"11232:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"11250:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11264:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5674,"name":"uint96","nodeType":"ElementaryTypeName","src":"11264:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5673,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11259:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11259:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11259:16:24","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11250:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":5679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11277:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":5671,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11242:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11242:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5681,"nodeType":"ExpressionStatement","src":"11242:76:24"},{"expression":{"arguments":[{"id":5684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"11342:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11335:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5682,"name":"uint96","nodeType":"ElementaryTypeName","src":"11335:6:24","typeDescriptions":{}}},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11335:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5670,"id":5686,"nodeType":"Return","src":"11328:20:24"}]},"documentation":{"id":5664,"nodeType":"StructuredDocumentation","src":"10849:314:24","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":5688,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11177:8:24","nodeType":"FunctionDefinition","parameters":{"id":5667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5666,"mutability":"mutable","name":"value","nameLocation":"11194:5:24","nodeType":"VariableDeclaration","scope":5688,"src":"11186:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5665,"name":"uint256","nodeType":"ElementaryTypeName","src":"11186:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11185:15:24"},"returnParameters":{"id":5670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5688,"src":"11224:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5668,"name":"uint96","nodeType":"ElementaryTypeName","src":"11224:6:24","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11223:8:24"},"scope":6726,"src":"11168:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5712,"nodeType":"Block","src":"11744:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"11762:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11776:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5699,"name":"uint88","nodeType":"ElementaryTypeName","src":"11776:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5698,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11771:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11771:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11771:16:24","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11762:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":5704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11789:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":5696,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11754:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11754:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5706,"nodeType":"ExpressionStatement","src":"11754:76:24"},{"expression":{"arguments":[{"id":5709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"11854:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5707,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:24","typeDescriptions":{}}},"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11847:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5695,"id":5711,"nodeType":"Return","src":"11840:20:24"}]},"documentation":{"id":5689,"nodeType":"StructuredDocumentation","src":"11361:314:24","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":5713,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11689:8:24","nodeType":"FunctionDefinition","parameters":{"id":5692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5691,"mutability":"mutable","name":"value","nameLocation":"11706:5:24","nodeType":"VariableDeclaration","scope":5713,"src":"11698:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5690,"name":"uint256","nodeType":"ElementaryTypeName","src":"11698:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11697:15:24"},"returnParameters":{"id":5695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5713,"src":"11736:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5693,"name":"uint88","nodeType":"ElementaryTypeName","src":"11736:6:24","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11735:8:24"},"scope":6726,"src":"11680:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5737,"nodeType":"Block","src":"12256:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"12274:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12288:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5724,"name":"uint80","nodeType":"ElementaryTypeName","src":"12288:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5723,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12283:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12283:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12283:16:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12274:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":5729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12301:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":5721,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12266:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12266:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5731,"nodeType":"ExpressionStatement","src":"12266:76:24"},{"expression":{"arguments":[{"id":5734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"12366:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12359:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5732,"name":"uint80","nodeType":"ElementaryTypeName","src":"12359:6:24","typeDescriptions":{}}},"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12359:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5720,"id":5736,"nodeType":"Return","src":"12352:20:24"}]},"documentation":{"id":5714,"nodeType":"StructuredDocumentation","src":"11873:314:24","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":5738,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12201:8:24","nodeType":"FunctionDefinition","parameters":{"id":5717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5716,"mutability":"mutable","name":"value","nameLocation":"12218:5:24","nodeType":"VariableDeclaration","scope":5738,"src":"12210:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5715,"name":"uint256","nodeType":"ElementaryTypeName","src":"12210:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:15:24"},"returnParameters":{"id":5720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5738,"src":"12248:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5718,"name":"uint80","nodeType":"ElementaryTypeName","src":"12248:6:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12247:8:24"},"scope":6726,"src":"12192:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5762,"nodeType":"Block","src":"12768:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5741,"src":"12786:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12800:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5749,"name":"uint72","nodeType":"ElementaryTypeName","src":"12800:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5748,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12795:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12795:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"12795:16:24","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12786:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":5754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12813:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":5746,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12778:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12778:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5756,"nodeType":"ExpressionStatement","src":"12778:76:24"},{"expression":{"arguments":[{"id":5759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5741,"src":"12878:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12871:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5757,"name":"uint72","nodeType":"ElementaryTypeName","src":"12871:6:24","typeDescriptions":{}}},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12871:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5745,"id":5761,"nodeType":"Return","src":"12864:20:24"}]},"documentation":{"id":5739,"nodeType":"StructuredDocumentation","src":"12385:314:24","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":5763,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12713:8:24","nodeType":"FunctionDefinition","parameters":{"id":5742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5741,"mutability":"mutable","name":"value","nameLocation":"12730:5:24","nodeType":"VariableDeclaration","scope":5763,"src":"12722:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5740,"name":"uint256","nodeType":"ElementaryTypeName","src":"12722:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12721:15:24"},"returnParameters":{"id":5745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5763,"src":"12760:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5743,"name":"uint72","nodeType":"ElementaryTypeName","src":"12760:6:24","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12759:8:24"},"scope":6726,"src":"12704:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5787,"nodeType":"Block","src":"13280:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"13298:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13312:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5774,"name":"uint64","nodeType":"ElementaryTypeName","src":"13312:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5773,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13307:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13307:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13307:16:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13298:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":5779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13325:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":5771,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13290:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13290:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5781,"nodeType":"ExpressionStatement","src":"13290:76:24"},{"expression":{"arguments":[{"id":5784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5766,"src":"13390:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13383:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5782,"name":"uint64","nodeType":"ElementaryTypeName","src":"13383:6:24","typeDescriptions":{}}},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13383:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5770,"id":5786,"nodeType":"Return","src":"13376:20:24"}]},"documentation":{"id":5764,"nodeType":"StructuredDocumentation","src":"12897:314:24","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":5788,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13225:8:24","nodeType":"FunctionDefinition","parameters":{"id":5767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5766,"mutability":"mutable","name":"value","nameLocation":"13242:5:24","nodeType":"VariableDeclaration","scope":5788,"src":"13234:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5765,"name":"uint256","nodeType":"ElementaryTypeName","src":"13234:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13233:15:24"},"returnParameters":{"id":5770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5788,"src":"13272:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5768,"name":"uint64","nodeType":"ElementaryTypeName","src":"13272:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13271:8:24"},"scope":6726,"src":"13216:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5812,"nodeType":"Block","src":"13792:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5791,"src":"13810:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13824:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5799,"name":"uint56","nodeType":"ElementaryTypeName","src":"13824:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5798,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13819:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13819:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13819:16:24","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13810:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":5804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13837:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":5796,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13802:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13802:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5806,"nodeType":"ExpressionStatement","src":"13802:76:24"},{"expression":{"arguments":[{"id":5809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5791,"src":"13902:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13895:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5807,"name":"uint56","nodeType":"ElementaryTypeName","src":"13895:6:24","typeDescriptions":{}}},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13895:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5795,"id":5811,"nodeType":"Return","src":"13888:20:24"}]},"documentation":{"id":5789,"nodeType":"StructuredDocumentation","src":"13409:314:24","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":5813,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13737:8:24","nodeType":"FunctionDefinition","parameters":{"id":5792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5791,"mutability":"mutable","name":"value","nameLocation":"13754:5:24","nodeType":"VariableDeclaration","scope":5813,"src":"13746:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5790,"name":"uint256","nodeType":"ElementaryTypeName","src":"13746:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13745:15:24"},"returnParameters":{"id":5795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5813,"src":"13784:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5793,"name":"uint56","nodeType":"ElementaryTypeName","src":"13784:6:24","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13783:8:24"},"scope":6726,"src":"13728:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5837,"nodeType":"Block","src":"14304:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"14322:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14336:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5824,"name":"uint48","nodeType":"ElementaryTypeName","src":"14336:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5823,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14331:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14331:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14331:16:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14322:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":5829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14349:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":5821,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14314:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14314:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5831,"nodeType":"ExpressionStatement","src":"14314:76:24"},{"expression":{"arguments":[{"id":5834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"14414:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14407:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5832,"name":"uint48","nodeType":"ElementaryTypeName","src":"14407:6:24","typeDescriptions":{}}},"id":5835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14407:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5820,"id":5836,"nodeType":"Return","src":"14400:20:24"}]},"documentation":{"id":5814,"nodeType":"StructuredDocumentation","src":"13921:314:24","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":5838,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14249:8:24","nodeType":"FunctionDefinition","parameters":{"id":5817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5816,"mutability":"mutable","name":"value","nameLocation":"14266:5:24","nodeType":"VariableDeclaration","scope":5838,"src":"14258:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5815,"name":"uint256","nodeType":"ElementaryTypeName","src":"14258:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14257:15:24"},"returnParameters":{"id":5820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5838,"src":"14296:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5818,"name":"uint48","nodeType":"ElementaryTypeName","src":"14296:6:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14295:8:24"},"scope":6726,"src":"14240:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5862,"nodeType":"Block","src":"14816:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"14834:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14848:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5849,"name":"uint40","nodeType":"ElementaryTypeName","src":"14848:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5848,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14843:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14843:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"14843:16:24","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14834:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":5854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14861:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":5846,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14826:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14826:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5856,"nodeType":"ExpressionStatement","src":"14826:76:24"},{"expression":{"arguments":[{"id":5859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"14926:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14919:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5857,"name":"uint40","nodeType":"ElementaryTypeName","src":"14919:6:24","typeDescriptions":{}}},"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14919:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5845,"id":5861,"nodeType":"Return","src":"14912:20:24"}]},"documentation":{"id":5839,"nodeType":"StructuredDocumentation","src":"14433:314:24","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":5863,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14761:8:24","nodeType":"FunctionDefinition","parameters":{"id":5842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5841,"mutability":"mutable","name":"value","nameLocation":"14778:5:24","nodeType":"VariableDeclaration","scope":5863,"src":"14770:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5840,"name":"uint256","nodeType":"ElementaryTypeName","src":"14770:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14769:15:24"},"returnParameters":{"id":5845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5863,"src":"14808:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5843,"name":"uint40","nodeType":"ElementaryTypeName","src":"14808:6:24","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14807:8:24"},"scope":6726,"src":"14752:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5887,"nodeType":"Block","src":"15328:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"15346:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15360:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5874,"name":"uint32","nodeType":"ElementaryTypeName","src":"15360:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5873,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15355:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15355:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15355:16:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15346:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":5879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15373:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":5871,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15338:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15338:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5881,"nodeType":"ExpressionStatement","src":"15338:76:24"},{"expression":{"arguments":[{"id":5884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"15438:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15431:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5882,"name":"uint32","nodeType":"ElementaryTypeName","src":"15431:6:24","typeDescriptions":{}}},"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15431:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5870,"id":5886,"nodeType":"Return","src":"15424:20:24"}]},"documentation":{"id":5864,"nodeType":"StructuredDocumentation","src":"14945:314:24","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":5888,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15273:8:24","nodeType":"FunctionDefinition","parameters":{"id":5867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5866,"mutability":"mutable","name":"value","nameLocation":"15290:5:24","nodeType":"VariableDeclaration","scope":5888,"src":"15282:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5865,"name":"uint256","nodeType":"ElementaryTypeName","src":"15282:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15281:15:24"},"returnParameters":{"id":5870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5888,"src":"15320:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5868,"name":"uint32","nodeType":"ElementaryTypeName","src":"15320:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15319:8:24"},"scope":6726,"src":"15264:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5912,"nodeType":"Block","src":"15840:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"15858:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15872:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5899,"name":"uint24","nodeType":"ElementaryTypeName","src":"15872:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5898,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15867:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15867:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"15867:16:24","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15858:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":5904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15885:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":5896,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15850:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15850:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5906,"nodeType":"ExpressionStatement","src":"15850:76:24"},{"expression":{"arguments":[{"id":5909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"15950:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15943:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5907,"name":"uint24","nodeType":"ElementaryTypeName","src":"15943:6:24","typeDescriptions":{}}},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15943:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5895,"id":5911,"nodeType":"Return","src":"15936:20:24"}]},"documentation":{"id":5889,"nodeType":"StructuredDocumentation","src":"15457:314:24","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":5913,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15785:8:24","nodeType":"FunctionDefinition","parameters":{"id":5892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5891,"mutability":"mutable","name":"value","nameLocation":"15802:5:24","nodeType":"VariableDeclaration","scope":5913,"src":"15794:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5890,"name":"uint256","nodeType":"ElementaryTypeName","src":"15794:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15793:15:24"},"returnParameters":{"id":5895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5913,"src":"15832:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5893,"name":"uint24","nodeType":"ElementaryTypeName","src":"15832:6:24","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15831:8:24"},"scope":6726,"src":"15776:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5937,"nodeType":"Block","src":"16352:123:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"16370:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16384:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5924,"name":"uint16","nodeType":"ElementaryTypeName","src":"16384:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5923,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16379:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16379:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16379:16:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16370:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":5929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16397:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":5921,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16362:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16362:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5931,"nodeType":"ExpressionStatement","src":"16362:76:24"},{"expression":{"arguments":[{"id":5934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5916,"src":"16462:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16455:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5932,"name":"uint16","nodeType":"ElementaryTypeName","src":"16455:6:24","typeDescriptions":{}}},"id":5935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16455:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5920,"id":5936,"nodeType":"Return","src":"16448:20:24"}]},"documentation":{"id":5914,"nodeType":"StructuredDocumentation","src":"15969:314:24","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":5938,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16297:8:24","nodeType":"FunctionDefinition","parameters":{"id":5917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5916,"mutability":"mutable","name":"value","nameLocation":"16314:5:24","nodeType":"VariableDeclaration","scope":5938,"src":"16306:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5915,"name":"uint256","nodeType":"ElementaryTypeName","src":"16306:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16305:15:24"},"returnParameters":{"id":5920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5938,"src":"16344:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5918,"name":"uint16","nodeType":"ElementaryTypeName","src":"16344:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16343:8:24"},"scope":6726,"src":"16288:187:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5962,"nodeType":"Block","src":"16858:120:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"16876:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16890:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5949,"name":"uint8","nodeType":"ElementaryTypeName","src":"16890:5:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5948,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16885:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16885:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"16885:15:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16876:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":5954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16902:39:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":5946,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16868:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16868:74:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5956,"nodeType":"ExpressionStatement","src":"16868:74:24"},{"expression":{"arguments":[{"id":5959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"16965:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16959:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5957,"name":"uint8","nodeType":"ElementaryTypeName","src":"16959:5:24","typeDescriptions":{}}},"id":5960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16959:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5945,"id":5961,"nodeType":"Return","src":"16952:19:24"}]},"documentation":{"id":5939,"nodeType":"StructuredDocumentation","src":"16481:310:24","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":5963,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16805:7:24","nodeType":"FunctionDefinition","parameters":{"id":5942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5941,"mutability":"mutable","name":"value","nameLocation":"16821:5:24","nodeType":"VariableDeclaration","scope":5963,"src":"16813:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5940,"name":"uint256","nodeType":"ElementaryTypeName","src":"16813:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16812:15:24"},"returnParameters":{"id":5945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5963,"src":"16851:5:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5943,"name":"uint8","nodeType":"ElementaryTypeName","src":"16851:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16850:7:24"},"scope":6726,"src":"16796:182:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5983,"nodeType":"Block","src":"17252:103:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"17270:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":5973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17279:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17270:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":5975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17282:34:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":5971,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17262:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17262:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5977,"nodeType":"ExpressionStatement","src":"17262:55:24"},{"expression":{"arguments":[{"id":5980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"17342:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17334:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5978,"name":"uint256","nodeType":"ElementaryTypeName","src":"17334:7:24","typeDescriptions":{}}},"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17334:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5970,"id":5982,"nodeType":"Return","src":"17327:21:24"}]},"documentation":{"id":5964,"nodeType":"StructuredDocumentation","src":"16984:198:24","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":5984,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17196:9:24","nodeType":"FunctionDefinition","parameters":{"id":5967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5966,"mutability":"mutable","name":"value","nameLocation":"17213:5:24","nodeType":"VariableDeclaration","scope":5984,"src":"17206:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5965,"name":"int256","nodeType":"ElementaryTypeName","src":"17206:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17205:14:24"},"returnParameters":{"id":5970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5984,"src":"17243:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5968,"name":"uint256","nodeType":"ElementaryTypeName","src":"17243:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17242:9:24"},"scope":6726,"src":"17187:168:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6006,"nodeType":"Block","src":"17790:124:24","statements":[{"expression":{"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5992,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"17800:10:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"17820:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17813:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5993,"name":"int248","nodeType":"ElementaryTypeName","src":"17813:6:24","typeDescriptions":{}}},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17813:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17800:26:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5998,"nodeType":"ExpressionStatement","src":"17800:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6000,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"17844:10:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"17858:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17844:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":6003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17865:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":5999,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17836:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17836:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6005,"nodeType":"ExpressionStatement","src":"17836:71:24"}]},"documentation":{"id":5985,"nodeType":"StructuredDocumentation","src":"17361:350:24","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":6007,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17725:8:24","nodeType":"FunctionDefinition","parameters":{"id":5988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5987,"mutability":"mutable","name":"value","nameLocation":"17741:5:24","nodeType":"VariableDeclaration","scope":6007,"src":"17734:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5986,"name":"int256","nodeType":"ElementaryTypeName","src":"17734:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17733:14:24"},"returnParameters":{"id":5991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5990,"mutability":"mutable","name":"downcasted","nameLocation":"17778:10:24","nodeType":"VariableDeclaration","scope":6007,"src":"17771:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5989,"name":"int248","nodeType":"ElementaryTypeName","src":"17771:6:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17770:19:24"},"scope":6726,"src":"17716:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6029,"nodeType":"Block","src":"18349:124:24","statements":[{"expression":{"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6015,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"18359:10:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"18379:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18372:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6016,"name":"int240","nodeType":"ElementaryTypeName","src":"18372:6:24","typeDescriptions":{}}},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18372:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18359:26:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6021,"nodeType":"ExpressionStatement","src":"18359:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6023,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"18403:10:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"18417:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18403:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":6026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18424:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":6022,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18395:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18395:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6028,"nodeType":"ExpressionStatement","src":"18395:71:24"}]},"documentation":{"id":6008,"nodeType":"StructuredDocumentation","src":"17920:350:24","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":6030,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18284:8:24","nodeType":"FunctionDefinition","parameters":{"id":6011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6010,"mutability":"mutable","name":"value","nameLocation":"18300:5:24","nodeType":"VariableDeclaration","scope":6030,"src":"18293:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6009,"name":"int256","nodeType":"ElementaryTypeName","src":"18293:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18292:14:24"},"returnParameters":{"id":6014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6013,"mutability":"mutable","name":"downcasted","nameLocation":"18337:10:24","nodeType":"VariableDeclaration","scope":6030,"src":"18330:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6012,"name":"int240","nodeType":"ElementaryTypeName","src":"18330:6:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18329:19:24"},"scope":6726,"src":"18275:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6052,"nodeType":"Block","src":"18908:124:24","statements":[{"expression":{"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6038,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"18918:10:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"18938:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18931:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6039,"name":"int232","nodeType":"ElementaryTypeName","src":"18931:6:24","typeDescriptions":{}}},"id":6042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18931:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18918:26:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6044,"nodeType":"ExpressionStatement","src":"18918:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6046,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"18962:10:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"18976:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18962:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":6049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18983:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":6045,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18954:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18954:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6051,"nodeType":"ExpressionStatement","src":"18954:71:24"}]},"documentation":{"id":6031,"nodeType":"StructuredDocumentation","src":"18479:350:24","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":6053,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18843:8:24","nodeType":"FunctionDefinition","parameters":{"id":6034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6033,"mutability":"mutable","name":"value","nameLocation":"18859:5:24","nodeType":"VariableDeclaration","scope":6053,"src":"18852:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6032,"name":"int256","nodeType":"ElementaryTypeName","src":"18852:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18851:14:24"},"returnParameters":{"id":6037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6036,"mutability":"mutable","name":"downcasted","nameLocation":"18896:10:24","nodeType":"VariableDeclaration","scope":6053,"src":"18889:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6035,"name":"int232","nodeType":"ElementaryTypeName","src":"18889:6:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18888:19:24"},"scope":6726,"src":"18834:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6075,"nodeType":"Block","src":"19467:124:24","statements":[{"expression":{"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6061,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"19477:10:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"19497:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19490:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6062,"name":"int224","nodeType":"ElementaryTypeName","src":"19490:6:24","typeDescriptions":{}}},"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19490:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19477:26:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6067,"nodeType":"ExpressionStatement","src":"19477:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6069,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"19521:10:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"19535:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19521:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":6072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19542:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":6068,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19513:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19513:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6074,"nodeType":"ExpressionStatement","src":"19513:71:24"}]},"documentation":{"id":6054,"nodeType":"StructuredDocumentation","src":"19038:350:24","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":6076,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19402:8:24","nodeType":"FunctionDefinition","parameters":{"id":6057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6056,"mutability":"mutable","name":"value","nameLocation":"19418:5:24","nodeType":"VariableDeclaration","scope":6076,"src":"19411:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6055,"name":"int256","nodeType":"ElementaryTypeName","src":"19411:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19410:14:24"},"returnParameters":{"id":6060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6059,"mutability":"mutable","name":"downcasted","nameLocation":"19455:10:24","nodeType":"VariableDeclaration","scope":6076,"src":"19448:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6058,"name":"int224","nodeType":"ElementaryTypeName","src":"19448:6:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19447:19:24"},"scope":6726,"src":"19393:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6098,"nodeType":"Block","src":"20026:124:24","statements":[{"expression":{"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6084,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6082,"src":"20036:10:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6079,"src":"20056:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20049:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6085,"name":"int216","nodeType":"ElementaryTypeName","src":"20049:6:24","typeDescriptions":{}}},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20049:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20036:26:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6090,"nodeType":"ExpressionStatement","src":"20036:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6092,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6082,"src":"20080:10:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6079,"src":"20094:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20080:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":6095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20101:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":6091,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20072:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20072:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6097,"nodeType":"ExpressionStatement","src":"20072:71:24"}]},"documentation":{"id":6077,"nodeType":"StructuredDocumentation","src":"19597:350:24","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":6099,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19961:8:24","nodeType":"FunctionDefinition","parameters":{"id":6080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6079,"mutability":"mutable","name":"value","nameLocation":"19977:5:24","nodeType":"VariableDeclaration","scope":6099,"src":"19970:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6078,"name":"int256","nodeType":"ElementaryTypeName","src":"19970:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19969:14:24"},"returnParameters":{"id":6083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6082,"mutability":"mutable","name":"downcasted","nameLocation":"20014:10:24","nodeType":"VariableDeclaration","scope":6099,"src":"20007:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6081,"name":"int216","nodeType":"ElementaryTypeName","src":"20007:6:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"20006:19:24"},"scope":6726,"src":"19952:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6121,"nodeType":"Block","src":"20585:124:24","statements":[{"expression":{"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6107,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6105,"src":"20595:10:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"20615:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20608:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6108,"name":"int208","nodeType":"ElementaryTypeName","src":"20608:6:24","typeDescriptions":{}}},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20608:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20595:26:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6113,"nodeType":"ExpressionStatement","src":"20595:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6115,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6105,"src":"20639:10:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"20653:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20639:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":6118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20660:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":6114,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20631:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20631:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6120,"nodeType":"ExpressionStatement","src":"20631:71:24"}]},"documentation":{"id":6100,"nodeType":"StructuredDocumentation","src":"20156:350:24","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":6122,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20520:8:24","nodeType":"FunctionDefinition","parameters":{"id":6103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6102,"mutability":"mutable","name":"value","nameLocation":"20536:5:24","nodeType":"VariableDeclaration","scope":6122,"src":"20529:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6101,"name":"int256","nodeType":"ElementaryTypeName","src":"20529:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20528:14:24"},"returnParameters":{"id":6106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6105,"mutability":"mutable","name":"downcasted","nameLocation":"20573:10:24","nodeType":"VariableDeclaration","scope":6122,"src":"20566:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6104,"name":"int208","nodeType":"ElementaryTypeName","src":"20566:6:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20565:19:24"},"scope":6726,"src":"20511:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6144,"nodeType":"Block","src":"21144:124:24","statements":[{"expression":{"id":6135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6130,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6128,"src":"21154:10:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6125,"src":"21174:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21167:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6131,"name":"int200","nodeType":"ElementaryTypeName","src":"21167:6:24","typeDescriptions":{}}},"id":6134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21167:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21154:26:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6136,"nodeType":"ExpressionStatement","src":"21154:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6138,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6128,"src":"21198:10:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6125,"src":"21212:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21198:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":6141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21219:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":6137,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21190:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21190:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6143,"nodeType":"ExpressionStatement","src":"21190:71:24"}]},"documentation":{"id":6123,"nodeType":"StructuredDocumentation","src":"20715:350:24","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":6145,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21079:8:24","nodeType":"FunctionDefinition","parameters":{"id":6126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6125,"mutability":"mutable","name":"value","nameLocation":"21095:5:24","nodeType":"VariableDeclaration","scope":6145,"src":"21088:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6124,"name":"int256","nodeType":"ElementaryTypeName","src":"21088:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21087:14:24"},"returnParameters":{"id":6129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6128,"mutability":"mutable","name":"downcasted","nameLocation":"21132:10:24","nodeType":"VariableDeclaration","scope":6145,"src":"21125:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6127,"name":"int200","nodeType":"ElementaryTypeName","src":"21125:6:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21124:19:24"},"scope":6726,"src":"21070:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6167,"nodeType":"Block","src":"21703:124:24","statements":[{"expression":{"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6153,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"21713:10:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6148,"src":"21733:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21726:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6154,"name":"int192","nodeType":"ElementaryTypeName","src":"21726:6:24","typeDescriptions":{}}},"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21726:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21713:26:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6159,"nodeType":"ExpressionStatement","src":"21713:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6161,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"21757:10:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6148,"src":"21771:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21757:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":6164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21778:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":6160,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21749:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21749:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6166,"nodeType":"ExpressionStatement","src":"21749:71:24"}]},"documentation":{"id":6146,"nodeType":"StructuredDocumentation","src":"21274:350:24","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":6168,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21638:8:24","nodeType":"FunctionDefinition","parameters":{"id":6149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6148,"mutability":"mutable","name":"value","nameLocation":"21654:5:24","nodeType":"VariableDeclaration","scope":6168,"src":"21647:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6147,"name":"int256","nodeType":"ElementaryTypeName","src":"21647:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21646:14:24"},"returnParameters":{"id":6152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6151,"mutability":"mutable","name":"downcasted","nameLocation":"21691:10:24","nodeType":"VariableDeclaration","scope":6168,"src":"21684:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6150,"name":"int192","nodeType":"ElementaryTypeName","src":"21684:6:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21683:19:24"},"scope":6726,"src":"21629:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6190,"nodeType":"Block","src":"22262:124:24","statements":[{"expression":{"id":6181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6176,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"22272:10:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6171,"src":"22292:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22285:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6177,"name":"int184","nodeType":"ElementaryTypeName","src":"22285:6:24","typeDescriptions":{}}},"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22285:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22272:26:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6182,"nodeType":"ExpressionStatement","src":"22272:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6184,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"22316:10:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6171,"src":"22330:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22316:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":6187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22337:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":6183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22308:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22308:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6189,"nodeType":"ExpressionStatement","src":"22308:71:24"}]},"documentation":{"id":6169,"nodeType":"StructuredDocumentation","src":"21833:350:24","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":6191,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22197:8:24","nodeType":"FunctionDefinition","parameters":{"id":6172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6171,"mutability":"mutable","name":"value","nameLocation":"22213:5:24","nodeType":"VariableDeclaration","scope":6191,"src":"22206:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6170,"name":"int256","nodeType":"ElementaryTypeName","src":"22206:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22205:14:24"},"returnParameters":{"id":6175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6174,"mutability":"mutable","name":"downcasted","nameLocation":"22250:10:24","nodeType":"VariableDeclaration","scope":6191,"src":"22243:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6173,"name":"int184","nodeType":"ElementaryTypeName","src":"22243:6:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22242:19:24"},"scope":6726,"src":"22188:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6213,"nodeType":"Block","src":"22821:124:24","statements":[{"expression":{"id":6204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6199,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"22831:10:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6194,"src":"22851:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22844:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6200,"name":"int176","nodeType":"ElementaryTypeName","src":"22844:6:24","typeDescriptions":{}}},"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22844:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22831:26:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6205,"nodeType":"ExpressionStatement","src":"22831:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6207,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"22875:10:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6194,"src":"22889:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22875:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":6210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22896:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":6206,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22867:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22867:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6212,"nodeType":"ExpressionStatement","src":"22867:71:24"}]},"documentation":{"id":6192,"nodeType":"StructuredDocumentation","src":"22392:350:24","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":6214,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22756:8:24","nodeType":"FunctionDefinition","parameters":{"id":6195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6194,"mutability":"mutable","name":"value","nameLocation":"22772:5:24","nodeType":"VariableDeclaration","scope":6214,"src":"22765:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6193,"name":"int256","nodeType":"ElementaryTypeName","src":"22765:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22764:14:24"},"returnParameters":{"id":6198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6197,"mutability":"mutable","name":"downcasted","nameLocation":"22809:10:24","nodeType":"VariableDeclaration","scope":6214,"src":"22802:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6196,"name":"int176","nodeType":"ElementaryTypeName","src":"22802:6:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22801:19:24"},"scope":6726,"src":"22747:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6236,"nodeType":"Block","src":"23380:124:24","statements":[{"expression":{"id":6227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6222,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"23390:10:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6217,"src":"23410:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23403:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6223,"name":"int168","nodeType":"ElementaryTypeName","src":"23403:6:24","typeDescriptions":{}}},"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23403:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23390:26:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6228,"nodeType":"ExpressionStatement","src":"23390:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6230,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"23434:10:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6217,"src":"23448:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23434:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":6233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23455:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":6229,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23426:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23426:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6235,"nodeType":"ExpressionStatement","src":"23426:71:24"}]},"documentation":{"id":6215,"nodeType":"StructuredDocumentation","src":"22951:350:24","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":6237,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23315:8:24","nodeType":"FunctionDefinition","parameters":{"id":6218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6217,"mutability":"mutable","name":"value","nameLocation":"23331:5:24","nodeType":"VariableDeclaration","scope":6237,"src":"23324:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6216,"name":"int256","nodeType":"ElementaryTypeName","src":"23324:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23323:14:24"},"returnParameters":{"id":6221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6220,"mutability":"mutable","name":"downcasted","nameLocation":"23368:10:24","nodeType":"VariableDeclaration","scope":6237,"src":"23361:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6219,"name":"int168","nodeType":"ElementaryTypeName","src":"23361:6:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23360:19:24"},"scope":6726,"src":"23306:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6259,"nodeType":"Block","src":"23939:124:24","statements":[{"expression":{"id":6250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6245,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"23949:10:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"23969:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23962:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6246,"name":"int160","nodeType":"ElementaryTypeName","src":"23962:6:24","typeDescriptions":{}}},"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23962:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23949:26:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6251,"nodeType":"ExpressionStatement","src":"23949:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6253,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"23993:10:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"24007:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23993:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":6256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24014:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":6252,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23985:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23985:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6258,"nodeType":"ExpressionStatement","src":"23985:71:24"}]},"documentation":{"id":6238,"nodeType":"StructuredDocumentation","src":"23510:350:24","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":6260,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23874:8:24","nodeType":"FunctionDefinition","parameters":{"id":6241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6240,"mutability":"mutable","name":"value","nameLocation":"23890:5:24","nodeType":"VariableDeclaration","scope":6260,"src":"23883:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6239,"name":"int256","nodeType":"ElementaryTypeName","src":"23883:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23882:14:24"},"returnParameters":{"id":6244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6243,"mutability":"mutable","name":"downcasted","nameLocation":"23927:10:24","nodeType":"VariableDeclaration","scope":6260,"src":"23920:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6242,"name":"int160","nodeType":"ElementaryTypeName","src":"23920:6:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23919:19:24"},"scope":6726,"src":"23865:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6282,"nodeType":"Block","src":"24498:124:24","statements":[{"expression":{"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6268,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"24508:10:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"24528:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24521:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6269,"name":"int152","nodeType":"ElementaryTypeName","src":"24521:6:24","typeDescriptions":{}}},"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24521:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24508:26:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6274,"nodeType":"ExpressionStatement","src":"24508:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6276,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"24552:10:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"24566:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24552:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":6279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24573:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":6275,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24544:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24544:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6281,"nodeType":"ExpressionStatement","src":"24544:71:24"}]},"documentation":{"id":6261,"nodeType":"StructuredDocumentation","src":"24069:350:24","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":6283,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24433:8:24","nodeType":"FunctionDefinition","parameters":{"id":6264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6263,"mutability":"mutable","name":"value","nameLocation":"24449:5:24","nodeType":"VariableDeclaration","scope":6283,"src":"24442:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6262,"name":"int256","nodeType":"ElementaryTypeName","src":"24442:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24441:14:24"},"returnParameters":{"id":6267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6266,"mutability":"mutable","name":"downcasted","nameLocation":"24486:10:24","nodeType":"VariableDeclaration","scope":6283,"src":"24479:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6265,"name":"int152","nodeType":"ElementaryTypeName","src":"24479:6:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24478:19:24"},"scope":6726,"src":"24424:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6305,"nodeType":"Block","src":"25057:124:24","statements":[{"expression":{"id":6296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6291,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"25067:10:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"25087:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25080:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6292,"name":"int144","nodeType":"ElementaryTypeName","src":"25080:6:24","typeDescriptions":{}}},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25080:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25067:26:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6297,"nodeType":"ExpressionStatement","src":"25067:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6299,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"25111:10:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"25125:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25111:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":6302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25132:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":6298,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25103:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25103:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6304,"nodeType":"ExpressionStatement","src":"25103:71:24"}]},"documentation":{"id":6284,"nodeType":"StructuredDocumentation","src":"24628:350:24","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":6306,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24992:8:24","nodeType":"FunctionDefinition","parameters":{"id":6287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6286,"mutability":"mutable","name":"value","nameLocation":"25008:5:24","nodeType":"VariableDeclaration","scope":6306,"src":"25001:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6285,"name":"int256","nodeType":"ElementaryTypeName","src":"25001:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25000:14:24"},"returnParameters":{"id":6290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6289,"mutability":"mutable","name":"downcasted","nameLocation":"25045:10:24","nodeType":"VariableDeclaration","scope":6306,"src":"25038:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6288,"name":"int144","nodeType":"ElementaryTypeName","src":"25038:6:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25037:19:24"},"scope":6726,"src":"24983:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6328,"nodeType":"Block","src":"25616:124:24","statements":[{"expression":{"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6314,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"25626:10:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"25646:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25639:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6315,"name":"int136","nodeType":"ElementaryTypeName","src":"25639:6:24","typeDescriptions":{}}},"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25639:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25626:26:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6320,"nodeType":"ExpressionStatement","src":"25626:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6322,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"25670:10:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6309,"src":"25684:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25670:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":6325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25691:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":6321,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25662:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"25662:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6327,"nodeType":"ExpressionStatement","src":"25662:71:24"}]},"documentation":{"id":6307,"nodeType":"StructuredDocumentation","src":"25187:350:24","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":6329,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25551:8:24","nodeType":"FunctionDefinition","parameters":{"id":6310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6309,"mutability":"mutable","name":"value","nameLocation":"25567:5:24","nodeType":"VariableDeclaration","scope":6329,"src":"25560:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6308,"name":"int256","nodeType":"ElementaryTypeName","src":"25560:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25559:14:24"},"returnParameters":{"id":6313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6312,"mutability":"mutable","name":"downcasted","nameLocation":"25604:10:24","nodeType":"VariableDeclaration","scope":6329,"src":"25597:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6311,"name":"int136","nodeType":"ElementaryTypeName","src":"25597:6:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25596:19:24"},"scope":6726,"src":"25542:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6351,"nodeType":"Block","src":"26175:124:24","statements":[{"expression":{"id":6342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6337,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"26185:10:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"26205:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26198:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6338,"name":"int128","nodeType":"ElementaryTypeName","src":"26198:6:24","typeDescriptions":{}}},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26198:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26185:26:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6343,"nodeType":"ExpressionStatement","src":"26185:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6345,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6335,"src":"26229:10:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6332,"src":"26243:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26229:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":6348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26250:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":6344,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26221:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26221:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6350,"nodeType":"ExpressionStatement","src":"26221:71:24"}]},"documentation":{"id":6330,"nodeType":"StructuredDocumentation","src":"25746:350:24","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":6352,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26110:8:24","nodeType":"FunctionDefinition","parameters":{"id":6333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6332,"mutability":"mutable","name":"value","nameLocation":"26126:5:24","nodeType":"VariableDeclaration","scope":6352,"src":"26119:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6331,"name":"int256","nodeType":"ElementaryTypeName","src":"26119:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26118:14:24"},"returnParameters":{"id":6336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6335,"mutability":"mutable","name":"downcasted","nameLocation":"26163:10:24","nodeType":"VariableDeclaration","scope":6352,"src":"26156:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6334,"name":"int128","nodeType":"ElementaryTypeName","src":"26156:6:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26155:19:24"},"scope":6726,"src":"26101:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6374,"nodeType":"Block","src":"26734:124:24","statements":[{"expression":{"id":6365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6360,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6358,"src":"26744:10:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"26764:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26757:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6361,"name":"int120","nodeType":"ElementaryTypeName","src":"26757:6:24","typeDescriptions":{}}},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26757:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26744:26:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6366,"nodeType":"ExpressionStatement","src":"26744:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6368,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6358,"src":"26788:10:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"26802:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26788:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":6371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26809:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":6367,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26780:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26780:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6373,"nodeType":"ExpressionStatement","src":"26780:71:24"}]},"documentation":{"id":6353,"nodeType":"StructuredDocumentation","src":"26305:350:24","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":6375,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26669:8:24","nodeType":"FunctionDefinition","parameters":{"id":6356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6355,"mutability":"mutable","name":"value","nameLocation":"26685:5:24","nodeType":"VariableDeclaration","scope":6375,"src":"26678:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6354,"name":"int256","nodeType":"ElementaryTypeName","src":"26678:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26677:14:24"},"returnParameters":{"id":6359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6358,"mutability":"mutable","name":"downcasted","nameLocation":"26722:10:24","nodeType":"VariableDeclaration","scope":6375,"src":"26715:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6357,"name":"int120","nodeType":"ElementaryTypeName","src":"26715:6:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26714:19:24"},"scope":6726,"src":"26660:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6397,"nodeType":"Block","src":"27293:124:24","statements":[{"expression":{"id":6388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6383,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6381,"src":"27303:10:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"27323:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27316:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6384,"name":"int112","nodeType":"ElementaryTypeName","src":"27316:6:24","typeDescriptions":{}}},"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27316:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27303:26:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6389,"nodeType":"ExpressionStatement","src":"27303:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6391,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6381,"src":"27347:10:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"27361:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27347:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":6394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27368:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":6390,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27339:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27339:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6396,"nodeType":"ExpressionStatement","src":"27339:71:24"}]},"documentation":{"id":6376,"nodeType":"StructuredDocumentation","src":"26864:350:24","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":6398,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27228:8:24","nodeType":"FunctionDefinition","parameters":{"id":6379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6378,"mutability":"mutable","name":"value","nameLocation":"27244:5:24","nodeType":"VariableDeclaration","scope":6398,"src":"27237:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6377,"name":"int256","nodeType":"ElementaryTypeName","src":"27237:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27236:14:24"},"returnParameters":{"id":6382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6381,"mutability":"mutable","name":"downcasted","nameLocation":"27281:10:24","nodeType":"VariableDeclaration","scope":6398,"src":"27274:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6380,"name":"int112","nodeType":"ElementaryTypeName","src":"27274:6:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27273:19:24"},"scope":6726,"src":"27219:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6420,"nodeType":"Block","src":"27852:124:24","statements":[{"expression":{"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6406,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6404,"src":"27862:10:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"27882:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27875:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6407,"name":"int104","nodeType":"ElementaryTypeName","src":"27875:6:24","typeDescriptions":{}}},"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27875:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27862:26:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6412,"nodeType":"ExpressionStatement","src":"27862:26:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6414,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6404,"src":"27906:10:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"27920:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27906:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":6417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27927:41:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":6413,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27898:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27898:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6419,"nodeType":"ExpressionStatement","src":"27898:71:24"}]},"documentation":{"id":6399,"nodeType":"StructuredDocumentation","src":"27423:350:24","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":6421,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27787:8:24","nodeType":"FunctionDefinition","parameters":{"id":6402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6401,"mutability":"mutable","name":"value","nameLocation":"27803:5:24","nodeType":"VariableDeclaration","scope":6421,"src":"27796:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6400,"name":"int256","nodeType":"ElementaryTypeName","src":"27796:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27795:14:24"},"returnParameters":{"id":6405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6404,"mutability":"mutable","name":"downcasted","nameLocation":"27840:10:24","nodeType":"VariableDeclaration","scope":6421,"src":"27833:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6403,"name":"int104","nodeType":"ElementaryTypeName","src":"27833:6:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27832:19:24"},"scope":6726,"src":"27778:198:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6443,"nodeType":"Block","src":"28404:122:24","statements":[{"expression":{"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6429,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6427,"src":"28414:10:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"28433:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28427:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6430,"name":"int96","nodeType":"ElementaryTypeName","src":"28427:5:24","typeDescriptions":{}}},"id":6433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28427:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28414:25:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6435,"nodeType":"ExpressionStatement","src":"28414:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6437,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6427,"src":"28457:10:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"28471:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28457:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":6440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28478:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":6436,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28449:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28449:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6442,"nodeType":"ExpressionStatement","src":"28449:70:24"}]},"documentation":{"id":6422,"nodeType":"StructuredDocumentation","src":"27982:345:24","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":6444,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28341:7:24","nodeType":"FunctionDefinition","parameters":{"id":6425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6424,"mutability":"mutable","name":"value","nameLocation":"28356:5:24","nodeType":"VariableDeclaration","scope":6444,"src":"28349:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6423,"name":"int256","nodeType":"ElementaryTypeName","src":"28349:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28348:14:24"},"returnParameters":{"id":6428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6427,"mutability":"mutable","name":"downcasted","nameLocation":"28392:10:24","nodeType":"VariableDeclaration","scope":6444,"src":"28386:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6426,"name":"int96","nodeType":"ElementaryTypeName","src":"28386:5:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28385:18:24"},"scope":6726,"src":"28332:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6466,"nodeType":"Block","src":"28954:122:24","statements":[{"expression":{"id":6457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6452,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"28964:10:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"28983:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28977:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6453,"name":"int88","nodeType":"ElementaryTypeName","src":"28977:5:24","typeDescriptions":{}}},"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28977:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28964:25:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6458,"nodeType":"ExpressionStatement","src":"28964:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6460,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"29007:10:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"29021:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29007:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":6463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29028:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":6459,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28999:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28999:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6465,"nodeType":"ExpressionStatement","src":"28999:70:24"}]},"documentation":{"id":6445,"nodeType":"StructuredDocumentation","src":"28532:345:24","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":6467,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28891:7:24","nodeType":"FunctionDefinition","parameters":{"id":6448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6447,"mutability":"mutable","name":"value","nameLocation":"28906:5:24","nodeType":"VariableDeclaration","scope":6467,"src":"28899:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6446,"name":"int256","nodeType":"ElementaryTypeName","src":"28899:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28898:14:24"},"returnParameters":{"id":6451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6450,"mutability":"mutable","name":"downcasted","nameLocation":"28942:10:24","nodeType":"VariableDeclaration","scope":6467,"src":"28936:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6449,"name":"int88","nodeType":"ElementaryTypeName","src":"28936:5:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28935:18:24"},"scope":6726,"src":"28882:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6489,"nodeType":"Block","src":"29504:122:24","statements":[{"expression":{"id":6480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6475,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"29514:10:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6470,"src":"29533:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29527:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6476,"name":"int80","nodeType":"ElementaryTypeName","src":"29527:5:24","typeDescriptions":{}}},"id":6479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29527:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29514:25:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6481,"nodeType":"ExpressionStatement","src":"29514:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6483,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"29557:10:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6470,"src":"29571:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29557:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":6486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29578:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":6482,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29549:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29549:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6488,"nodeType":"ExpressionStatement","src":"29549:70:24"}]},"documentation":{"id":6468,"nodeType":"StructuredDocumentation","src":"29082:345:24","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":6490,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29441:7:24","nodeType":"FunctionDefinition","parameters":{"id":6471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6470,"mutability":"mutable","name":"value","nameLocation":"29456:5:24","nodeType":"VariableDeclaration","scope":6490,"src":"29449:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6469,"name":"int256","nodeType":"ElementaryTypeName","src":"29449:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29448:14:24"},"returnParameters":{"id":6474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6473,"mutability":"mutable","name":"downcasted","nameLocation":"29492:10:24","nodeType":"VariableDeclaration","scope":6490,"src":"29486:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6472,"name":"int80","nodeType":"ElementaryTypeName","src":"29486:5:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29485:18:24"},"scope":6726,"src":"29432:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6512,"nodeType":"Block","src":"30054:122:24","statements":[{"expression":{"id":6503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6498,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"30064:10:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"30083:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30077:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6499,"name":"int72","nodeType":"ElementaryTypeName","src":"30077:5:24","typeDescriptions":{}}},"id":6502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30077:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30064:25:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6504,"nodeType":"ExpressionStatement","src":"30064:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6506,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6496,"src":"30107:10:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"30121:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30107:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":6509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30128:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":6505,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30099:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30099:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6511,"nodeType":"ExpressionStatement","src":"30099:70:24"}]},"documentation":{"id":6491,"nodeType":"StructuredDocumentation","src":"29632:345:24","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":6513,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29991:7:24","nodeType":"FunctionDefinition","parameters":{"id":6494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6493,"mutability":"mutable","name":"value","nameLocation":"30006:5:24","nodeType":"VariableDeclaration","scope":6513,"src":"29999:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6492,"name":"int256","nodeType":"ElementaryTypeName","src":"29999:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29998:14:24"},"returnParameters":{"id":6497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6496,"mutability":"mutable","name":"downcasted","nameLocation":"30042:10:24","nodeType":"VariableDeclaration","scope":6513,"src":"30036:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6495,"name":"int72","nodeType":"ElementaryTypeName","src":"30036:5:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30035:18:24"},"scope":6726,"src":"29982:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6535,"nodeType":"Block","src":"30604:122:24","statements":[{"expression":{"id":6526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6521,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"30614:10:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"30633:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30627:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6522,"name":"int64","nodeType":"ElementaryTypeName","src":"30627:5:24","typeDescriptions":{}}},"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30627:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30614:25:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6527,"nodeType":"ExpressionStatement","src":"30614:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6529,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"30657:10:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"30671:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30657:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":6532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30678:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":6528,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30649:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30649:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6534,"nodeType":"ExpressionStatement","src":"30649:70:24"}]},"documentation":{"id":6514,"nodeType":"StructuredDocumentation","src":"30182:345:24","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":6536,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30541:7:24","nodeType":"FunctionDefinition","parameters":{"id":6517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6516,"mutability":"mutable","name":"value","nameLocation":"30556:5:24","nodeType":"VariableDeclaration","scope":6536,"src":"30549:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6515,"name":"int256","nodeType":"ElementaryTypeName","src":"30549:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30548:14:24"},"returnParameters":{"id":6520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6519,"mutability":"mutable","name":"downcasted","nameLocation":"30592:10:24","nodeType":"VariableDeclaration","scope":6536,"src":"30586:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6518,"name":"int64","nodeType":"ElementaryTypeName","src":"30586:5:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30585:18:24"},"scope":6726,"src":"30532:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6558,"nodeType":"Block","src":"31154:122:24","statements":[{"expression":{"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6544,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"31164:10:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"31183:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31177:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6545,"name":"int56","nodeType":"ElementaryTypeName","src":"31177:5:24","typeDescriptions":{}}},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31177:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31164:25:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6550,"nodeType":"ExpressionStatement","src":"31164:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6552,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"31207:10:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"31221:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31207:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":6555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31228:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":6551,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31199:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31199:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6557,"nodeType":"ExpressionStatement","src":"31199:70:24"}]},"documentation":{"id":6537,"nodeType":"StructuredDocumentation","src":"30732:345:24","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":6559,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31091:7:24","nodeType":"FunctionDefinition","parameters":{"id":6540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6539,"mutability":"mutable","name":"value","nameLocation":"31106:5:24","nodeType":"VariableDeclaration","scope":6559,"src":"31099:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6538,"name":"int256","nodeType":"ElementaryTypeName","src":"31099:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31098:14:24"},"returnParameters":{"id":6543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6542,"mutability":"mutable","name":"downcasted","nameLocation":"31142:10:24","nodeType":"VariableDeclaration","scope":6559,"src":"31136:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6541,"name":"int56","nodeType":"ElementaryTypeName","src":"31136:5:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31135:18:24"},"scope":6726,"src":"31082:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6581,"nodeType":"Block","src":"31704:122:24","statements":[{"expression":{"id":6572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6567,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"31714:10:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6562,"src":"31733:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31727:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6568,"name":"int48","nodeType":"ElementaryTypeName","src":"31727:5:24","typeDescriptions":{}}},"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31727:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31714:25:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6573,"nodeType":"ExpressionStatement","src":"31714:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6575,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"31757:10:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6562,"src":"31771:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31757:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":6578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31778:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":6574,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31749:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31749:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6580,"nodeType":"ExpressionStatement","src":"31749:70:24"}]},"documentation":{"id":6560,"nodeType":"StructuredDocumentation","src":"31282:345:24","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":6582,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31641:7:24","nodeType":"FunctionDefinition","parameters":{"id":6563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6562,"mutability":"mutable","name":"value","nameLocation":"31656:5:24","nodeType":"VariableDeclaration","scope":6582,"src":"31649:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6561,"name":"int256","nodeType":"ElementaryTypeName","src":"31649:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31648:14:24"},"returnParameters":{"id":6566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6565,"mutability":"mutable","name":"downcasted","nameLocation":"31692:10:24","nodeType":"VariableDeclaration","scope":6582,"src":"31686:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6564,"name":"int48","nodeType":"ElementaryTypeName","src":"31686:5:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31685:18:24"},"scope":6726,"src":"31632:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6604,"nodeType":"Block","src":"32254:122:24","statements":[{"expression":{"id":6595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6590,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6588,"src":"32264:10:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"32283:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32277:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6591,"name":"int40","nodeType":"ElementaryTypeName","src":"32277:5:24","typeDescriptions":{}}},"id":6594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32277:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32264:25:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6596,"nodeType":"ExpressionStatement","src":"32264:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6598,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6588,"src":"32307:10:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"32321:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32307:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":6601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32328:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":6597,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32299:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32299:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6603,"nodeType":"ExpressionStatement","src":"32299:70:24"}]},"documentation":{"id":6583,"nodeType":"StructuredDocumentation","src":"31832:345:24","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":6605,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32191:7:24","nodeType":"FunctionDefinition","parameters":{"id":6586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6585,"mutability":"mutable","name":"value","nameLocation":"32206:5:24","nodeType":"VariableDeclaration","scope":6605,"src":"32199:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6584,"name":"int256","nodeType":"ElementaryTypeName","src":"32199:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32198:14:24"},"returnParameters":{"id":6589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6588,"mutability":"mutable","name":"downcasted","nameLocation":"32242:10:24","nodeType":"VariableDeclaration","scope":6605,"src":"32236:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6587,"name":"int40","nodeType":"ElementaryTypeName","src":"32236:5:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32235:18:24"},"scope":6726,"src":"32182:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6627,"nodeType":"Block","src":"32804:122:24","statements":[{"expression":{"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6613,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"32814:10:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6608,"src":"32833:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32827:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6614,"name":"int32","nodeType":"ElementaryTypeName","src":"32827:5:24","typeDescriptions":{}}},"id":6617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32827:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32814:25:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6619,"nodeType":"ExpressionStatement","src":"32814:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6621,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"32857:10:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6608,"src":"32871:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32857:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":6624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32878:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":6620,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32849:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32849:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6626,"nodeType":"ExpressionStatement","src":"32849:70:24"}]},"documentation":{"id":6606,"nodeType":"StructuredDocumentation","src":"32382:345:24","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":6628,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32741:7:24","nodeType":"FunctionDefinition","parameters":{"id":6609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6608,"mutability":"mutable","name":"value","nameLocation":"32756:5:24","nodeType":"VariableDeclaration","scope":6628,"src":"32749:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6607,"name":"int256","nodeType":"ElementaryTypeName","src":"32749:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32748:14:24"},"returnParameters":{"id":6612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6611,"mutability":"mutable","name":"downcasted","nameLocation":"32792:10:24","nodeType":"VariableDeclaration","scope":6628,"src":"32786:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6610,"name":"int32","nodeType":"ElementaryTypeName","src":"32786:5:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32785:18:24"},"scope":6726,"src":"32732:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6650,"nodeType":"Block","src":"33354:122:24","statements":[{"expression":{"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6636,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"33364:10:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"33383:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33377:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6637,"name":"int24","nodeType":"ElementaryTypeName","src":"33377:5:24","typeDescriptions":{}}},"id":6640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33377:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33364:25:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6642,"nodeType":"ExpressionStatement","src":"33364:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6644,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"33407:10:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"33421:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33407:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":6647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33428:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":6643,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33399:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33399:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6649,"nodeType":"ExpressionStatement","src":"33399:70:24"}]},"documentation":{"id":6629,"nodeType":"StructuredDocumentation","src":"32932:345:24","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":6651,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33291:7:24","nodeType":"FunctionDefinition","parameters":{"id":6632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6631,"mutability":"mutable","name":"value","nameLocation":"33306:5:24","nodeType":"VariableDeclaration","scope":6651,"src":"33299:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6630,"name":"int256","nodeType":"ElementaryTypeName","src":"33299:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33298:14:24"},"returnParameters":{"id":6635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6634,"mutability":"mutable","name":"downcasted","nameLocation":"33342:10:24","nodeType":"VariableDeclaration","scope":6651,"src":"33336:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6633,"name":"int24","nodeType":"ElementaryTypeName","src":"33336:5:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33335:18:24"},"scope":6726,"src":"33282:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6673,"nodeType":"Block","src":"33904:122:24","statements":[{"expression":{"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6659,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"33914:10:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"33933:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33927:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6660,"name":"int16","nodeType":"ElementaryTypeName","src":"33927:5:24","typeDescriptions":{}}},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33927:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33914:25:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6665,"nodeType":"ExpressionStatement","src":"33914:25:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6667,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"33957:10:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"33971:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33957:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":6670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33978:40:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":6666,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33949:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33949:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6672,"nodeType":"ExpressionStatement","src":"33949:70:24"}]},"documentation":{"id":6652,"nodeType":"StructuredDocumentation","src":"33482:345:24","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":6674,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33841:7:24","nodeType":"FunctionDefinition","parameters":{"id":6655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6654,"mutability":"mutable","name":"value","nameLocation":"33856:5:24","nodeType":"VariableDeclaration","scope":6674,"src":"33849:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6653,"name":"int256","nodeType":"ElementaryTypeName","src":"33849:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33848:14:24"},"returnParameters":{"id":6658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6657,"mutability":"mutable","name":"downcasted","nameLocation":"33892:10:24","nodeType":"VariableDeclaration","scope":6674,"src":"33886:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6656,"name":"int16","nodeType":"ElementaryTypeName","src":"33886:5:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33885:18:24"},"scope":6726,"src":"33832:194:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6696,"nodeType":"Block","src":"34447:120:24","statements":[{"expression":{"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6682,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"34457:10:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"34475:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34470:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6683,"name":"int8","nodeType":"ElementaryTypeName","src":"34470:4:24","typeDescriptions":{}}},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34470:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34457:24:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6688,"nodeType":"ExpressionStatement","src":"34457:24:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6690,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"34499:10:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"34513:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34499:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":6693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34520:39:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":6689,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34491:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34491:69:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6695,"nodeType":"ExpressionStatement","src":"34491:69:24"}]},"documentation":{"id":6675,"nodeType":"StructuredDocumentation","src":"34032:340:24","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":6697,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34386:6:24","nodeType":"FunctionDefinition","parameters":{"id":6678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6677,"mutability":"mutable","name":"value","nameLocation":"34400:5:24","nodeType":"VariableDeclaration","scope":6697,"src":"34393:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6676,"name":"int256","nodeType":"ElementaryTypeName","src":"34393:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34392:14:24"},"returnParameters":{"id":6681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6680,"mutability":"mutable","name":"downcasted","nameLocation":"34435:10:24","nodeType":"VariableDeclaration","scope":6697,"src":"34430:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6679,"name":"int8","nodeType":"ElementaryTypeName","src":"34430:4:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34429:17:24"},"scope":6726,"src":"34377:190:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6724,"nodeType":"Block","src":"34845:233:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"34962:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34984:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6710,"name":"int256","nodeType":"ElementaryTypeName","src":"34984:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6709,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34979:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34979:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"34979:16:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34971:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6707,"name":"uint256","nodeType":"ElementaryTypeName","src":"34971:7:24","typeDescriptions":{}}},"id":6714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34971:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34962:34:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":6716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34998:42:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":6705,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34954:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34954:87:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6718,"nodeType":"ExpressionStatement","src":"34954:87:24"},{"expression":{"arguments":[{"id":6721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"35065:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35058:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6719,"name":"int256","nodeType":"ElementaryTypeName","src":"35058:6:24","typeDescriptions":{}}},"id":6722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35058:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6704,"id":6723,"nodeType":"Return","src":"35051:20:24"}]},"documentation":{"id":6698,"nodeType":"StructuredDocumentation","src":"34573:203:24","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":6725,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34790:8:24","nodeType":"FunctionDefinition","parameters":{"id":6701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6700,"mutability":"mutable","name":"value","nameLocation":"34807:5:24","nodeType":"VariableDeclaration","scope":6725,"src":"34799:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6699,"name":"uint256","nodeType":"ElementaryTypeName","src":"34799:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34798:15:24"},"returnParameters":{"id":6704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6725,"src":"34837:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6702,"name":"int256","nodeType":"ElementaryTypeName","src":"34837:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34836:8:24"},"scope":6726,"src":"34781:297:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6727,"src":"927:34153:24","usedErrors":[]}],"src":"192:34889:24"},"id":24},"contracts/SbfNFT.sol":{"ast":{"absolutePath":"contracts/SbfNFT.sol","exportedSymbols":{"Address":[3498],"Context":[3520],"Counters":[3594],"ERC165":[4308],"ERC721":[2882],"ERC721URIStorage":[3141],"IERC165":[4320],"IERC721":[2998],"IERC721Metadata":[3168],"IERC721Receiver":[3016],"Math":[5185],"Ownable":[112],"SbfNFT":[6787],"Strings":[3769]},"id":6788,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6728,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"159:23:25"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":6729,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6788,"sourceUnit":2883,"src":"186:57:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"@openzeppelin/contracts/utils/Counters.sol","id":6730,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6788,"sourceUnit":3595,"src":"245:52:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6731,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6788,"sourceUnit":113,"src":"299:52:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":6732,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6788,"sourceUnit":3142,"src":"353:78:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6733,"name":"ERC721URIStorage","nodeType":"IdentifierPath","referencedDeclaration":3141,"src":"454:16:25"},"id":6734,"nodeType":"InheritanceSpecifier","src":"454:16:25"},{"baseName":{"id":6735,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"472:7:25"},"id":6736,"nodeType":"InheritanceSpecifier","src":"472:7:25"}],"canonicalName":"SbfNFT","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6787,"linearizedBaseContracts":[6787,112,3141,2882,3168,2998,4308,4320,3520],"name":"SbfNFT","nameLocation":"444:6:25","nodeType":"ContractDefinition","nodes":[{"id":6740,"libraryName":{"id":6737,"name":"Counters","nodeType":"IdentifierPath","referencedDeclaration":3594,"src":"493:8:25"},"nodeType":"UsingForDirective","src":"487:36:25","typeName":{"id":6739,"nodeType":"UserDefinedTypeName","pathNode":{"id":6738,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":3526,"src":"506:16:25"},"referencedDeclaration":3526,"src":"506:16:25","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":6743,"mutability":"mutable","name":"_tokenIds","nameLocation":"554:9:25","nodeType":"VariableDeclaration","scope":6787,"src":"529:34:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage","typeString":"struct Counters.Counter"},"typeName":{"id":6742,"nodeType":"UserDefinedTypeName","pathNode":{"id":6741,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":3526,"src":"529:16:25"},"referencedDeclaration":3526,"src":"529:16:25","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"body":{"id":6750,"nodeType":"Block","src":"622:2:25","statements":[]},"id":6751,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"534246204d656d62657273686970204e4654","id":6746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"593:20:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_4adbc5f7f5541e258588ed9dbcfc2d502770d4560dd6e039c4ff5f0a5dabc011","typeString":"literal_string \"SBF Membership NFT\""},"value":"SBF Membership NFT"},{"hexValue":"534246","id":6747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"615:5:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_5553b732acc7149817e4805e0dff7f467ee3cb9c5a7baa8671d2d9c3e653cc69","typeString":"literal_string \"SBF\""},"value":"SBF"}],"id":6748,"kind":"baseConstructorSpecifier","modifierName":{"id":6745,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2882,"src":"586:6:25"},"nodeType":"ModifierInvocation","src":"586:35:25"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6744,"nodeType":"ParameterList","parameters":[],"src":"583:2:25"},"returnParameters":{"id":6749,"nodeType":"ParameterList","parameters":[],"src":"622:0:25"},"scope":6787,"src":"572:52:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6785,"nodeType":"Block","src":"750:203:25","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6762,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"761:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage","typeString":"struct Counters.Counter storage ref"}},"id":6764,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":3552,"src":"761:19:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$3526_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$3526_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"761:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6766,"nodeType":"ExpressionStatement","src":"761:21:25"},{"assignments":[6768],"declarations":[{"constant":false,"id":6768,"mutability":"mutable","name":"newItemId","nameLocation":"803:9:25","nodeType":"VariableDeclaration","scope":6785,"src":"795:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6767,"name":"uint256","nodeType":"ElementaryTypeName","src":"795:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6772,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6769,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6743,"src":"815:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$3526_storage","typeString":"struct Counters.Counter storage ref"}},"id":6770,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":3538,"src":"815:17:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$3526_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$3526_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"815:19:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"795:39:25"},{"expression":{"arguments":[{"id":6774,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"851:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6775,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"862:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6773,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"845:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"845:27:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6777,"nodeType":"ExpressionStatement","src":"845:27:25"},{"expression":{"arguments":[{"id":6779,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"896:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6780,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6755,"src":"907:8:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6778,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"883:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"883:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6782,"nodeType":"ExpressionStatement","src":"883:33:25"},{"expression":{"id":6783,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"936:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6761,"id":6784,"nodeType":"Return","src":"929:16:25"}]},"functionSelector":"eacabe14","id":6786,"implemented":true,"kind":"function","modifiers":[{"id":6758,"kind":"modifierInvocation","modifierName":{"id":6757,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"708:9:25"},"nodeType":"ModifierInvocation","src":"708:9:25"}],"name":"mintNFT","nameLocation":"641:7:25","nodeType":"FunctionDefinition","parameters":{"id":6756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6753,"mutability":"mutable","name":"recipient","nameLocation":"657:9:25","nodeType":"VariableDeclaration","scope":6786,"src":"649:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6752,"name":"address","nodeType":"ElementaryTypeName","src":"649:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6755,"mutability":"mutable","name":"tokenURI","nameLocation":"682:8:25","nodeType":"VariableDeclaration","scope":6786,"src":"668:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6754,"name":"string","nodeType":"ElementaryTypeName","src":"668:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"648:43:25"},"returnParameters":{"id":6761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6786,"src":"736:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6759,"name":"uint256","nodeType":"ElementaryTypeName","src":"736:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"735:9:25"},"scope":6787,"src":"632:321:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":6788,"src":"435:521:25","usedErrors":[]}],"src":"159:799:25"},"id":25},"contracts/SbfToken.sol":{"ast":{"absolutePath":"contracts/SbfToken.sol","exportedSymbols":{"Context":[3520],"Counters":[3594],"ECDSA":[4130],"EIP712":[4284],"ERC20":[885],"ERC20Burnable":[1007],"ERC20Permit":[1901],"ERC20Votes":[1704],"IERC20":[963],"IERC20Metadata":[1729],"IERC20Permit":[1937],"IVotes":[190],"Math":[5185],"Ownable":[112],"Pausable":[298],"SBFToken":[6941],"SafeCast":[6726],"Strings":[3769]},"id":6942,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6789,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"33:23:26"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":6790,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6942,"sourceUnit":886,"src":"60:55:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":6791,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6942,"sourceUnit":1008,"src":"117:74:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","file":"@openzeppelin/contracts/security/Pausable.sol","id":6792,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6942,"sourceUnit":299,"src":"193:55:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6793,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6942,"sourceUnit":113,"src":"250:52:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","id":6794,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6942,"sourceUnit":1902,"src":"304:78:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","id":6795,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6942,"sourceUnit":1705,"src":"384:71:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6796,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":885,"src":"480:5:26"},"id":6797,"nodeType":"InheritanceSpecifier","src":"480:5:26"},{"baseName":{"id":6798,"name":"ERC20Burnable","nodeType":"IdentifierPath","referencedDeclaration":1007,"src":"487:13:26"},"id":6799,"nodeType":"InheritanceSpecifier","src":"487:13:26"},{"baseName":{"id":6800,"name":"Pausable","nodeType":"IdentifierPath","referencedDeclaration":298,"src":"502:8:26"},"id":6801,"nodeType":"InheritanceSpecifier","src":"502:8:26"},{"baseName":{"id":6802,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"512:7:26"},"id":6803,"nodeType":"InheritanceSpecifier","src":"512:7:26"},{"baseName":{"id":6804,"name":"ERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":1901,"src":"521:11:26"},"id":6805,"nodeType":"InheritanceSpecifier","src":"521:11:26"},{"baseName":{"id":6806,"name":"ERC20Votes","nodeType":"IdentifierPath","referencedDeclaration":1704,"src":"534:10:26"},"id":6807,"nodeType":"InheritanceSpecifier","src":"534:10:26"}],"canonicalName":"SBFToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6941,"linearizedBaseContracts":[6941,1704,1901,4284,1937,112,298,1007,885,1729,963,3520,190],"name":"SBFToken","nameLocation":"468:8:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":6828,"nodeType":"Block","src":"615:67:26","statements":[{"expression":{"arguments":[{"expression":{"id":6818,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"632:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"632:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31303030303030303030","id":6820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"644:10:26","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1000000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"657:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6822,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"663:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":6823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"663:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"657:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"644:29:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6817,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[6922],"referencedDeclaration":6922,"src":"626:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"626:48:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6827,"nodeType":"ExpressionStatement","src":"626:48:26"}]},"id":6829,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"534246546f6b656e","id":6810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"572:10:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_40f56666b62a913451e0b4528ed2d284c1b2cd1e3f89bab740c6b24b500386cb","typeString":"literal_string \"SBFToken\""},"value":"SBFToken"},{"hexValue":"534246","id":6811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"584:5:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_5553b732acc7149817e4805e0dff7f467ee3cb9c5a7baa8671d2d9c3e653cc69","typeString":"literal_string \"SBF\""},"value":"SBF"}],"id":6812,"kind":"baseConstructorSpecifier","modifierName":{"id":6809,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":885,"src":"566:5:26"},"nodeType":"ModifierInvocation","src":"566:24:26"},{"arguments":[{"hexValue":"534246546f6b656e","id":6814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"603:10:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_40f56666b62a913451e0b4528ed2d284c1b2cd1e3f89bab740c6b24b500386cb","typeString":"literal_string \"SBFToken\""},"value":"SBFToken"}],"id":6815,"kind":"baseConstructorSpecifier","modifierName":{"id":6813,"name":"ERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":1901,"src":"591:11:26"},"nodeType":"ModifierInvocation","src":"591:23:26"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6808,"nodeType":"ParameterList","parameters":[],"src":"563:2:26"},"returnParameters":{"id":6816,"nodeType":"ParameterList","parameters":[],"src":"615:0:26"},"scope":6941,"src":"552:130:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6837,"nodeType":"Block","src":"724:27:26","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6834,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"735:6:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"735:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6836,"nodeType":"ExpressionStatement","src":"735:8:26"}]},"functionSelector":"8456cb59","id":6838,"implemented":true,"kind":"function","modifiers":[{"id":6832,"kind":"modifierInvocation","modifierName":{"id":6831,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"714:9:26"},"nodeType":"ModifierInvocation","src":"714:9:26"}],"name":"pause","nameLocation":"699:5:26","nodeType":"FunctionDefinition","parameters":{"id":6830,"nodeType":"ParameterList","parameters":[],"src":"704:2:26"},"returnParameters":{"id":6833,"nodeType":"ParameterList","parameters":[],"src":"724:0:26"},"scope":6941,"src":"690:61:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6846,"nodeType":"Block","src":"795:29:26","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":6843,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"806:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"806:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6845,"nodeType":"ExpressionStatement","src":"806:10:26"}]},"functionSelector":"3f4ba83a","id":6847,"implemented":true,"kind":"function","modifiers":[{"id":6841,"kind":"modifierInvocation","modifierName":{"id":6840,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"785:9:26"},"nodeType":"ModifierInvocation","src":"785:9:26"}],"name":"unpause","nameLocation":"768:7:26","nodeType":"FunctionDefinition","parameters":{"id":6839,"nodeType":"ParameterList","parameters":[],"src":"775:2:26"},"returnParameters":{"id":6842,"nodeType":"ParameterList","parameters":[],"src":"795:0:26"},"scope":6941,"src":"759:65:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6861,"nodeType":"Block","src":"891:36:26","statements":[{"expression":{"arguments":[{"id":6857,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"908:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6858,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6851,"src":"912:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6856,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[6922],"referencedDeclaration":6922,"src":"902:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"902:17:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6860,"nodeType":"ExpressionStatement","src":"902:17:26"}]},"functionSelector":"40c10f19","id":6862,"implemented":true,"kind":"function","modifiers":[{"id":6854,"kind":"modifierInvocation","modifierName":{"id":6853,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"881:9:26"},"nodeType":"ModifierInvocation","src":"881:9:26"}],"name":"mint","nameLocation":"841:4:26","nodeType":"FunctionDefinition","parameters":{"id":6852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6849,"mutability":"mutable","name":"to","nameLocation":"854:2:26","nodeType":"VariableDeclaration","scope":6862,"src":"846:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6848,"name":"address","nodeType":"ElementaryTypeName","src":"846:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6851,"mutability":"mutable","name":"amount","nameLocation":"866:6:26","nodeType":"VariableDeclaration","scope":6862,"src":"858:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6850,"name":"uint256","nodeType":"ElementaryTypeName","src":"858:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"845:28:26"},"returnParameters":{"id":6855,"nodeType":"ParameterList","parameters":[],"src":"891:0:26"},"scope":6941,"src":"832:95:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[873],"body":{"id":6882,"nodeType":"Block","src":"1071:63:26","statements":[{"expression":{"arguments":[{"id":6877,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6864,"src":"1109:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6878,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"1115:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6879,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6868,"src":"1119:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6874,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1082:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_SBFToken_$6941_$","typeString":"type(contract super SBFToken)"}},"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":873,"src":"1082:26:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1082:44:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6881,"nodeType":"ExpressionStatement","src":"1082:44:26"}]},"id":6883,"implemented":true,"kind":"function","modifiers":[{"id":6871,"kind":"modifierInvocation","modifierName":{"id":6870,"name":"whenNotPaused","nodeType":"IdentifierPath","referencedDeclaration":225,"src":"1034:13:26"},"nodeType":"ModifierInvocation","src":"1034:13:26"}],"name":"_beforeTokenTransfer","nameLocation":"944:20:26","nodeType":"FunctionDefinition","overrides":{"id":6872,"nodeType":"OverrideSpecifier","overrides":[],"src":"1057:8:26"},"parameters":{"id":6869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6864,"mutability":"mutable","name":"from","nameLocation":"973:4:26","nodeType":"VariableDeclaration","scope":6883,"src":"965:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6863,"name":"address","nodeType":"ElementaryTypeName","src":"965:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6866,"mutability":"mutable","name":"to","nameLocation":"987:2:26","nodeType":"VariableDeclaration","scope":6883,"src":"979:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6865,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6868,"mutability":"mutable","name":"amount","nameLocation":"999:6:26","nodeType":"VariableDeclaration","scope":6883,"src":"991:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6867,"name":"uint256","nodeType":"ElementaryTypeName","src":"991:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"964:42:26"},"returnParameters":{"id":6873,"nodeType":"ParameterList","parameters":[],"src":"1071:0:26"},"scope":6941,"src":"935:199:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[884,1451],"body":{"id":6903,"nodeType":"Block","src":"1343:62:26","statements":[{"expression":{"arguments":[{"id":6898,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6885,"src":"1380:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6899,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"1386:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6900,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"1390:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6895,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1354:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_SBFToken_$6941_$","typeString":"type(contract super SBFToken)"}},"id":6897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1451,"src":"1354:25:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1354:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6902,"nodeType":"ExpressionStatement","src":"1354:43:26"}]},"id":6904,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"1221:19:26","nodeType":"FunctionDefinition","overrides":{"id":6893,"nodeType":"OverrideSpecifier","overrides":[{"id":6891,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":885,"src":"1319:5:26"},{"id":6892,"name":"ERC20Votes","nodeType":"IdentifierPath","referencedDeclaration":1704,"src":"1326:10:26"}],"src":"1310:27:26"},"parameters":{"id":6890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6885,"mutability":"mutable","name":"from","nameLocation":"1249:4:26","nodeType":"VariableDeclaration","scope":6904,"src":"1241:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6884,"name":"address","nodeType":"ElementaryTypeName","src":"1241:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6887,"mutability":"mutable","name":"to","nameLocation":"1263:2:26","nodeType":"VariableDeclaration","scope":6904,"src":"1255:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6886,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6889,"mutability":"mutable","name":"amount","nameLocation":"1275:6:26","nodeType":"VariableDeclaration","scope":6904,"src":"1267:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:42:26"},"returnParameters":{"id":6894,"nodeType":"ParameterList","parameters":[],"src":"1343:0:26"},"scope":6941,"src":"1212:193:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[702,1398],"body":{"id":6921,"nodeType":"Block","src":"1516:42:26","statements":[{"expression":{"arguments":[{"id":6917,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"1539:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6918,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6908,"src":"1543:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6914,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1527:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_SBFToken_$6941_$","typeString":"type(contract super SBFToken)"}},"id":6916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":1398,"src":"1527:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1527:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6920,"nodeType":"ExpressionStatement","src":"1527:23:26"}]},"id":6922,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"1422:5:26","nodeType":"FunctionDefinition","overrides":{"id":6912,"nodeType":"OverrideSpecifier","overrides":[{"id":6910,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":885,"src":"1492:5:26"},{"id":6911,"name":"ERC20Votes","nodeType":"IdentifierPath","referencedDeclaration":1704,"src":"1499:10:26"}],"src":"1483:27:26"},"parameters":{"id":6909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6906,"mutability":"mutable","name":"to","nameLocation":"1436:2:26","nodeType":"VariableDeclaration","scope":6922,"src":"1428:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6905,"name":"address","nodeType":"ElementaryTypeName","src":"1428:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6908,"mutability":"mutable","name":"amount","nameLocation":"1448:6:26","nodeType":"VariableDeclaration","scope":6922,"src":"1440:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6907,"name":"uint256","nodeType":"ElementaryTypeName","src":"1440:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1427:28:26"},"returnParameters":{"id":6913,"nodeType":"ParameterList","parameters":[],"src":"1516:0:26"},"scope":6941,"src":"1413:145:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[774,1421],"body":{"id":6939,"nodeType":"Block","src":"1674:47:26","statements":[{"expression":{"arguments":[{"id":6935,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6924,"src":"1697:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6936,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6926,"src":"1706:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6932,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1685:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_SBFToken_$6941_$","typeString":"type(contract super SBFToken)"}},"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1421,"src":"1685:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1685:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6938,"nodeType":"ExpressionStatement","src":"1685:28:26"}]},"id":6940,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"1575:5:26","nodeType":"FunctionDefinition","overrides":{"id":6930,"nodeType":"OverrideSpecifier","overrides":[{"id":6928,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":885,"src":"1650:5:26"},{"id":6929,"name":"ERC20Votes","nodeType":"IdentifierPath","referencedDeclaration":1704,"src":"1657:10:26"}],"src":"1641:27:26"},"parameters":{"id":6927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6924,"mutability":"mutable","name":"account","nameLocation":"1589:7:26","nodeType":"VariableDeclaration","scope":6940,"src":"1581:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6923,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6926,"mutability":"mutable","name":"amount","nameLocation":"1606:6:26","nodeType":"VariableDeclaration","scope":6940,"src":"1598:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6925,"name":"uint256","nodeType":"ElementaryTypeName","src":"1598:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1580:33:26"},"returnParameters":{"id":6931,"nodeType":"ParameterList","parameters":[],"src":"1674:0:26"},"scope":6941,"src":"1566:155:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":6942,"src":"459:1265:26","usedErrors":[]}],"src":"33:1693:26"},"id":26}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts. _Available since v4.5._\",\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at the end of a past block (`blockNumber`). NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at the end of a past block (`blockNumber`).\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/Pausable.sol":{"Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_343":{"entryPoint":null,"id":343,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":576,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":702,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":437,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":289,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":468,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":522,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":383,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":835,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":336,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":309,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":314,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":304,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":299,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":319,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4093:27","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:27","statements":[{"nodeType":"YulAssignment","src":"57:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:27"},"nodeType":"YulFunctionCall","src":"67:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:27","type":""}],"src":"7:75:27"},{"body":{"nodeType":"YulBlock","src":"177:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:27"},"nodeType":"YulFunctionCall","src":"187:12:27"},"nodeType":"YulExpressionStatement","src":"187:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:27"},{"body":{"nodeType":"YulBlock","src":"300:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:27"},"nodeType":"YulFunctionCall","src":"310:12:27"},"nodeType":"YulExpressionStatement","src":"310:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:27"},{"body":{"nodeType":"YulBlock","src":"423:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:27"},"nodeType":"YulFunctionCall","src":"433:12:27"},"nodeType":"YulExpressionStatement","src":"433:12:27"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:27"},{"body":{"nodeType":"YulBlock","src":"546:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:27"},"nodeType":"YulFunctionCall","src":"556:12:27"},"nodeType":"YulExpressionStatement","src":"556:12:27"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:27"},{"body":{"nodeType":"YulBlock","src":"628:54:27","statements":[{"nodeType":"YulAssignment","src":"638:38:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:27"},"nodeType":"YulFunctionCall","src":"652:14:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:27"},"nodeType":"YulFunctionCall","src":"668:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:27"},"nodeType":"YulFunctionCall","src":"648:28:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:27"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:27","type":""}],"src":"580:102:27"},{"body":{"nodeType":"YulBlock","src":"716:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:27"},"nodeType":"YulFunctionCall","src":"726:88:27"},"nodeType":"YulExpressionStatement","src":"726:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:27"},"nodeType":"YulFunctionCall","src":"823:15:27"},"nodeType":"YulExpressionStatement","src":"823:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:27"},"nodeType":"YulFunctionCall","src":"847:15:27"},"nodeType":"YulExpressionStatement","src":"847:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:27"},{"body":{"nodeType":"YulBlock","src":"917:238:27","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:27"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:27"},"nodeType":"YulFunctionCall","src":"957:27:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:27"},"nodeType":"YulFunctionCall","src":"945:40:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:27"},"nodeType":"YulFunctionCall","src":"1098:18:27"},"nodeType":"YulExpressionStatement","src":"1098:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:27"},"nodeType":"YulFunctionCall","src":"1036:34:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:27"},"nodeType":"YulFunctionCall","src":"1072:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:27"},"nodeType":"YulFunctionCall","src":"1033:62:27"},"nodeType":"YulIf","src":"1030:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:27"},"nodeType":"YulFunctionCall","src":"1127:22:27"},"nodeType":"YulExpressionStatement","src":"1127:22:27"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:27","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:27","type":""}],"src":"874:281:27"},{"body":{"nodeType":"YulBlock","src":"1202:88:27","statements":[{"nodeType":"YulAssignment","src":"1212:30:27","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:27"},"nodeType":"YulFunctionCall","src":"1222:20:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:27"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:27"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:27"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:27"},"nodeType":"YulFunctionCall","src":"1251:33:27"},"nodeType":"YulExpressionStatement","src":"1251:33:27"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:27","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:27","type":""}],"src":"1161:129:27"},{"body":{"nodeType":"YulBlock","src":"1363:241:27","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:27"},"nodeType":"YulFunctionCall","src":"1470:18:27"},"nodeType":"YulExpressionStatement","src":"1470:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:27"},"nodeType":"YulFunctionCall","src":"1437:30:27"},"nodeType":"YulIf","src":"1434:56:27"},{"nodeType":"YulAssignment","src":"1500:37:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:27"},"nodeType":"YulFunctionCall","src":"1508:29:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:27"}]},{"nodeType":"YulAssignment","src":"1574:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:27"},"nodeType":"YulFunctionCall","src":"1582:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:27"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:27","type":""}],"src":"1296:308:27"},{"body":{"nodeType":"YulBlock","src":"1659:258:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1669:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1678:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1673:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1738:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1763:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"1768:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1759:3:27"},"nodeType":"YulFunctionCall","src":"1759:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1782:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"1787:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1778:3:27"},"nodeType":"YulFunctionCall","src":"1778:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1772:5:27"},"nodeType":"YulFunctionCall","src":"1772:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:27"},"nodeType":"YulFunctionCall","src":"1752:39:27"},"nodeType":"YulExpressionStatement","src":"1752:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1699:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"1702:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1696:2:27"},"nodeType":"YulFunctionCall","src":"1696:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1710:19:27","statements":[{"nodeType":"YulAssignment","src":"1712:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1721:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"1724:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1717:3:27"},"nodeType":"YulFunctionCall","src":"1717:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"1692:3:27","statements":[]},"src":"1688:113:27"},{"body":{"nodeType":"YulBlock","src":"1835:76:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1885:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1881:3:27"},"nodeType":"YulFunctionCall","src":"1881:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"1899:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1874:6:27"},"nodeType":"YulFunctionCall","src":"1874:27:27"},"nodeType":"YulExpressionStatement","src":"1874:27:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1816:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"1819:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1813:2:27"},"nodeType":"YulFunctionCall","src":"1813:13:27"},"nodeType":"YulIf","src":"1810:101:27"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1641:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1646:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"1651:6:27","type":""}],"src":"1610:307:27"},{"body":{"nodeType":"YulBlock","src":"2018:326:27","statements":[{"nodeType":"YulAssignment","src":"2028:75:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2095:6:27"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2053:41:27"},"nodeType":"YulFunctionCall","src":"2053:49:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2037:15:27"},"nodeType":"YulFunctionCall","src":"2037:66:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2028:5:27"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2119:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"2126:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2112:6:27"},"nodeType":"YulFunctionCall","src":"2112:21:27"},"nodeType":"YulExpressionStatement","src":"2112:21:27"},{"nodeType":"YulVariableDeclaration","src":"2142:27:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2157:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2164:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:27"},"nodeType":"YulFunctionCall","src":"2153:16:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2146:3:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2207:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2209:77:27"},"nodeType":"YulFunctionCall","src":"2209:79:27"},"nodeType":"YulExpressionStatement","src":"2209:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2188:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2193:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2184:3:27"},"nodeType":"YulFunctionCall","src":"2184:16:27"},{"name":"end","nodeType":"YulIdentifier","src":"2202:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2181:2:27"},"nodeType":"YulFunctionCall","src":"2181:25:27"},"nodeType":"YulIf","src":"2178:112:27"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2321:3:27"},{"name":"dst","nodeType":"YulIdentifier","src":"2326:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2331:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2299:21:27"},"nodeType":"YulFunctionCall","src":"2299:39:27"},"nodeType":"YulExpressionStatement","src":"2299:39:27"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1991:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"1996:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"2004:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2012:5:27","type":""}],"src":"1923:421:27"},{"body":{"nodeType":"YulBlock","src":"2437:282:27","statements":[{"body":{"nodeType":"YulBlock","src":"2486:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2488:77:27"},"nodeType":"YulFunctionCall","src":"2488:79:27"},"nodeType":"YulExpressionStatement","src":"2488:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2465:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2473:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:27"},"nodeType":"YulFunctionCall","src":"2461:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"2480:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2457:3:27"},"nodeType":"YulFunctionCall","src":"2457:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2450:6:27"},"nodeType":"YulFunctionCall","src":"2450:35:27"},"nodeType":"YulIf","src":"2447:122:27"},{"nodeType":"YulVariableDeclaration","src":"2578:27:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2598:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2592:5:27"},"nodeType":"YulFunctionCall","src":"2592:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2582:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2614:99:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2686:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2694:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:27"},"nodeType":"YulFunctionCall","src":"2682:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"2701:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"2709:3:27"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2623:58:27"},"nodeType":"YulFunctionCall","src":"2623:90:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2614:5:27"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2415:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"2423:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2431:5:27","type":""}],"src":"2364:355:27"},{"body":{"nodeType":"YulBlock","src":"2839:739:27","statements":[{"body":{"nodeType":"YulBlock","src":"2885:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2887:77:27"},"nodeType":"YulFunctionCall","src":"2887:79:27"},"nodeType":"YulExpressionStatement","src":"2887:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2869:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2856:3:27"},"nodeType":"YulFunctionCall","src":"2856:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2881:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2852:3:27"},"nodeType":"YulFunctionCall","src":"2852:32:27"},"nodeType":"YulIf","src":"2849:119:27"},{"nodeType":"YulBlock","src":"2978:291:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2993:38:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3017:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3028:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3013:3:27"},"nodeType":"YulFunctionCall","src":"3013:17:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3007:5:27"},"nodeType":"YulFunctionCall","src":"3007:24:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2997:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3078:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3080:77:27"},"nodeType":"YulFunctionCall","src":"3080:79:27"},"nodeType":"YulExpressionStatement","src":"3080:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3050:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3058:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3047:2:27"},"nodeType":"YulFunctionCall","src":"3047:30:27"},"nodeType":"YulIf","src":"3044:117:27"},{"nodeType":"YulAssignment","src":"3175:84:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3231:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3242:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3227:3:27"},"nodeType":"YulFunctionCall","src":"3227:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3251:7:27"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3185:41:27"},"nodeType":"YulFunctionCall","src":"3185:74:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3175:6:27"}]}]},{"nodeType":"YulBlock","src":"3279:292:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3294:39:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3318:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3329:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3314:3:27"},"nodeType":"YulFunctionCall","src":"3314:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3308:5:27"},"nodeType":"YulFunctionCall","src":"3308:25:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3298:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3380:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3382:77:27"},"nodeType":"YulFunctionCall","src":"3382:79:27"},"nodeType":"YulExpressionStatement","src":"3382:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3352:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3360:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3349:2:27"},"nodeType":"YulFunctionCall","src":"3349:30:27"},"nodeType":"YulIf","src":"3346:117:27"},{"nodeType":"YulAssignment","src":"3477:84:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3533:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3544:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3529:3:27"},"nodeType":"YulFunctionCall","src":"3529:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3553:7:27"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3487:41:27"},"nodeType":"YulFunctionCall","src":"3487:74:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3477:6:27"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2801:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2812:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2824:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2832:6:27","type":""}],"src":"2725:853:27"},{"body":{"nodeType":"YulBlock","src":"3612:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3629:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3632:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3622:6:27"},"nodeType":"YulFunctionCall","src":"3622:88:27"},"nodeType":"YulExpressionStatement","src":"3622:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3726:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3729:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3719:6:27"},"nodeType":"YulFunctionCall","src":"3719:15:27"},"nodeType":"YulExpressionStatement","src":"3719:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3750:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3753:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3743:6:27"},"nodeType":"YulFunctionCall","src":"3743:15:27"},"nodeType":"YulExpressionStatement","src":"3743:15:27"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3584:180:27"},{"body":{"nodeType":"YulBlock","src":"3821:269:27","statements":[{"nodeType":"YulAssignment","src":"3831:22:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3845:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"3851:1:27","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3841:3:27"},"nodeType":"YulFunctionCall","src":"3841:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3831:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"3862:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3892:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"3898:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3888:3:27"},"nodeType":"YulFunctionCall","src":"3888:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3866:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3939:51:27","statements":[{"nodeType":"YulAssignment","src":"3953:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3967:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3975:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3963:3:27"},"nodeType":"YulFunctionCall","src":"3963:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3953:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3919:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3912:6:27"},"nodeType":"YulFunctionCall","src":"3912:26:27"},"nodeType":"YulIf","src":"3909:81:27"},{"body":{"nodeType":"YulBlock","src":"4042:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4056:16:27"},"nodeType":"YulFunctionCall","src":"4056:18:27"},"nodeType":"YulExpressionStatement","src":"4056:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4006:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4029:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4037:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4026:2:27"},"nodeType":"YulFunctionCall","src":"4026:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4003:2:27"},"nodeType":"YulFunctionCall","src":"4003:38:27"},"nodeType":"YulIf","src":"4000:84:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3805:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3814:6:27","type":""}],"src":"3770:320:27"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001617380380620016178339818101604052810190620000379190620002be565b81600390805190602001906200004f92919062000071565b5080600490805190602001906200006892919062000071565b505050620003a8565b8280546200007f9062000372565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200018a826200013f565b810181811067ffffffffffffffff82111715620001ac57620001ab62000150565b5b80604052505050565b6000620001c162000121565b9050620001cf82826200017f565b919050565b600067ffffffffffffffff821115620001f257620001f162000150565b5b620001fd826200013f565b9050602081019050919050565b60005b838110156200022a5780820151818401526020810190506200020d565b838111156200023a576000848401525b50505050565b6000620002576200025184620001d4565b620001b5565b9050828152602081018484840111156200027657620002756200013a565b5b620002838482856200020a565b509392505050565b600082601f830112620002a357620002a262000135565b5b8151620002b584826020860162000240565b91505092915050565b60008060408385031215620002d857620002d76200012b565b5b600083015167ffffffffffffffff811115620002f957620002f862000130565b5b62000307858286016200028b565b925050602083015167ffffffffffffffff8111156200032b576200032a62000130565b5b62000339858286016200028b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038b57607f821691505b60208210811415620003a257620003a162000343565b5b50919050565b61125f80620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b19565b60405180910390f35b6100e660048036038101906100e19190610bd4565b610308565b6040516100f39190610c2f565b60405180910390f35b61010461032b565b6040516101119190610c59565b60405180910390f35b610134600480360381019061012f9190610c74565b610335565b6040516101419190610c2f565b60405180910390f35b610152610364565b60405161015f9190610ce3565b60405180910390f35b610182600480360381019061017d9190610bd4565b61036d565b60405161018f9190610c2f565b60405180910390f35b6101b260048036038101906101ad9190610cfe565b6103a4565b6040516101bf9190610c59565b60405180910390f35b6101d06103ec565b6040516101dd9190610b19565b60405180910390f35b61020060048036038101906101fb9190610bd4565b61047e565b60405161020d9190610c2f565b60405180910390f35b610230600480360381019061022b9190610bd4565b6104f5565b60405161023d9190610c2f565b60405180910390f35b610260600480360381019061025b9190610d2b565b610518565b60405161026d9190610c59565b60405180910390f35b60606003805461028590610d9a565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d9a565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610dfb565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d9a565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d9a565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610ec3565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610f55565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610fe7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610c59565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190611053565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610865906110e5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590611177565b60405180910390fd5b6108e9838383610a76565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690611209565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a5d9190610c59565b60405180910390a3610a70848484610a7b565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610aba578082015181840152602081019050610a9f565b83811115610ac9576000848401525b50505050565b6000601f19601f8301169050919050565b6000610aeb82610a80565b610af58185610a8b565b9350610b05818560208601610a9c565b610b0e81610acf565b840191505092915050565b60006020820190508181036000830152610b338184610ae0565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6b82610b40565b9050919050565b610b7b81610b60565b8114610b8657600080fd5b50565b600081359050610b9881610b72565b92915050565b6000819050919050565b610bb181610b9e565b8114610bbc57600080fd5b50565b600081359050610bce81610ba8565b92915050565b60008060408385031215610beb57610bea610b3b565b5b6000610bf985828601610b89565b9250506020610c0a85828601610bbf565b9150509250929050565b60008115159050919050565b610c2981610c14565b82525050565b6000602082019050610c446000830184610c20565b92915050565b610c5381610b9e565b82525050565b6000602082019050610c6e6000830184610c4a565b92915050565b600080600060608486031215610c8d57610c8c610b3b565b5b6000610c9b86828701610b89565b9350506020610cac86828701610b89565b9250506040610cbd86828701610bbf565b9150509250925092565b600060ff82169050919050565b610cdd81610cc7565b82525050565b6000602082019050610cf86000830184610cd4565b92915050565b600060208284031215610d1457610d13610b3b565b5b6000610d2284828501610b89565b91505092915050565b60008060408385031215610d4257610d41610b3b565b5b6000610d5085828601610b89565b9250506020610d6185828601610b89565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610db257607f821691505b60208210811415610dc657610dc5610d6b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0682610b9e565b9150610e1183610b9e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e4657610e45610dcc565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610ead602583610a8b565b9150610eb882610e51565b604082019050919050565b60006020820190508181036000830152610edc81610ea0565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f3f602483610a8b565b9150610f4a82610ee3565b604082019050919050565b60006020820190508181036000830152610f6e81610f32565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fd1602283610a8b565b9150610fdc82610f75565b604082019050919050565b6000602082019050818103600083015261100081610fc4565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061103d601d83610a8b565b915061104882611007565b602082019050919050565b6000602082019050818103600083015261106c81611030565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110cf602583610a8b565b91506110da82611073565b604082019050919050565b600060208201905081810360008301526110fe816110c2565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611161602383610a8b565b915061116c82611105565b604082019050919050565b6000602082019050818103600083015261119081611154565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111f3602683610a8b565b91506111fe82611197565b604082019050919050565b60006020820190508181036000830152611222816111e6565b905091905056fea2646970667358221220b9b7d234f7ab4359952e2b9496d689a1d788ce8358d4d0d4ece25a09087f3d7464736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1617 CODESIZE SUB DUP1 PUSH3 0x1617 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2BE JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x18A DUP3 PUSH3 0x13F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1AC JUMPI PUSH3 0x1AB PUSH3 0x150 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C1 PUSH3 0x121 JUMP JUMPDEST SWAP1 POP PUSH3 0x1CF DUP3 DUP3 PUSH3 0x17F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1F2 JUMPI PUSH3 0x1F1 PUSH3 0x150 JUMP JUMPDEST JUMPDEST PUSH3 0x1FD DUP3 PUSH3 0x13F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x22A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x20D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x23A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x257 PUSH3 0x251 DUP5 PUSH3 0x1D4 JUMP JUMPDEST PUSH3 0x1B5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x276 JUMPI PUSH3 0x275 PUSH3 0x13A JUMP JUMPDEST JUMPDEST PUSH3 0x283 DUP5 DUP3 DUP6 PUSH3 0x20A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2A3 JUMPI PUSH3 0x2A2 PUSH3 0x135 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2B5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x240 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2D8 JUMPI PUSH3 0x2D7 PUSH3 0x12B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F9 JUMPI PUSH3 0x2F8 PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x307 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x32B JUMPI PUSH3 0x32A PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x339 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x38B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3A2 JUMPI PUSH3 0x3A1 PUSH3 0x343 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x125F DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC74 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0x1053 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA70 DUP5 DUP5 DUP5 PUSH2 0xA7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xABA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEB DUP3 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0xAF5 DUP2 DUP6 PUSH2 0xA8B JUMP JUMPDEST SWAP4 POP PUSH2 0xB05 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA9C JUMP JUMPDEST PUSH2 0xB0E DUP2 PUSH2 0xACF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB33 DUP2 DUP5 PUSH2 0xAE0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B DUP3 PUSH2 0xB40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7B DUP2 PUSH2 0xB60 JUMP JUMPDEST DUP2 EQ PUSH2 0xB86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB98 DUP2 PUSH2 0xB72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB1 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP2 EQ PUSH2 0xBBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBCE DUP2 PUSH2 0xBA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBEB JUMPI PUSH2 0xBEA PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBF9 DUP6 DUP3 DUP7 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC0A DUP6 DUP3 DUP7 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC29 DUP2 PUSH2 0xC14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC44 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC53 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC6E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC8D JUMPI PUSH2 0xC8C PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC9B DUP7 DUP3 DUP8 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCAC DUP7 DUP3 DUP8 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCBD DUP7 DUP3 DUP8 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCDD DUP2 PUSH2 0xCC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD14 JUMPI PUSH2 0xD13 PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD22 DUP5 DUP3 DUP6 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD42 JUMPI PUSH2 0xD41 PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD50 DUP6 DUP3 DUP7 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD61 DUP6 DUP3 DUP7 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDB2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xDC6 JUMPI PUSH2 0xDC5 PUSH2 0xD6B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE06 DUP3 PUSH2 0xB9E JUMP JUMPDEST SWAP2 POP PUSH2 0xE11 DUP4 PUSH2 0xB9E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xE46 JUMPI PUSH2 0xE45 PUSH2 0xDCC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAD PUSH1 0x25 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xEB8 DUP3 PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEDC DUP2 PUSH2 0xEA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3F PUSH1 0x24 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xF4A DUP3 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF6E DUP2 PUSH2 0xF32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD1 PUSH1 0x22 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xFDC DUP3 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1000 DUP2 PUSH2 0xFC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103D PUSH1 0x1D DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x1048 DUP3 PUSH2 0x1007 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x106C DUP2 PUSH2 0x1030 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10CF PUSH1 0x25 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x10DA DUP3 PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10FE DUP2 PUSH2 0x10C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1161 PUSH1 0x23 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x116C DUP3 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1190 DUP2 PUSH2 0x1154 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F3 PUSH1 0x26 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x11FE DUP3 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1222 DUP2 PUSH2 0x11E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0xB7 0xD2 CALLVALUE 0xF7 0xAB NUMBER MSIZE SWAP6 0x2E 0x2B SWAP5 SWAP7 0xD6 DUP10 LOG1 0xD7 DUP9 0xCE DUP4 PC 0xD4 0xD0 0xD4 0xEC 0xE2 GAS MULMOD ADDMOD PUSH32 0x3D7464736F6C6343000809003300000000000000000000000000000000000000 ","sourceMap":"1401:11610:3:-:0;;;1976:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2050:5;2042;:13;;;;;;;;;;;;:::i;:::-;;2075:7;2065;:17;;;;;;;;;;;;:::i;:::-;;1976:113;;1401:11610;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:27:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;1401:11610:3:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_884":{"entryPoint":2683,"id":884,"parameterSlots":3,"returnSlots":0},"@_approve_819":{"entryPoint":1447,"id":819,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_873":{"entryPoint":2678,"id":873,"parameterSlots":3,"returnSlots":0},"@_msgSender_3510":{"entryPoint":1439,"id":3510,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_862":{"entryPoint":1906,"id":862,"parameterSlots":3,"returnSlots":0},"@_transfer_645":{"entryPoint":2046,"id":645,"parameterSlots":3,"returnSlots":0},"@allowance_440":{"entryPoint":1304,"id":440,"parameterSlots":2,"returnSlots":1},"@approve_465":{"entryPoint":776,"id":465,"parameterSlots":2,"returnSlots":1},"@balanceOf_397":{"entryPoint":932,"id":397,"parameterSlots":1,"returnSlots":1},"@decimals_373":{"entryPoint":868,"id":373,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_568":{"entryPoint":1150,"id":568,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_527":{"entryPoint":877,"id":527,"parameterSlots":2,"returnSlots":1},"@name_353":{"entryPoint":630,"id":353,"parameterSlots":0,"returnSlots":1},"@symbol_363":{"entryPoint":1004,"id":363,"parameterSlots":0,"returnSlots":1},"@totalSupply_383":{"entryPoint":811,"id":383,"parameterSlots":0,"returnSlots":1},"@transferFrom_498":{"entryPoint":821,"id":498,"parameterSlots":3,"returnSlots":1},"@transfer_422":{"entryPoint":1269,"id":422,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2953,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3007,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3326,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3371,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3188,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3028,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3104,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2784,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4436,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":4036,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4144,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4582,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4290,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3890,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3744,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3146,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3284,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3119,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2841,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4471,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4071,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4179,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4617,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4325,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3925,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3779,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3161,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3299,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2688,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2699,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3579,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2912,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3092,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2880,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2974,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3271,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":2716,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3482,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3532,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3435,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2875,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2767,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4357,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3957,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4103,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4503,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4211,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3811,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3665,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2930,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2984,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13861:27","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:27","statements":[{"nodeType":"YulAssignment","src":"77:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:27"},"nodeType":"YulFunctionCall","src":"87:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:27"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:27","type":""}],"src":"7:99:27"},{"body":{"nodeType":"YulBlock","src":"208:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:27"},"nodeType":"YulFunctionCall","src":"218:19:27"},"nodeType":"YulExpressionStatement","src":"218:19:27"},{"nodeType":"YulAssignment","src":"246:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:27"},"nodeType":"YulFunctionCall","src":"261:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:27","type":""}],"src":"112:169:27"},{"body":{"nodeType":"YulBlock","src":"336:258:27","statements":[{"nodeType":"YulVariableDeclaration","src":"346:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"355:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"350:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"415:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"440:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"445:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"436:3:27"},"nodeType":"YulFunctionCall","src":"436:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"459:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"464:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"455:3:27"},"nodeType":"YulFunctionCall","src":"455:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"449:5:27"},"nodeType":"YulFunctionCall","src":"449:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"429:6:27"},"nodeType":"YulFunctionCall","src":"429:39:27"},"nodeType":"YulExpressionStatement","src":"429:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"376:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"379:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"373:2:27"},"nodeType":"YulFunctionCall","src":"373:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"387:19:27","statements":[{"nodeType":"YulAssignment","src":"389:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"398:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"401:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"394:3:27"},"nodeType":"YulFunctionCall","src":"394:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"369:3:27","statements":[]},"src":"365:113:27"},{"body":{"nodeType":"YulBlock","src":"512:76:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"562:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"567:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"558:3:27"},"nodeType":"YulFunctionCall","src":"558:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"576:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"551:6:27"},"nodeType":"YulFunctionCall","src":"551:27:27"},"nodeType":"YulExpressionStatement","src":"551:27:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"493:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"496:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"490:2:27"},"nodeType":"YulFunctionCall","src":"490:13:27"},"nodeType":"YulIf","src":"487:101:27"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"318:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"323:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"328:6:27","type":""}],"src":"287:307:27"},{"body":{"nodeType":"YulBlock","src":"648:54:27","statements":[{"nodeType":"YulAssignment","src":"658:38:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"683:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"672:3:27"},"nodeType":"YulFunctionCall","src":"672:14:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"692:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"688:3:27"},"nodeType":"YulFunctionCall","src":"688:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"668:3:27"},"nodeType":"YulFunctionCall","src":"668:28:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"658:6:27"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"631:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"641:6:27","type":""}],"src":"600:102:27"},{"body":{"nodeType":"YulBlock","src":"800:272:27","statements":[{"nodeType":"YulVariableDeclaration","src":"810:53:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"857:5:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"824:32:27"},"nodeType":"YulFunctionCall","src":"824:39:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"814:6:27","type":""}]},{"nodeType":"YulAssignment","src":"872:78:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"938:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"943:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"879:58:27"},"nodeType":"YulFunctionCall","src":"879:71:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"872:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"985:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"992:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"981:3:27"},"nodeType":"YulFunctionCall","src":"981:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"999:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"1004:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"959:21:27"},"nodeType":"YulFunctionCall","src":"959:52:27"},"nodeType":"YulExpressionStatement","src":"959:52:27"},{"nodeType":"YulAssignment","src":"1020:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1031:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1058:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1036:21:27"},"nodeType":"YulFunctionCall","src":"1036:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1027:3:27"},"nodeType":"YulFunctionCall","src":"1027:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1020:3:27"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"781:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"788:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"796:3:27","type":""}],"src":"708:364:27"},{"body":{"nodeType":"YulBlock","src":"1196:195:27","statements":[{"nodeType":"YulAssignment","src":"1206:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1218:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1229:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1214:3:27"},"nodeType":"YulFunctionCall","src":"1214:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1206:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1253:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1264:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1249:3:27"},"nodeType":"YulFunctionCall","src":"1249:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1272:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1278:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1268:3:27"},"nodeType":"YulFunctionCall","src":"1268:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1242:6:27"},"nodeType":"YulFunctionCall","src":"1242:47:27"},"nodeType":"YulExpressionStatement","src":"1242:47:27"},{"nodeType":"YulAssignment","src":"1298:86:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1370:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"1379:4:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1306:63:27"},"nodeType":"YulFunctionCall","src":"1306:78:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1298:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1168:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1180:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1191:4:27","type":""}],"src":"1078:313:27"},{"body":{"nodeType":"YulBlock","src":"1437:35:27","statements":[{"nodeType":"YulAssignment","src":"1447:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1463:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1457:5:27"},"nodeType":"YulFunctionCall","src":"1457:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1447:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1430:6:27","type":""}],"src":"1397:75:27"},{"body":{"nodeType":"YulBlock","src":"1567:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1584:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1587:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1577:6:27"},"nodeType":"YulFunctionCall","src":"1577:12:27"},"nodeType":"YulExpressionStatement","src":"1577:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1478:117:27"},{"body":{"nodeType":"YulBlock","src":"1690:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1707:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1710:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1700:6:27"},"nodeType":"YulFunctionCall","src":"1700:12:27"},"nodeType":"YulExpressionStatement","src":"1700:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1601:117:27"},{"body":{"nodeType":"YulBlock","src":"1769:81:27","statements":[{"nodeType":"YulAssignment","src":"1779:65:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1794:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"1801:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1790:3:27"},"nodeType":"YulFunctionCall","src":"1790:54:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1779:7:27"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1751:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1761:7:27","type":""}],"src":"1724:126:27"},{"body":{"nodeType":"YulBlock","src":"1901:51:27","statements":[{"nodeType":"YulAssignment","src":"1911:35:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1940:5:27"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1922:17:27"},"nodeType":"YulFunctionCall","src":"1922:24:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1911:7:27"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1883:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1893:7:27","type":""}],"src":"1856:96:27"},{"body":{"nodeType":"YulBlock","src":"2001:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"2058:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2067:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2070:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2060:6:27"},"nodeType":"YulFunctionCall","src":"2060:12:27"},"nodeType":"YulExpressionStatement","src":"2060:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2024:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2049:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2031:17:27"},"nodeType":"YulFunctionCall","src":"2031:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2021:2:27"},"nodeType":"YulFunctionCall","src":"2021:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2014:6:27"},"nodeType":"YulFunctionCall","src":"2014:43:27"},"nodeType":"YulIf","src":"2011:63:27"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1994:5:27","type":""}],"src":"1958:122:27"},{"body":{"nodeType":"YulBlock","src":"2138:87:27","statements":[{"nodeType":"YulAssignment","src":"2148:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2170:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2157:12:27"},"nodeType":"YulFunctionCall","src":"2157:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2148:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2213:5:27"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2186:26:27"},"nodeType":"YulFunctionCall","src":"2186:33:27"},"nodeType":"YulExpressionStatement","src":"2186:33:27"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2116:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"2124:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2132:5:27","type":""}],"src":"2086:139:27"},{"body":{"nodeType":"YulBlock","src":"2276:32:27","statements":[{"nodeType":"YulAssignment","src":"2286:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"2297:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2286:7:27"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2258:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2268:7:27","type":""}],"src":"2231:77:27"},{"body":{"nodeType":"YulBlock","src":"2357:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"2414:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2423:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2426:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2416:6:27"},"nodeType":"YulFunctionCall","src":"2416:12:27"},"nodeType":"YulExpressionStatement","src":"2416:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2380:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2405:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2387:17:27"},"nodeType":"YulFunctionCall","src":"2387:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2377:2:27"},"nodeType":"YulFunctionCall","src":"2377:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2370:6:27"},"nodeType":"YulFunctionCall","src":"2370:43:27"},"nodeType":"YulIf","src":"2367:63:27"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2350:5:27","type":""}],"src":"2314:122:27"},{"body":{"nodeType":"YulBlock","src":"2494:87:27","statements":[{"nodeType":"YulAssignment","src":"2504:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2526:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2513:12:27"},"nodeType":"YulFunctionCall","src":"2513:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2504:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2569:5:27"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2542:26:27"},"nodeType":"YulFunctionCall","src":"2542:33:27"},"nodeType":"YulExpressionStatement","src":"2542:33:27"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2472:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"2480:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2488:5:27","type":""}],"src":"2442:139:27"},{"body":{"nodeType":"YulBlock","src":"2670:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"2716:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2718:77:27"},"nodeType":"YulFunctionCall","src":"2718:79:27"},"nodeType":"YulExpressionStatement","src":"2718:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2691:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2700:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2687:3:27"},"nodeType":"YulFunctionCall","src":"2687:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2712:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2683:3:27"},"nodeType":"YulFunctionCall","src":"2683:32:27"},"nodeType":"YulIf","src":"2680:119:27"},{"nodeType":"YulBlock","src":"2809:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2824:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2838:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2828:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2853:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"2899:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:27"},"nodeType":"YulFunctionCall","src":"2884:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2908:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2863:20:27"},"nodeType":"YulFunctionCall","src":"2863:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2853:6:27"}]}]},{"nodeType":"YulBlock","src":"2936:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2951:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2965:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2955:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2981:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3016:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3027:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3012:3:27"},"nodeType":"YulFunctionCall","src":"3012:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3036:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2991:20:27"},"nodeType":"YulFunctionCall","src":"2991:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2981:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2632:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2643:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2655:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2663:6:27","type":""}],"src":"2587:474:27"},{"body":{"nodeType":"YulBlock","src":"3109:48:27","statements":[{"nodeType":"YulAssignment","src":"3119:32:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3144:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3137:6:27"},"nodeType":"YulFunctionCall","src":"3137:13:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3130:6:27"},"nodeType":"YulFunctionCall","src":"3130:21:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3119:7:27"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3091:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3101:7:27","type":""}],"src":"3067:90:27"},{"body":{"nodeType":"YulBlock","src":"3222:50:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3239:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3259:5:27"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3244:14:27"},"nodeType":"YulFunctionCall","src":"3244:21:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3232:6:27"},"nodeType":"YulFunctionCall","src":"3232:34:27"},"nodeType":"YulExpressionStatement","src":"3232:34:27"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3210:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3217:3:27","type":""}],"src":"3163:109:27"},{"body":{"nodeType":"YulBlock","src":"3370:118:27","statements":[{"nodeType":"YulAssignment","src":"3380:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3392:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3403:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3388:3:27"},"nodeType":"YulFunctionCall","src":"3388:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3380:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3454:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3467:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3478:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3463:3:27"},"nodeType":"YulFunctionCall","src":"3463:17:27"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3416:37:27"},"nodeType":"YulFunctionCall","src":"3416:65:27"},"nodeType":"YulExpressionStatement","src":"3416:65:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3342:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3354:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3365:4:27","type":""}],"src":"3278:210:27"},{"body":{"nodeType":"YulBlock","src":"3559:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3576:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3599:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3581:17:27"},"nodeType":"YulFunctionCall","src":"3581:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3569:6:27"},"nodeType":"YulFunctionCall","src":"3569:37:27"},"nodeType":"YulExpressionStatement","src":"3569:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3547:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3554:3:27","type":""}],"src":"3494:118:27"},{"body":{"nodeType":"YulBlock","src":"3716:124:27","statements":[{"nodeType":"YulAssignment","src":"3726:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3738:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3749:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3734:3:27"},"nodeType":"YulFunctionCall","src":"3734:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3726:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3806:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3819:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3830:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3815:3:27"},"nodeType":"YulFunctionCall","src":"3815:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3762:43:27"},"nodeType":"YulFunctionCall","src":"3762:71:27"},"nodeType":"YulExpressionStatement","src":"3762:71:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3688:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3700:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3711:4:27","type":""}],"src":"3618:222:27"},{"body":{"nodeType":"YulBlock","src":"3946:519:27","statements":[{"body":{"nodeType":"YulBlock","src":"3992:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3994:77:27"},"nodeType":"YulFunctionCall","src":"3994:79:27"},"nodeType":"YulExpressionStatement","src":"3994:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3967:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3976:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3963:3:27"},"nodeType":"YulFunctionCall","src":"3963:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"3988:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3959:3:27"},"nodeType":"YulFunctionCall","src":"3959:32:27"},"nodeType":"YulIf","src":"3956:119:27"},{"nodeType":"YulBlock","src":"4085:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4100:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4114:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4104:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4129:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4164:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4175:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4160:3:27"},"nodeType":"YulFunctionCall","src":"4160:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4184:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4139:20:27"},"nodeType":"YulFunctionCall","src":"4139:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4129:6:27"}]}]},{"nodeType":"YulBlock","src":"4212:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4227:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4241:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4231:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4257:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4292:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4303:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4288:3:27"},"nodeType":"YulFunctionCall","src":"4288:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4312:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4267:20:27"},"nodeType":"YulFunctionCall","src":"4267:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4257:6:27"}]}]},{"nodeType":"YulBlock","src":"4340:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4355:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4369:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4359:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4385:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4420:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4431:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4416:3:27"},"nodeType":"YulFunctionCall","src":"4416:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4440:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4395:20:27"},"nodeType":"YulFunctionCall","src":"4395:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4385:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3900:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3911:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3923:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3931:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3939:6:27","type":""}],"src":"3846:619:27"},{"body":{"nodeType":"YulBlock","src":"4514:43:27","statements":[{"nodeType":"YulAssignment","src":"4524:27:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4539:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"4546:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4535:3:27"},"nodeType":"YulFunctionCall","src":"4535:16:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4524:7:27"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4496:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4506:7:27","type":""}],"src":"4471:86:27"},{"body":{"nodeType":"YulBlock","src":"4624:51:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4641:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4662:5:27"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4646:15:27"},"nodeType":"YulFunctionCall","src":"4646:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4634:6:27"},"nodeType":"YulFunctionCall","src":"4634:35:27"},"nodeType":"YulExpressionStatement","src":"4634:35:27"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4612:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4619:3:27","type":""}],"src":"4563:112:27"},{"body":{"nodeType":"YulBlock","src":"4775:120:27","statements":[{"nodeType":"YulAssignment","src":"4785:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4797:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4808:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4793:3:27"},"nodeType":"YulFunctionCall","src":"4793:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4785:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4861:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4874:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4885:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4870:3:27"},"nodeType":"YulFunctionCall","src":"4870:17:27"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4821:39:27"},"nodeType":"YulFunctionCall","src":"4821:67:27"},"nodeType":"YulExpressionStatement","src":"4821:67:27"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4747:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4759:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4770:4:27","type":""}],"src":"4681:214:27"},{"body":{"nodeType":"YulBlock","src":"4967:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"5013:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5015:77:27"},"nodeType":"YulFunctionCall","src":"5015:79:27"},"nodeType":"YulExpressionStatement","src":"5015:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4988:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"4997:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4984:3:27"},"nodeType":"YulFunctionCall","src":"4984:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5009:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4980:3:27"},"nodeType":"YulFunctionCall","src":"4980:32:27"},"nodeType":"YulIf","src":"4977:119:27"},{"nodeType":"YulBlock","src":"5106:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5121:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5135:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5125:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5150:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5185:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5196:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5181:3:27"},"nodeType":"YulFunctionCall","src":"5181:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5205:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5160:20:27"},"nodeType":"YulFunctionCall","src":"5160:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5150:6:27"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4937:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4948:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4960:6:27","type":""}],"src":"4901:329:27"},{"body":{"nodeType":"YulBlock","src":"5319:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"5365:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5367:77:27"},"nodeType":"YulFunctionCall","src":"5367:79:27"},"nodeType":"YulExpressionStatement","src":"5367:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5340:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5349:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5336:3:27"},"nodeType":"YulFunctionCall","src":"5336:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5361:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5332:3:27"},"nodeType":"YulFunctionCall","src":"5332:32:27"},"nodeType":"YulIf","src":"5329:119:27"},{"nodeType":"YulBlock","src":"5458:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5473:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5487:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5477:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5502:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5537:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5548:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5533:3:27"},"nodeType":"YulFunctionCall","src":"5533:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5557:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5512:20:27"},"nodeType":"YulFunctionCall","src":"5512:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5502:6:27"}]}]},{"nodeType":"YulBlock","src":"5585:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5600:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5614:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5604:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5630:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5665:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5676:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5661:3:27"},"nodeType":"YulFunctionCall","src":"5661:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5685:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5640:20:27"},"nodeType":"YulFunctionCall","src":"5640:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5630:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5281:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5292:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5304:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5312:6:27","type":""}],"src":"5236:474:27"},{"body":{"nodeType":"YulBlock","src":"5744:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5761:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5764:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5754:6:27"},"nodeType":"YulFunctionCall","src":"5754:88:27"},"nodeType":"YulExpressionStatement","src":"5754:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5858:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5861:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5851:6:27"},"nodeType":"YulFunctionCall","src":"5851:15:27"},"nodeType":"YulExpressionStatement","src":"5851:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5882:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5885:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5875:6:27"},"nodeType":"YulFunctionCall","src":"5875:15:27"},"nodeType":"YulExpressionStatement","src":"5875:15:27"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5716:180:27"},{"body":{"nodeType":"YulBlock","src":"5953:269:27","statements":[{"nodeType":"YulAssignment","src":"5963:22:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5977:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"5983:1:27","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5973:3:27"},"nodeType":"YulFunctionCall","src":"5973:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5963:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"5994:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6024:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"6030:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6020:3:27"},"nodeType":"YulFunctionCall","src":"6020:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5998:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"6071:51:27","statements":[{"nodeType":"YulAssignment","src":"6085:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6099:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6107:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6095:3:27"},"nodeType":"YulFunctionCall","src":"6095:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6085:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6051:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6044:6:27"},"nodeType":"YulFunctionCall","src":"6044:26:27"},"nodeType":"YulIf","src":"6041:81:27"},{"body":{"nodeType":"YulBlock","src":"6174:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6188:16:27"},"nodeType":"YulFunctionCall","src":"6188:18:27"},"nodeType":"YulExpressionStatement","src":"6188:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6138:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6161:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6169:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6158:2:27"},"nodeType":"YulFunctionCall","src":"6158:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6135:2:27"},"nodeType":"YulFunctionCall","src":"6135:38:27"},"nodeType":"YulIf","src":"6132:84:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5937:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5946:6:27","type":""}],"src":"5902:320:27"},{"body":{"nodeType":"YulBlock","src":"6256:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6273:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6276:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6266:6:27"},"nodeType":"YulFunctionCall","src":"6266:88:27"},"nodeType":"YulExpressionStatement","src":"6266:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6370:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6373:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6363:6:27"},"nodeType":"YulFunctionCall","src":"6363:15:27"},"nodeType":"YulExpressionStatement","src":"6363:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6394:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6397:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6387:6:27"},"nodeType":"YulFunctionCall","src":"6387:15:27"},"nodeType":"YulExpressionStatement","src":"6387:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6228:180:27"},{"body":{"nodeType":"YulBlock","src":"6458:261:27","statements":[{"nodeType":"YulAssignment","src":"6468:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6491:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6473:17:27"},"nodeType":"YulFunctionCall","src":"6473:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6468:1:27"}]},{"nodeType":"YulAssignment","src":"6502:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6525:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6507:17:27"},"nodeType":"YulFunctionCall","src":"6507:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6502:1:27"}]},{"body":{"nodeType":"YulBlock","src":"6665:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6667:16:27"},"nodeType":"YulFunctionCall","src":"6667:18:27"},"nodeType":"YulExpressionStatement","src":"6667:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6586:1:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6593:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"6661:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6589:3:27"},"nodeType":"YulFunctionCall","src":"6589:74:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6583:2:27"},"nodeType":"YulFunctionCall","src":"6583:81:27"},"nodeType":"YulIf","src":"6580:107:27"},{"nodeType":"YulAssignment","src":"6697:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6708:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"6711:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6704:3:27"},"nodeType":"YulFunctionCall","src":"6704:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6697:3:27"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6445:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"6448:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6454:3:27","type":""}],"src":"6414:305:27"},{"body":{"nodeType":"YulBlock","src":"6831:118:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6853:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6861:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6849:3:27"},"nodeType":"YulFunctionCall","src":"6849:14:27"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6865:34:27","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6842:6:27"},"nodeType":"YulFunctionCall","src":"6842:58:27"},"nodeType":"YulExpressionStatement","src":"6842:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6921:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6929:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6917:3:27"},"nodeType":"YulFunctionCall","src":"6917:15:27"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6934:7:27","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6910:6:27"},"nodeType":"YulFunctionCall","src":"6910:32:27"},"nodeType":"YulExpressionStatement","src":"6910:32:27"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6823:6:27","type":""}],"src":"6725:224:27"},{"body":{"nodeType":"YulBlock","src":"7101:220:27","statements":[{"nodeType":"YulAssignment","src":"7111:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7177:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"7182:2:27","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7118:58:27"},"nodeType":"YulFunctionCall","src":"7118:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7111:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7283:3:27"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7194:88:27"},"nodeType":"YulFunctionCall","src":"7194:93:27"},"nodeType":"YulExpressionStatement","src":"7194:93:27"},{"nodeType":"YulAssignment","src":"7296:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7307:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"7312:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7303:3:27"},"nodeType":"YulFunctionCall","src":"7303:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7296:3:27"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7089:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7097:3:27","type":""}],"src":"6955:366:27"},{"body":{"nodeType":"YulBlock","src":"7498:248:27","statements":[{"nodeType":"YulAssignment","src":"7508:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7520:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7531:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7516:3:27"},"nodeType":"YulFunctionCall","src":"7516:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7508:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7555:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7566:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7551:3:27"},"nodeType":"YulFunctionCall","src":"7551:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7574:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"7580:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7570:3:27"},"nodeType":"YulFunctionCall","src":"7570:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7544:6:27"},"nodeType":"YulFunctionCall","src":"7544:47:27"},"nodeType":"YulExpressionStatement","src":"7544:47:27"},{"nodeType":"YulAssignment","src":"7600:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7734:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7608:124:27"},"nodeType":"YulFunctionCall","src":"7608:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7600:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7478:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7493:4:27","type":""}],"src":"7327:419:27"},{"body":{"nodeType":"YulBlock","src":"7858:117:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7880:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7888:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7876:3:27"},"nodeType":"YulFunctionCall","src":"7876:14:27"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7892:34:27","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7869:6:27"},"nodeType":"YulFunctionCall","src":"7869:58:27"},"nodeType":"YulExpressionStatement","src":"7869:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7948:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7956:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7944:3:27"},"nodeType":"YulFunctionCall","src":"7944:15:27"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7961:6:27","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7937:6:27"},"nodeType":"YulFunctionCall","src":"7937:31:27"},"nodeType":"YulExpressionStatement","src":"7937:31:27"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7850:6:27","type":""}],"src":"7752:223:27"},{"body":{"nodeType":"YulBlock","src":"8127:220:27","statements":[{"nodeType":"YulAssignment","src":"8137:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8203:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"8208:2:27","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8144:58:27"},"nodeType":"YulFunctionCall","src":"8144:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8137:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8309:3:27"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8220:88:27"},"nodeType":"YulFunctionCall","src":"8220:93:27"},"nodeType":"YulExpressionStatement","src":"8220:93:27"},{"nodeType":"YulAssignment","src":"8322:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8333:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"8338:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8329:3:27"},"nodeType":"YulFunctionCall","src":"8329:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8322:3:27"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8115:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8123:3:27","type":""}],"src":"7981:366:27"},{"body":{"nodeType":"YulBlock","src":"8524:248:27","statements":[{"nodeType":"YulAssignment","src":"8534:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8546:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8557:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8542:3:27"},"nodeType":"YulFunctionCall","src":"8542:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8534:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8581:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8592:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8577:3:27"},"nodeType":"YulFunctionCall","src":"8577:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8600:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"8606:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8596:3:27"},"nodeType":"YulFunctionCall","src":"8596:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8570:6:27"},"nodeType":"YulFunctionCall","src":"8570:47:27"},"nodeType":"YulExpressionStatement","src":"8570:47:27"},{"nodeType":"YulAssignment","src":"8626:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8760:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8634:124:27"},"nodeType":"YulFunctionCall","src":"8634:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8626:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8504:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8519:4:27","type":""}],"src":"8353:419:27"},{"body":{"nodeType":"YulBlock","src":"8884:115:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8906:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8914:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8902:3:27"},"nodeType":"YulFunctionCall","src":"8902:14:27"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8918:34:27","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8895:6:27"},"nodeType":"YulFunctionCall","src":"8895:58:27"},"nodeType":"YulExpressionStatement","src":"8895:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8974:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8982:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8970:3:27"},"nodeType":"YulFunctionCall","src":"8970:15:27"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8987:4:27","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8963:6:27"},"nodeType":"YulFunctionCall","src":"8963:29:27"},"nodeType":"YulExpressionStatement","src":"8963:29:27"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8876:6:27","type":""}],"src":"8778:221:27"},{"body":{"nodeType":"YulBlock","src":"9151:220:27","statements":[{"nodeType":"YulAssignment","src":"9161:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9227:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9232:2:27","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9168:58:27"},"nodeType":"YulFunctionCall","src":"9168:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9161:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9333:3:27"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9244:88:27"},"nodeType":"YulFunctionCall","src":"9244:93:27"},"nodeType":"YulExpressionStatement","src":"9244:93:27"},{"nodeType":"YulAssignment","src":"9346:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9357:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9362:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9353:3:27"},"nodeType":"YulFunctionCall","src":"9353:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9346:3:27"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9139:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9147:3:27","type":""}],"src":"9005:366:27"},{"body":{"nodeType":"YulBlock","src":"9548:248:27","statements":[{"nodeType":"YulAssignment","src":"9558:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9570:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9581:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9566:3:27"},"nodeType":"YulFunctionCall","src":"9566:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9558:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9605:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9616:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9601:3:27"},"nodeType":"YulFunctionCall","src":"9601:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9624:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"9630:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9620:3:27"},"nodeType":"YulFunctionCall","src":"9620:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9594:6:27"},"nodeType":"YulFunctionCall","src":"9594:47:27"},"nodeType":"YulExpressionStatement","src":"9594:47:27"},{"nodeType":"YulAssignment","src":"9650:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9784:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9658:124:27"},"nodeType":"YulFunctionCall","src":"9658:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9650:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9528:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9543:4:27","type":""}],"src":"9377:419:27"},{"body":{"nodeType":"YulBlock","src":"9908:73:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9930:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"9938:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9926:3:27"},"nodeType":"YulFunctionCall","src":"9926:14:27"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9942:31:27","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9919:6:27"},"nodeType":"YulFunctionCall","src":"9919:55:27"},"nodeType":"YulExpressionStatement","src":"9919:55:27"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9900:6:27","type":""}],"src":"9802:179:27"},{"body":{"nodeType":"YulBlock","src":"10133:220:27","statements":[{"nodeType":"YulAssignment","src":"10143:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10209:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"10214:2:27","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10150:58:27"},"nodeType":"YulFunctionCall","src":"10150:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10143:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10315:3:27"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10226:88:27"},"nodeType":"YulFunctionCall","src":"10226:93:27"},"nodeType":"YulExpressionStatement","src":"10226:93:27"},{"nodeType":"YulAssignment","src":"10328:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10339:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"10344:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10335:3:27"},"nodeType":"YulFunctionCall","src":"10335:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10328:3:27"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10121:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10129:3:27","type":""}],"src":"9987:366:27"},{"body":{"nodeType":"YulBlock","src":"10530:248:27","statements":[{"nodeType":"YulAssignment","src":"10540:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10552:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10563:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10548:3:27"},"nodeType":"YulFunctionCall","src":"10548:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10540:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10587:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10598:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10583:3:27"},"nodeType":"YulFunctionCall","src":"10583:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10606:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"10612:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10602:3:27"},"nodeType":"YulFunctionCall","src":"10602:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10576:6:27"},"nodeType":"YulFunctionCall","src":"10576:47:27"},"nodeType":"YulExpressionStatement","src":"10576:47:27"},{"nodeType":"YulAssignment","src":"10632:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10766:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10640:124:27"},"nodeType":"YulFunctionCall","src":"10640:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10632:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10510:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10525:4:27","type":""}],"src":"10359:419:27"},{"body":{"nodeType":"YulBlock","src":"10890:118:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10912:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"10920:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10908:3:27"},"nodeType":"YulFunctionCall","src":"10908:14:27"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10924:34:27","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10901:6:27"},"nodeType":"YulFunctionCall","src":"10901:58:27"},"nodeType":"YulExpressionStatement","src":"10901:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10980:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"10988:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10976:3:27"},"nodeType":"YulFunctionCall","src":"10976:15:27"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10993:7:27","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10969:6:27"},"nodeType":"YulFunctionCall","src":"10969:32:27"},"nodeType":"YulExpressionStatement","src":"10969:32:27"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10882:6:27","type":""}],"src":"10784:224:27"},{"body":{"nodeType":"YulBlock","src":"11160:220:27","statements":[{"nodeType":"YulAssignment","src":"11170:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11236:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"11241:2:27","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11177:58:27"},"nodeType":"YulFunctionCall","src":"11177:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11170:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11342:3:27"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11253:88:27"},"nodeType":"YulFunctionCall","src":"11253:93:27"},"nodeType":"YulExpressionStatement","src":"11253:93:27"},{"nodeType":"YulAssignment","src":"11355:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11366:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"11371:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11362:3:27"},"nodeType":"YulFunctionCall","src":"11362:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11355:3:27"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11148:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11156:3:27","type":""}],"src":"11014:366:27"},{"body":{"nodeType":"YulBlock","src":"11557:248:27","statements":[{"nodeType":"YulAssignment","src":"11567:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11579:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11590:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11575:3:27"},"nodeType":"YulFunctionCall","src":"11575:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11567:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11614:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11625:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11610:3:27"},"nodeType":"YulFunctionCall","src":"11610:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11633:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"11639:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11629:3:27"},"nodeType":"YulFunctionCall","src":"11629:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11603:6:27"},"nodeType":"YulFunctionCall","src":"11603:47:27"},"nodeType":"YulExpressionStatement","src":"11603:47:27"},{"nodeType":"YulAssignment","src":"11659:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11793:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11667:124:27"},"nodeType":"YulFunctionCall","src":"11667:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11659:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11537:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11552:4:27","type":""}],"src":"11386:419:27"},{"body":{"nodeType":"YulBlock","src":"11917:116:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11939:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"11947:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11935:3:27"},"nodeType":"YulFunctionCall","src":"11935:14:27"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11951:34:27","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11928:6:27"},"nodeType":"YulFunctionCall","src":"11928:58:27"},"nodeType":"YulExpressionStatement","src":"11928:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12007:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"12015:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12003:3:27"},"nodeType":"YulFunctionCall","src":"12003:15:27"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"12020:5:27","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11996:6:27"},"nodeType":"YulFunctionCall","src":"11996:30:27"},"nodeType":"YulExpressionStatement","src":"11996:30:27"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11909:6:27","type":""}],"src":"11811:222:27"},{"body":{"nodeType":"YulBlock","src":"12185:220:27","statements":[{"nodeType":"YulAssignment","src":"12195:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12261:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12266:2:27","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12202:58:27"},"nodeType":"YulFunctionCall","src":"12202:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12195:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12367:3:27"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12278:88:27"},"nodeType":"YulFunctionCall","src":"12278:93:27"},"nodeType":"YulExpressionStatement","src":"12278:93:27"},{"nodeType":"YulAssignment","src":"12380:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12391:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12396:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12387:3:27"},"nodeType":"YulFunctionCall","src":"12387:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12380:3:27"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12173:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12181:3:27","type":""}],"src":"12039:366:27"},{"body":{"nodeType":"YulBlock","src":"12582:248:27","statements":[{"nodeType":"YulAssignment","src":"12592:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12604:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12615:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12600:3:27"},"nodeType":"YulFunctionCall","src":"12600:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12592:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12639:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12650:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12635:3:27"},"nodeType":"YulFunctionCall","src":"12635:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12658:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"12664:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12654:3:27"},"nodeType":"YulFunctionCall","src":"12654:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12628:6:27"},"nodeType":"YulFunctionCall","src":"12628:47:27"},"nodeType":"YulExpressionStatement","src":"12628:47:27"},{"nodeType":"YulAssignment","src":"12684:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12818:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12692:124:27"},"nodeType":"YulFunctionCall","src":"12692:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12684:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12562:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12577:4:27","type":""}],"src":"12411:419:27"},{"body":{"nodeType":"YulBlock","src":"12942:119:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12964:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"12972:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12960:3:27"},"nodeType":"YulFunctionCall","src":"12960:14:27"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12976:34:27","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12953:6:27"},"nodeType":"YulFunctionCall","src":"12953:58:27"},"nodeType":"YulExpressionStatement","src":"12953:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13032:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"13040:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13028:3:27"},"nodeType":"YulFunctionCall","src":"13028:15:27"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"13045:8:27","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13021:6:27"},"nodeType":"YulFunctionCall","src":"13021:33:27"},"nodeType":"YulExpressionStatement","src":"13021:33:27"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12934:6:27","type":""}],"src":"12836:225:27"},{"body":{"nodeType":"YulBlock","src":"13213:220:27","statements":[{"nodeType":"YulAssignment","src":"13223:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13289:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"13294:2:27","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13230:58:27"},"nodeType":"YulFunctionCall","src":"13230:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13223:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13395:3:27"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13306:88:27"},"nodeType":"YulFunctionCall","src":"13306:93:27"},"nodeType":"YulExpressionStatement","src":"13306:93:27"},{"nodeType":"YulAssignment","src":"13408:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13419:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"13424:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13415:3:27"},"nodeType":"YulFunctionCall","src":"13415:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13408:3:27"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13201:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13209:3:27","type":""}],"src":"13067:366:27"},{"body":{"nodeType":"YulBlock","src":"13610:248:27","statements":[{"nodeType":"YulAssignment","src":"13620:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13632:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13643:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13628:3:27"},"nodeType":"YulFunctionCall","src":"13628:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13620:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13667:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13678:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13663:3:27"},"nodeType":"YulFunctionCall","src":"13663:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13686:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"13692:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13682:3:27"},"nodeType":"YulFunctionCall","src":"13682:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13656:6:27"},"nodeType":"YulFunctionCall","src":"13656:47:27"},"nodeType":"YulExpressionStatement","src":"13656:47:27"},{"nodeType":"YulAssignment","src":"13712:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13846:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13720:124:27"},"nodeType":"YulFunctionCall","src":"13720:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13712:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13590:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13605:4:27","type":""}],"src":"13439:419:27"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b19565b60405180910390f35b6100e660048036038101906100e19190610bd4565b610308565b6040516100f39190610c2f565b60405180910390f35b61010461032b565b6040516101119190610c59565b60405180910390f35b610134600480360381019061012f9190610c74565b610335565b6040516101419190610c2f565b60405180910390f35b610152610364565b60405161015f9190610ce3565b60405180910390f35b610182600480360381019061017d9190610bd4565b61036d565b60405161018f9190610c2f565b60405180910390f35b6101b260048036038101906101ad9190610cfe565b6103a4565b6040516101bf9190610c59565b60405180910390f35b6101d06103ec565b6040516101dd9190610b19565b60405180910390f35b61020060048036038101906101fb9190610bd4565b61047e565b60405161020d9190610c2f565b60405180910390f35b610230600480360381019061022b9190610bd4565b6104f5565b60405161023d9190610c2f565b60405180910390f35b610260600480360381019061025b9190610d2b565b610518565b60405161026d9190610c59565b60405180910390f35b60606003805461028590610d9a565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d9a565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610dfb565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d9a565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d9a565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610ec3565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610f55565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610fe7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610c59565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190611053565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610865906110e5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590611177565b60405180910390fd5b6108e9838383610a76565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690611209565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a5d9190610c59565b60405180910390a3610a70848484610a7b565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610aba578082015181840152602081019050610a9f565b83811115610ac9576000848401525b50505050565b6000601f19601f8301169050919050565b6000610aeb82610a80565b610af58185610a8b565b9350610b05818560208601610a9c565b610b0e81610acf565b840191505092915050565b60006020820190508181036000830152610b338184610ae0565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6b82610b40565b9050919050565b610b7b81610b60565b8114610b8657600080fd5b50565b600081359050610b9881610b72565b92915050565b6000819050919050565b610bb181610b9e565b8114610bbc57600080fd5b50565b600081359050610bce81610ba8565b92915050565b60008060408385031215610beb57610bea610b3b565b5b6000610bf985828601610b89565b9250506020610c0a85828601610bbf565b9150509250929050565b60008115159050919050565b610c2981610c14565b82525050565b6000602082019050610c446000830184610c20565b92915050565b610c5381610b9e565b82525050565b6000602082019050610c6e6000830184610c4a565b92915050565b600080600060608486031215610c8d57610c8c610b3b565b5b6000610c9b86828701610b89565b9350506020610cac86828701610b89565b9250506040610cbd86828701610bbf565b9150509250925092565b600060ff82169050919050565b610cdd81610cc7565b82525050565b6000602082019050610cf86000830184610cd4565b92915050565b600060208284031215610d1457610d13610b3b565b5b6000610d2284828501610b89565b91505092915050565b60008060408385031215610d4257610d41610b3b565b5b6000610d5085828601610b89565b9250506020610d6185828601610b89565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610db257607f821691505b60208210811415610dc657610dc5610d6b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0682610b9e565b9150610e1183610b9e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e4657610e45610dcc565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610ead602583610a8b565b9150610eb882610e51565b604082019050919050565b60006020820190508181036000830152610edc81610ea0565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f3f602483610a8b565b9150610f4a82610ee3565b604082019050919050565b60006020820190508181036000830152610f6e81610f32565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fd1602283610a8b565b9150610fdc82610f75565b604082019050919050565b6000602082019050818103600083015261100081610fc4565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061103d601d83610a8b565b915061104882611007565b602082019050919050565b6000602082019050818103600083015261106c81611030565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110cf602583610a8b565b91506110da82611073565b604082019050919050565b600060208201905081810360008301526110fe816110c2565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611161602383610a8b565b915061116c82611105565b604082019050919050565b6000602082019050818103600083015261119081611154565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111f3602683610a8b565b91506111fe82611197565b604082019050919050565b60006020820190508181036000830152611222816111e6565b905091905056fea2646970667358221220b9b7d234f7ab4359952e2b9496d689a1d788ce8358d4d0d4ece25a09087f3d7464736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC74 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0x1053 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA70 DUP5 DUP5 DUP5 PUSH2 0xA7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xABA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEB DUP3 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0xAF5 DUP2 DUP6 PUSH2 0xA8B JUMP JUMPDEST SWAP4 POP PUSH2 0xB05 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA9C JUMP JUMPDEST PUSH2 0xB0E DUP2 PUSH2 0xACF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB33 DUP2 DUP5 PUSH2 0xAE0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B DUP3 PUSH2 0xB40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7B DUP2 PUSH2 0xB60 JUMP JUMPDEST DUP2 EQ PUSH2 0xB86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB98 DUP2 PUSH2 0xB72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB1 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP2 EQ PUSH2 0xBBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBCE DUP2 PUSH2 0xBA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBEB JUMPI PUSH2 0xBEA PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBF9 DUP6 DUP3 DUP7 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC0A DUP6 DUP3 DUP7 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC29 DUP2 PUSH2 0xC14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC44 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC53 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC6E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC8D JUMPI PUSH2 0xC8C PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC9B DUP7 DUP3 DUP8 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCAC DUP7 DUP3 DUP8 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCBD DUP7 DUP3 DUP8 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCDD DUP2 PUSH2 0xCC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD14 JUMPI PUSH2 0xD13 PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD22 DUP5 DUP3 DUP6 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD42 JUMPI PUSH2 0xD41 PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD50 DUP6 DUP3 DUP7 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD61 DUP6 DUP3 DUP7 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDB2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xDC6 JUMPI PUSH2 0xDC5 PUSH2 0xD6B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE06 DUP3 PUSH2 0xB9E JUMP JUMPDEST SWAP2 POP PUSH2 0xE11 DUP4 PUSH2 0xB9E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xE46 JUMPI PUSH2 0xE45 PUSH2 0xDCC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAD PUSH1 0x25 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xEB8 DUP3 PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEDC DUP2 PUSH2 0xEA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3F PUSH1 0x24 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xF4A DUP3 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF6E DUP2 PUSH2 0xF32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD1 PUSH1 0x22 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xFDC DUP3 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1000 DUP2 PUSH2 0xFC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103D PUSH1 0x1D DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x1048 DUP3 PUSH2 0x1007 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x106C DUP2 PUSH2 0x1030 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10CF PUSH1 0x25 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x10DA DUP3 PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10FE DUP2 PUSH2 0x10C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1161 PUSH1 0x23 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x116C DUP3 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1190 DUP2 PUSH2 0x1154 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F3 PUSH1 0x26 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x11FE DUP3 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1222 DUP2 PUSH2 0x11E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0xB7 0xD2 CALLVALUE 0xF7 0xAB NUMBER MSIZE SWAP6 0x2E 0x2B SWAP5 SWAP7 0xD6 DUP10 LOG1 0xD7 DUP9 0xCE DUP4 PC 0xD4 0xD0 0xD4 0xEC 0xE2 GAS MULMOD ADDMOD PUSH32 0x3D7464736F6C6343000809003300000000000000000000000000000000000000 ","sourceMap":"1401:11610:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5190:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3091:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5871:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3406:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6592:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3727:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2154:98;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;4530:13;4546:12;:10;:12::i;:::-;4530:28;;4568:32;4577:5;4584:7;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;:::o;3242:106::-;3303:7;3329:12;;3322:19;;3242:106;:::o;5190:286::-;5317:4;5333:15;5351:12;:10;:12::i;:::-;5333:30;;5373:38;5389:4;5395:7;5404:6;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;:::o;3091:91::-;3149:5;3173:2;3166:9;;3091:91;:::o;5871:234::-;5959:4;5975:13;5991:12;:10;:12::i;:::-;5975:28;;6013:64;6022:5;6029:7;6066:10;6038:25;6048:5;6055:7;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;:::-;6094:4;6087:11;;;5871:234;;;;:::o;3406:125::-;3480:7;3506:9;:18;3516:7;3506:18;;;;;;;;;;;;;;;;3499:25;;3406:125;;;:::o;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:102;:::o;6592:427::-;6685:4;6701:13;6717:12;:10;:12::i;:::-;6701:28;;6739:24;6766:25;6776:5;6783:7;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;7008:4;7001:11;;;;6592:427;;;;:::o;3727:189::-;3806:4;3822:13;3838:12;:10;:12::i;:::-;3822:28;;3860;3870:5;3877:2;3881:6;3860:9;:28::i;:::-;3905:4;3898:11;;;3727:189;;;;:::o;3974:149::-;4063:7;4089:11;:18;4101:5;4089:18;;;;;;;;;;;;;;;:27;4108:7;4089:27;;;;;;;;;;;;;;;;4082:34;;3974:149;;;;:::o;640:96:16:-;693:7;719:10;712:17;;640:96;:::o;10504:370:3:-;10652:1;10635:19;;:5;:19;;;;10627:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10732:1;10713:21;;:7;:21;;;;10705:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10814:6;10784:11;:18;10796:5;10784:18;;;;;;;;;;;;;;;:27;10803:7;10784:27;;;;;;;;;;;;;;;:36;;;;10851:7;10835:32;;10844:5;10835:32;;;10860:6;10835:32;;;;;;:::i;:::-;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;11371:17;11351:16;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11347:243;11275:321;11155:441;;;:::o;7473:818::-;7615:1;7599:18;;:4;:18;;;;7591:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7691:1;7677:16;;:2;:16;;;;7669:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;7793:19;7815:9;:15;7825:4;7815:15;;;;;;;;;;;;;;;;7793:37;;7863:6;7848:11;:21;;7840:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7978:6;7964:11;:20;7946:9;:15;7956:4;7946:15;;;;;;;;;;;;;;;:38;;;;8178:6;8161:9;:13;8171:2;8161:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8225:2;8210:26;;8219:4;8210:26;;;8229:6;8210:26;;;;;;:::i;:::-;;;;;;;;8247:37;8267:4;8273:2;8277:6;8247:19;:37::i;:::-;7581:710;7473:818;;;:::o;12180:121::-;;;;:::o;12889:120::-;;;;:::o;7:99:27:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:118::-;3581:24;3599:5;3581:24;:::i;:::-;3576:3;3569:37;3494:118;;:::o;3618:222::-;3711:4;3749:2;3738:9;3734:18;3726:26;;3762:71;3830:1;3819:9;3815:17;3806:6;3762:71;:::i;:::-;3618:222;;;;:::o;3846:619::-;3923:6;3931;3939;3988:2;3976:9;3967:7;3963:23;3959:32;3956:119;;;3994:79;;:::i;:::-;3956:119;4114:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;:::i;:::-;4129:63;;4085:117;4241:2;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4212:118;4369:2;4395:53;4440:7;4431:6;4420:9;4416:22;4395:53;:::i;:::-;4385:63;;4340:118;3846:619;;;;;:::o;4471:86::-;4506:7;4546:4;4539:5;4535:16;4524:27;;4471:86;;;:::o;4563:112::-;4646:22;4662:5;4646:22;:::i;:::-;4641:3;4634:35;4563:112;;:::o;4681:214::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4821:67;4885:1;4874:9;4870:17;4861:6;4821:67;:::i;:::-;4681:214;;;;:::o;4901:329::-;4960:6;5009:2;4997:9;4988:7;4984:23;4980:32;4977:119;;;5015:79;;:::i;:::-;4977:119;5135:1;5160:53;5205:7;5196:6;5185:9;5181:22;5160:53;:::i;:::-;5150:63;;5106:117;4901:329;;;;:::o;5236:474::-;5304:6;5312;5361:2;5349:9;5340:7;5336:23;5332:32;5329:119;;;5367:79;;:::i;:::-;5329:119;5487:1;5512:53;5557:7;5548:6;5537:9;5533:22;5512:53;:::i;:::-;5502:63;;5458:117;5614:2;5640:53;5685:7;5676:6;5665:9;5661:22;5640:53;:::i;:::-;5630:63;;5585:118;5236:474;;;;;:::o;5716:180::-;5764:77;5761:1;5754:88;5861:4;5858:1;5851:15;5885:4;5882:1;5875:15;5902:320;5946:6;5983:1;5977:4;5973:12;5963:22;;6030:1;6024:4;6020:12;6051:18;6041:81;;6107:4;6099:6;6095:17;6085:27;;6041:81;6169:2;6161:6;6158:14;6138:18;6135:38;6132:84;;;6188:18;;:::i;:::-;6132:84;5953:269;5902:320;;;:::o;6228:180::-;6276:77;6273:1;6266:88;6373:4;6370:1;6363:15;6397:4;6394:1;6387:15;6414:305;6454:3;6473:20;6491:1;6473:20;:::i;:::-;6468:25;;6507:20;6525:1;6507:20;:::i;:::-;6502:25;;6661:1;6593:66;6589:74;6586:1;6583:81;6580:107;;;6667:18;;:::i;:::-;6580:107;6711:1;6708;6704:9;6697:16;;6414:305;;;;:::o;6725:224::-;6865:34;6861:1;6853:6;6849:14;6842:58;6934:7;6929:2;6921:6;6917:15;6910:32;6725:224;:::o;6955:366::-;7097:3;7118:67;7182:2;7177:3;7118:67;:::i;:::-;7111:74;;7194:93;7283:3;7194:93;:::i;:::-;7312:2;7307:3;7303:12;7296:19;;6955:366;;;:::o;7327:419::-;7493:4;7531:2;7520:9;7516:18;7508:26;;7580:9;7574:4;7570:20;7566:1;7555:9;7551:17;7544:47;7608:131;7734:4;7608:131;:::i;:::-;7600:139;;7327:419;;;:::o;7752:223::-;7892:34;7888:1;7880:6;7876:14;7869:58;7961:6;7956:2;7948:6;7944:15;7937:31;7752:223;:::o;7981:366::-;8123:3;8144:67;8208:2;8203:3;8144:67;:::i;:::-;8137:74;;8220:93;8309:3;8220:93;:::i;:::-;8338:2;8333:3;8329:12;8322:19;;7981:366;;;:::o;8353:419::-;8519:4;8557:2;8546:9;8542:18;8534:26;;8606:9;8600:4;8596:20;8592:1;8581:9;8577:17;8570:47;8634:131;8760:4;8634:131;:::i;:::-;8626:139;;8353:419;;;:::o;8778:221::-;8918:34;8914:1;8906:6;8902:14;8895:58;8987:4;8982:2;8974:6;8970:15;8963:29;8778:221;:::o;9005:366::-;9147:3;9168:67;9232:2;9227:3;9168:67;:::i;:::-;9161:74;;9244:93;9333:3;9244:93;:::i;:::-;9362:2;9357:3;9353:12;9346:19;;9005:366;;;:::o;9377:419::-;9543:4;9581:2;9570:9;9566:18;9558:26;;9630:9;9624:4;9620:20;9616:1;9605:9;9601:17;9594:47;9658:131;9784:4;9658:131;:::i;:::-;9650:139;;9377:419;;;:::o;9802:179::-;9942:31;9938:1;9930:6;9926:14;9919:55;9802:179;:::o;9987:366::-;10129:3;10150:67;10214:2;10209:3;10150:67;:::i;:::-;10143:74;;10226:93;10315:3;10226:93;:::i;:::-;10344:2;10339:3;10335:12;10328:19;;9987:366;;;:::o;10359:419::-;10525:4;10563:2;10552:9;10548:18;10540:26;;10612:9;10606:4;10602:20;10598:1;10587:9;10583:17;10576:47;10640:131;10766:4;10640:131;:::i;:::-;10632:139;;10359:419;;;:::o;10784:224::-;10924:34;10920:1;10912:6;10908:14;10901:58;10993:7;10988:2;10980:6;10976:15;10969:32;10784:224;:::o;11014:366::-;11156:3;11177:67;11241:2;11236:3;11177:67;:::i;:::-;11170:74;;11253:93;11342:3;11253:93;:::i;:::-;11371:2;11366:3;11362:12;11355:19;;11014:366;;;:::o;11386:419::-;11552:4;11590:2;11579:9;11575:18;11567:26;;11639:9;11633:4;11629:20;11625:1;11614:9;11610:17;11603:47;11667:131;11793:4;11667:131;:::i;:::-;11659:139;;11386:419;;;:::o;11811:222::-;11951:34;11947:1;11939:6;11935:14;11928:58;12020:5;12015:2;12007:6;12003:15;11996:30;11811:222;:::o;12039:366::-;12181:3;12202:67;12266:2;12261:3;12202:67;:::i;:::-;12195:74;;12278:93;12367:3;12278:93;:::i;:::-;12396:2;12391:3;12387:12;12380:19;;12039:366;;;:::o;12411:419::-;12577:4;12615:2;12604:9;12600:18;12592:26;;12664:9;12658:4;12654:20;12650:1;12639:9;12635:17;12628:47;12692:131;12818:4;12692:131;:::i;:::-;12684:139;;12411:419;;;:::o;12836:225::-;12976:34;12972:1;12964:6;12960:14;12953:58;13045:8;13040:2;13032:6;13028:15;13021:33;12836:225;:::o;13067:366::-;13209:3;13230:67;13294:2;13289:3;13230:67;:::i;:::-;13223:74;;13306:93;13395:3;13306:93;:::i;:::-;13424:2;13419:3;13415:12;13408:19;;13067:366;;;:::o;13439:419::-;13605:4;13643:2;13632:9;13628:18;13620:26;;13692:9;13686:4;13682:20;13678:1;13667:9;13663:17;13656:47;13720:131;13846:4;13720:131;:::i;:::-;13712:139;;13439:419;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ERC20Votes":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20Votes.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's, and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1. NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting power can be queried through the public accessors {getVotes} and {getPastVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked. _Available since v4.2._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":\"ERC20Votes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x701d39aea4bce743cbc051a7f5ad0f27ee18f3eb38b5303e33b0eb7a54c0608d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e93c025465734c2adc943a0db1aa5d2e249e741f3ee28ed60eaf2944a080b693\",\"dweb:/ipfs/Qmc7tA4E2356bzms761sJYwRMh9JVtK8hG5hivHiPjL4pg\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0xd2dd6003a2dc02ab905fd405938322e510429d19ae6c07c2c683d70f13ab2f36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124567a127176d5c1dfc6776c0964b5e8c0ccfa87468b644f1175775f3c140c7\",\"dweb:/ipfs/QmYg33x4W2xC1frf1Btw2bAvs1zox4Eq7Eq9qMkj1FQKNV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"ERC20Permit":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"_PERMIT_TYPEHASH_DEPRECATED_SLOT\":{\"custom:oz-renamed-from\":\"_PERMIT_TYPEHASH\",\"details\":\"In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`. However, to ensure consistency with the upgradeable transpiler, we will continue to reserve a slot.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0xd2dd6003a2dc02ab905fd405938322e510429d19ae6c07c2c683d70f13ab2f36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124567a127176d5c1dfc6776c0964b5e8c0ccfa87468b644f1175775f3c140c7\",\"dweb:/ipfs/QmYg33x4W2xC1frf1Btw2bAvs1zox4Eq7Eq9qMkj1FQKNV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2000":{"entryPoint":null,"id":2000,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":576,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":702,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":437,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":289,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":468,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":522,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":383,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":835,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":336,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":309,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":314,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":304,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":299,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":319,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4093:27","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:27","statements":[{"nodeType":"YulAssignment","src":"57:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:27"},"nodeType":"YulFunctionCall","src":"67:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:27","type":""}],"src":"7:75:27"},{"body":{"nodeType":"YulBlock","src":"177:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:27"},"nodeType":"YulFunctionCall","src":"187:12:27"},"nodeType":"YulExpressionStatement","src":"187:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:27"},{"body":{"nodeType":"YulBlock","src":"300:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:27"},"nodeType":"YulFunctionCall","src":"310:12:27"},"nodeType":"YulExpressionStatement","src":"310:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:27"},{"body":{"nodeType":"YulBlock","src":"423:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:27"},"nodeType":"YulFunctionCall","src":"433:12:27"},"nodeType":"YulExpressionStatement","src":"433:12:27"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:27"},{"body":{"nodeType":"YulBlock","src":"546:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:27"},"nodeType":"YulFunctionCall","src":"556:12:27"},"nodeType":"YulExpressionStatement","src":"556:12:27"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:27"},{"body":{"nodeType":"YulBlock","src":"628:54:27","statements":[{"nodeType":"YulAssignment","src":"638:38:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:27"},"nodeType":"YulFunctionCall","src":"652:14:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:27"},"nodeType":"YulFunctionCall","src":"668:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:27"},"nodeType":"YulFunctionCall","src":"648:28:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:27"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:27","type":""}],"src":"580:102:27"},{"body":{"nodeType":"YulBlock","src":"716:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:27"},"nodeType":"YulFunctionCall","src":"726:88:27"},"nodeType":"YulExpressionStatement","src":"726:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:27"},"nodeType":"YulFunctionCall","src":"823:15:27"},"nodeType":"YulExpressionStatement","src":"823:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:27"},"nodeType":"YulFunctionCall","src":"847:15:27"},"nodeType":"YulExpressionStatement","src":"847:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:27"},{"body":{"nodeType":"YulBlock","src":"917:238:27","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:27"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:27"},"nodeType":"YulFunctionCall","src":"957:27:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:27"},"nodeType":"YulFunctionCall","src":"945:40:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:27"},"nodeType":"YulFunctionCall","src":"1098:18:27"},"nodeType":"YulExpressionStatement","src":"1098:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:27"},"nodeType":"YulFunctionCall","src":"1036:34:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:27"},"nodeType":"YulFunctionCall","src":"1072:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:27"},"nodeType":"YulFunctionCall","src":"1033:62:27"},"nodeType":"YulIf","src":"1030:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:27"},"nodeType":"YulFunctionCall","src":"1127:22:27"},"nodeType":"YulExpressionStatement","src":"1127:22:27"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:27","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:27","type":""}],"src":"874:281:27"},{"body":{"nodeType":"YulBlock","src":"1202:88:27","statements":[{"nodeType":"YulAssignment","src":"1212:30:27","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:27"},"nodeType":"YulFunctionCall","src":"1222:20:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:27"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:27"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:27"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:27"},"nodeType":"YulFunctionCall","src":"1251:33:27"},"nodeType":"YulExpressionStatement","src":"1251:33:27"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:27","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:27","type":""}],"src":"1161:129:27"},{"body":{"nodeType":"YulBlock","src":"1363:241:27","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:27"},"nodeType":"YulFunctionCall","src":"1470:18:27"},"nodeType":"YulExpressionStatement","src":"1470:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:27"},"nodeType":"YulFunctionCall","src":"1437:30:27"},"nodeType":"YulIf","src":"1434:56:27"},{"nodeType":"YulAssignment","src":"1500:37:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:27"},"nodeType":"YulFunctionCall","src":"1508:29:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:27"}]},{"nodeType":"YulAssignment","src":"1574:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:27"},"nodeType":"YulFunctionCall","src":"1582:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:27"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:27","type":""}],"src":"1296:308:27"},{"body":{"nodeType":"YulBlock","src":"1659:258:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1669:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1678:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1673:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1738:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1763:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"1768:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1759:3:27"},"nodeType":"YulFunctionCall","src":"1759:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1782:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"1787:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1778:3:27"},"nodeType":"YulFunctionCall","src":"1778:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1772:5:27"},"nodeType":"YulFunctionCall","src":"1772:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:27"},"nodeType":"YulFunctionCall","src":"1752:39:27"},"nodeType":"YulExpressionStatement","src":"1752:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1699:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"1702:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1696:2:27"},"nodeType":"YulFunctionCall","src":"1696:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1710:19:27","statements":[{"nodeType":"YulAssignment","src":"1712:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1721:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"1724:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1717:3:27"},"nodeType":"YulFunctionCall","src":"1717:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"1692:3:27","statements":[]},"src":"1688:113:27"},{"body":{"nodeType":"YulBlock","src":"1835:76:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1885:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1881:3:27"},"nodeType":"YulFunctionCall","src":"1881:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"1899:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1874:6:27"},"nodeType":"YulFunctionCall","src":"1874:27:27"},"nodeType":"YulExpressionStatement","src":"1874:27:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1816:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"1819:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1813:2:27"},"nodeType":"YulFunctionCall","src":"1813:13:27"},"nodeType":"YulIf","src":"1810:101:27"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1641:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1646:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"1651:6:27","type":""}],"src":"1610:307:27"},{"body":{"nodeType":"YulBlock","src":"2018:326:27","statements":[{"nodeType":"YulAssignment","src":"2028:75:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2095:6:27"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2053:41:27"},"nodeType":"YulFunctionCall","src":"2053:49:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2037:15:27"},"nodeType":"YulFunctionCall","src":"2037:66:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2028:5:27"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2119:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"2126:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2112:6:27"},"nodeType":"YulFunctionCall","src":"2112:21:27"},"nodeType":"YulExpressionStatement","src":"2112:21:27"},{"nodeType":"YulVariableDeclaration","src":"2142:27:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2157:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2164:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:27"},"nodeType":"YulFunctionCall","src":"2153:16:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2146:3:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2207:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2209:77:27"},"nodeType":"YulFunctionCall","src":"2209:79:27"},"nodeType":"YulExpressionStatement","src":"2209:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2188:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2193:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2184:3:27"},"nodeType":"YulFunctionCall","src":"2184:16:27"},{"name":"end","nodeType":"YulIdentifier","src":"2202:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2181:2:27"},"nodeType":"YulFunctionCall","src":"2181:25:27"},"nodeType":"YulIf","src":"2178:112:27"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2321:3:27"},{"name":"dst","nodeType":"YulIdentifier","src":"2326:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2331:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2299:21:27"},"nodeType":"YulFunctionCall","src":"2299:39:27"},"nodeType":"YulExpressionStatement","src":"2299:39:27"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1991:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"1996:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"2004:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2012:5:27","type":""}],"src":"1923:421:27"},{"body":{"nodeType":"YulBlock","src":"2437:282:27","statements":[{"body":{"nodeType":"YulBlock","src":"2486:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2488:77:27"},"nodeType":"YulFunctionCall","src":"2488:79:27"},"nodeType":"YulExpressionStatement","src":"2488:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2465:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2473:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:27"},"nodeType":"YulFunctionCall","src":"2461:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"2480:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2457:3:27"},"nodeType":"YulFunctionCall","src":"2457:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2450:6:27"},"nodeType":"YulFunctionCall","src":"2450:35:27"},"nodeType":"YulIf","src":"2447:122:27"},{"nodeType":"YulVariableDeclaration","src":"2578:27:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2598:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2592:5:27"},"nodeType":"YulFunctionCall","src":"2592:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2582:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2614:99:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2686:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2694:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:27"},"nodeType":"YulFunctionCall","src":"2682:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"2701:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"2709:3:27"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2623:58:27"},"nodeType":"YulFunctionCall","src":"2623:90:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2614:5:27"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2415:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"2423:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2431:5:27","type":""}],"src":"2364:355:27"},{"body":{"nodeType":"YulBlock","src":"2839:739:27","statements":[{"body":{"nodeType":"YulBlock","src":"2885:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2887:77:27"},"nodeType":"YulFunctionCall","src":"2887:79:27"},"nodeType":"YulExpressionStatement","src":"2887:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2869:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2856:3:27"},"nodeType":"YulFunctionCall","src":"2856:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2881:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2852:3:27"},"nodeType":"YulFunctionCall","src":"2852:32:27"},"nodeType":"YulIf","src":"2849:119:27"},{"nodeType":"YulBlock","src":"2978:291:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2993:38:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3017:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3028:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3013:3:27"},"nodeType":"YulFunctionCall","src":"3013:17:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3007:5:27"},"nodeType":"YulFunctionCall","src":"3007:24:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2997:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3078:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3080:77:27"},"nodeType":"YulFunctionCall","src":"3080:79:27"},"nodeType":"YulExpressionStatement","src":"3080:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3050:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3058:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3047:2:27"},"nodeType":"YulFunctionCall","src":"3047:30:27"},"nodeType":"YulIf","src":"3044:117:27"},{"nodeType":"YulAssignment","src":"3175:84:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3231:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3242:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3227:3:27"},"nodeType":"YulFunctionCall","src":"3227:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3251:7:27"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3185:41:27"},"nodeType":"YulFunctionCall","src":"3185:74:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3175:6:27"}]}]},{"nodeType":"YulBlock","src":"3279:292:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3294:39:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3318:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3329:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3314:3:27"},"nodeType":"YulFunctionCall","src":"3314:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3308:5:27"},"nodeType":"YulFunctionCall","src":"3308:25:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3298:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3380:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3382:77:27"},"nodeType":"YulFunctionCall","src":"3382:79:27"},"nodeType":"YulExpressionStatement","src":"3382:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3352:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3360:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3349:2:27"},"nodeType":"YulFunctionCall","src":"3349:30:27"},"nodeType":"YulIf","src":"3346:117:27"},{"nodeType":"YulAssignment","src":"3477:84:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3533:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3544:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3529:3:27"},"nodeType":"YulFunctionCall","src":"3529:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3553:7:27"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3487:41:27"},"nodeType":"YulFunctionCall","src":"3487:74:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3477:6:27"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2801:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2812:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2824:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2832:6:27","type":""}],"src":"2725:853:27"},{"body":{"nodeType":"YulBlock","src":"3612:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3629:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3632:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3622:6:27"},"nodeType":"YulFunctionCall","src":"3622:88:27"},"nodeType":"YulExpressionStatement","src":"3622:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3726:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3729:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3719:6:27"},"nodeType":"YulFunctionCall","src":"3719:15:27"},"nodeType":"YulExpressionStatement","src":"3719:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3750:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3753:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3743:6:27"},"nodeType":"YulFunctionCall","src":"3743:15:27"},"nodeType":"YulExpressionStatement","src":"3743:15:27"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3584:180:27"},{"body":{"nodeType":"YulBlock","src":"3821:269:27","statements":[{"nodeType":"YulAssignment","src":"3831:22:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3845:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"3851:1:27","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3841:3:27"},"nodeType":"YulFunctionCall","src":"3841:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3831:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"3862:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3892:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"3898:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3888:3:27"},"nodeType":"YulFunctionCall","src":"3888:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3866:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3939:51:27","statements":[{"nodeType":"YulAssignment","src":"3953:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3967:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3975:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3963:3:27"},"nodeType":"YulFunctionCall","src":"3963:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3953:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3919:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3912:6:27"},"nodeType":"YulFunctionCall","src":"3912:26:27"},"nodeType":"YulIf","src":"3909:81:27"},{"body":{"nodeType":"YulBlock","src":"4042:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4056:16:27"},"nodeType":"YulFunctionCall","src":"4056:18:27"},"nodeType":"YulExpressionStatement","src":"4056:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4006:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4029:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4037:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4026:2:27"},"nodeType":"YulFunctionCall","src":"4026:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4003:2:27"},"nodeType":"YulFunctionCall","src":"4003:38:27"},"nodeType":"YulIf","src":"4000:84:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3805:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3814:6:27","type":""}],"src":"3770:320:27"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620026da380380620026da8339818101604052810190620000379190620002be565b81600090805190602001906200004f92919062000071565b5080600190805190602001906200006892919062000071565b505050620003a8565b8280546200007f9062000372565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200018a826200013f565b810181811067ffffffffffffffff82111715620001ac57620001ab62000150565b5b80604052505050565b6000620001c162000121565b9050620001cf82826200017f565b919050565b600067ffffffffffffffff821115620001f257620001f162000150565b5b620001fd826200013f565b9050602081019050919050565b60005b838110156200022a5780820151818401526020810190506200020d565b838111156200023a576000848401525b50505050565b6000620002576200025184620001d4565b620001b5565b9050828152602081018484840111156200027657620002756200013a565b5b620002838482856200020a565b509392505050565b600082601f830112620002a357620002a262000135565b5b8151620002b584826020860162000240565b91505092915050565b60008060408385031215620002d857620002d76200012b565b5b600083015167ffffffffffffffff811115620002f957620002f862000130565b5b62000307858286016200028b565b925050602083015167ffffffffffffffff8111156200032b576200032a62000130565b5b62000339858286016200028b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038b57607f821691505b60208210811415620003a257620003a162000343565b5b50919050565b61232280620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611633565b6102bc565b6040516100fb919061167b565b60405180910390f35b61010c61039e565b604051610119919061172f565b60405180910390f35b61013c60048036038101906101379190611787565b610430565b60405161014991906117f5565b60405180910390f35b61016c6004803603810190610167919061183c565b610476565b005b6101886004803603810190610183919061187c565b61058e565b005b6101a4600480360381019061019f919061187c565b6105ee565b005b6101c060048036038101906101bb9190611787565b61060e565b6040516101cd91906117f5565b60405180910390f35b6101f060048036038101906101eb91906118cf565b610695565b6040516101fd919061190b565b60405180910390f35b61020e61074d565b60405161021b919061172f565b60405180910390f35b61023e60048036038101906102399190611952565b6107df565b005b61025a60048036038101906102559190611ac7565b6107f5565b005b61027660048036038101906102719190611787565b610857565b604051610283919061172f565b60405180910390f35b6102a660048036038101906102a19190611b4a565b6108bf565b6040516102b3919061167b565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610953565b5b9050919050565b6060600080546103ad90611bb9565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611bb9565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109bd565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611c5d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a08565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a08565b6108bf565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611cef565b60405180910390fd5b6105898383610a10565b505050565b61059f610599610a08565b82610ac9565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611d81565b60405180910390fd5b6105e9838383610b5e565b505050565b610609838383604051806020016040528060008152506107f5565b505050565b60008061061a83610e58565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611ded565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611e7f565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075c90611bb9565b80601f016020809104026020016040519081016040528092919081815260200182805461078890611bb9565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b6107f16107ea610a08565b8383610e95565b5050565b610806610800610a08565b83610ac9565b610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c90611d81565b60405180910390fd5b61085184848484611002565b50505050565b6060610862826109bd565b600061086c61105e565b9050600081511161088c57604051806020016040528060008152506108b7565b8061089684611075565b6040516020016108a7929190611edb565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c68161114d565b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611ded565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a838361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad58361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b175750610b1681856108bf565b5b80610b5557508373ffffffffffffffffffffffffffffffffffffffff16610b3d84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7e8261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611f71565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b90612003565b60405180910390fd5b610c51838383600161118e565b8273ffffffffffffffffffffffffffffffffffffffff16610c718261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe90611f71565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e5383838360016112b4565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb9061206f565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff5919061167b565b60405180910390a3505050565b61100d848484610b5e565b611019848484846112ba565b611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90612101565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161108484611451565b01905060008167ffffffffffffffff8111156110a3576110a261199c565b5b6040519080825280601f01601f1916602001820160405280156110d55781602001600182028036833780820191505090505b509050600082602001820190505b600115611142578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112c5761112b612121565b5b049450600085141561113d57611142565b6110e3565b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116f83610e58565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60018111156112ae57600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146112225780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461121a919061217f565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112ad5780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112a591906121b3565b925050819055505b5b50505050565b50505050565b60006112db8473ffffffffffffffffffffffffffffffffffffffff166115a4565b15611444578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611304610a08565b8786866040518563ffffffff1660e01b8152600401611326949392919061225e565b602060405180830381600087803b15801561134057600080fd5b505af192505050801561137157506040513d601f19601f8201168201806040525081019061136e91906122bf565b60015b6113f4573d80600081146113a1576040519150601f19603f3d011682016040523d82523d6000602084013e6113a6565b606091505b506000815114156113ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e390612101565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611449565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106114af577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816114a5576114a4612121565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106114ec576d04ee2d6d415b85acef810000000083816114e2576114e1612121565b5b0492506020810190505b662386f26fc10000831061151b57662386f26fc10000838161151157611510612121565b5b0492506010810190505b6305f5e1008310611544576305f5e100838161153a57611539612121565b5b0492506008810190505b612710831061156957612710838161155f5761155e612121565b5b0492506004810190505b6064831061158c576064838161158257611581612121565b5b0492506002810190505b600a831061159b576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611610816115db565b811461161b57600080fd5b50565b60008135905061162d81611607565b92915050565b600060208284031215611649576116486115d1565b5b60006116578482850161161e565b91505092915050565b60008115159050919050565b61167581611660565b82525050565b6000602082019050611690600083018461166c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116d05780820151818401526020810190506116b5565b838111156116df576000848401525b50505050565b6000601f19601f8301169050919050565b600061170182611696565b61170b81856116a1565b935061171b8185602086016116b2565b611724816116e5565b840191505092915050565b6000602082019050818103600083015261174981846116f6565b905092915050565b6000819050919050565b61176481611751565b811461176f57600080fd5b50565b6000813590506117818161175b565b92915050565b60006020828403121561179d5761179c6115d1565b5b60006117ab84828501611772565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117df826117b4565b9050919050565b6117ef816117d4565b82525050565b600060208201905061180a60008301846117e6565b92915050565b611819816117d4565b811461182457600080fd5b50565b60008135905061183681611810565b92915050565b60008060408385031215611853576118526115d1565b5b600061186185828601611827565b925050602061187285828601611772565b9150509250929050565b600080600060608486031215611895576118946115d1565b5b60006118a386828701611827565b93505060206118b486828701611827565b92505060406118c586828701611772565b9150509250925092565b6000602082840312156118e5576118e46115d1565b5b60006118f384828501611827565b91505092915050565b61190581611751565b82525050565b600060208201905061192060008301846118fc565b92915050565b61192f81611660565b811461193a57600080fd5b50565b60008135905061194c81611926565b92915050565b60008060408385031215611969576119686115d1565b5b600061197785828601611827565b92505060206119888582860161193d565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6119d4826116e5565b810181811067ffffffffffffffff821117156119f3576119f261199c565b5b80604052505050565b6000611a066115c7565b9050611a1282826119cb565b919050565b600067ffffffffffffffff821115611a3257611a3161199c565b5b611a3b826116e5565b9050602081019050919050565b82818337600083830152505050565b6000611a6a611a6584611a17565b6119fc565b905082815260208101848484011115611a8657611a85611997565b5b611a91848285611a48565b509392505050565b600082601f830112611aae57611aad611992565b5b8135611abe848260208601611a57565b91505092915050565b60008060008060808587031215611ae157611ae06115d1565b5b6000611aef87828801611827565b9450506020611b0087828801611827565b9350506040611b1187828801611772565b925050606085013567ffffffffffffffff811115611b3257611b316115d6565b5b611b3e87828801611a99565b91505092959194509250565b60008060408385031215611b6157611b606115d1565b5b6000611b6f85828601611827565b9250506020611b8085828601611827565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611bd157607f821691505b60208210811415611be557611be4611b8a565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611c476021836116a1565b9150611c5282611beb565b604082019050919050565b60006020820190508181036000830152611c7681611c3a565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611cd9603d836116a1565b9150611ce482611c7d565b604082019050919050565b60006020820190508181036000830152611d0881611ccc565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611d6b602d836116a1565b9150611d7682611d0f565b604082019050919050565b60006020820190508181036000830152611d9a81611d5e565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611dd76018836116a1565b9150611de282611da1565b602082019050919050565b60006020820190508181036000830152611e0681611dca565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611e696029836116a1565b9150611e7482611e0d565b604082019050919050565b60006020820190508181036000830152611e9881611e5c565b9050919050565b600081905092915050565b6000611eb582611696565b611ebf8185611e9f565b9350611ecf8185602086016116b2565b80840191505092915050565b6000611ee78285611eaa565b9150611ef38284611eaa565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611f5b6025836116a1565b9150611f6682611eff565b604082019050919050565b60006020820190508181036000830152611f8a81611f4e565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611fed6024836116a1565b9150611ff882611f91565b604082019050919050565b6000602082019050818103600083015261201c81611fe0565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b60006120596019836116a1565b915061206482612023565b602082019050919050565b600060208201905081810360008301526120888161204c565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b60006120eb6032836116a1565b91506120f68261208f565b604082019050919050565b6000602082019050818103600083015261211a816120de565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061218a82611751565b915061219583611751565b9250828210156121a8576121a7612150565b5b828203905092915050565b60006121be82611751565b91506121c983611751565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156121fe576121fd612150565b5b828201905092915050565b600081519050919050565b600082825260208201905092915050565b600061223082612209565b61223a8185612214565b935061224a8185602086016116b2565b612253816116e5565b840191505092915050565b600060808201905061227360008301876117e6565b61228060208301866117e6565b61228d60408301856118fc565b818103606083015261229f8184612225565b905095945050505050565b6000815190506122b981611607565b92915050565b6000602082840312156122d5576122d46115d1565b5b60006122e3848285016122aa565b9150509291505056fea2646970667358221220773aac1846fbb6554e39d2f4d3272c3082f1ea30229289fdb6a5f87ebcf98d7d64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x26DA CODESIZE SUB DUP1 PUSH3 0x26DA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2BE JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x18A DUP3 PUSH3 0x13F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1AC JUMPI PUSH3 0x1AB PUSH3 0x150 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C1 PUSH3 0x121 JUMP JUMPDEST SWAP1 POP PUSH3 0x1CF DUP3 DUP3 PUSH3 0x17F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1F2 JUMPI PUSH3 0x1F1 PUSH3 0x150 JUMP JUMPDEST JUMPDEST PUSH3 0x1FD DUP3 PUSH3 0x13F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x22A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x20D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x23A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x257 PUSH3 0x251 DUP5 PUSH3 0x1D4 JUMP JUMPDEST PUSH3 0x1B5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x276 JUMPI PUSH3 0x275 PUSH3 0x13A JUMP JUMPDEST JUMPDEST PUSH3 0x283 DUP5 DUP3 DUP6 PUSH3 0x20A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2A3 JUMPI PUSH3 0x2A2 PUSH3 0x135 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2B5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x240 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2D8 JUMPI PUSH3 0x2D7 PUSH3 0x12B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F9 JUMPI PUSH3 0x2F8 PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x307 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x32B JUMPI PUSH3 0x32A PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x339 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x38B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3A2 JUMPI PUSH3 0x3A1 PUSH3 0x343 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2322 DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x183C JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x187C JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x187C JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x18CF JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x190B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x953 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1CEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA10 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA08 JUMP JUMPDEST DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x61A DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1E7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0x7EA PUSH2 0xA08 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x806 PUSH2 0x800 PUSH2 0xA08 JUMP JUMPDEST DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x851 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x862 DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86C PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B7 JUMP JUMPDEST DUP1 PUSH2 0x896 DUP5 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A7 SWAP3 SWAP2 SWAP1 PUSH2 0x1EDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x114D JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA83 DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD5 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB17 JUMPI POP PUSH2 0xB16 DUP2 DUP6 PUSH2 0x8BF JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB55 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3D DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP1 PUSH2 0x2003 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC51 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x118E JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC71 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP1 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE53 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP1 PUSH2 0x206F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x100D DUP5 DUP5 DUP5 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x1019 DUP5 DUP5 DUP5 DUP5 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1084 DUP5 PUSH2 0x1451 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A2 PUSH2 0x199C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1142 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x112C JUMPI PUSH2 0x112B PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x113D JUMPI PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x116F DUP4 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12AE JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1222 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x121A SWAP2 SWAP1 PUSH2 0x217F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12AD JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12A5 SWAP2 SWAP1 PUSH2 0x21B3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12DB DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15A4 JUMP JUMPDEST ISZERO PUSH2 0x1444 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1304 PUSH2 0xA08 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1326 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x225E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1371 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x136E SWAP2 SWAP1 PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13F4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13A1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13A6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x13EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E3 SWAP1 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x14AF JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x14A5 JUMPI PUSH2 0x14A4 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x14EC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x14E2 JUMPI PUSH2 0x14E1 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x151B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1511 JUMPI PUSH2 0x1510 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1544 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x153A JUMPI PUSH2 0x1539 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1569 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x155F JUMPI PUSH2 0x155E PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x158C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1582 JUMPI PUSH2 0x1581 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x159B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1610 DUP2 PUSH2 0x15DB JUMP JUMPDEST DUP2 EQ PUSH2 0x161B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x162D DUP2 PUSH2 0x1607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1649 JUMPI PUSH2 0x1648 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1657 DUP5 DUP3 DUP6 ADD PUSH2 0x161E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1675 DUP2 PUSH2 0x1660 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1690 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x166C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16B5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16DF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1701 DUP3 PUSH2 0x1696 JUMP JUMPDEST PUSH2 0x170B DUP2 DUP6 PUSH2 0x16A1 JUMP JUMPDEST SWAP4 POP PUSH2 0x171B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16B2 JUMP JUMPDEST PUSH2 0x1724 DUP2 PUSH2 0x16E5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1749 DUP2 DUP5 PUSH2 0x16F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1764 DUP2 PUSH2 0x1751 JUMP JUMPDEST DUP2 EQ PUSH2 0x176F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1781 DUP2 PUSH2 0x175B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17AB DUP5 DUP3 DUP6 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DF DUP3 PUSH2 0x17B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17EF DUP2 PUSH2 0x17D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x180A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1819 DUP2 PUSH2 0x17D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1836 DUP2 PUSH2 0x1810 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1853 JUMPI PUSH2 0x1852 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1861 DUP6 DUP3 DUP7 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1872 DUP6 DUP3 DUP7 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1895 JUMPI PUSH2 0x1894 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18A3 DUP7 DUP3 DUP8 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18B4 DUP7 DUP3 DUP8 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18C5 DUP7 DUP3 DUP8 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18E5 JUMPI PUSH2 0x18E4 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18F3 DUP5 DUP3 DUP6 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1905 DUP2 PUSH2 0x1751 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1920 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x192F DUP2 PUSH2 0x1660 JUMP JUMPDEST DUP2 EQ PUSH2 0x193A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x194C DUP2 PUSH2 0x1926 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1969 JUMPI PUSH2 0x1968 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1977 DUP6 DUP3 DUP7 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1988 DUP6 DUP3 DUP7 ADD PUSH2 0x193D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x19D4 DUP3 PUSH2 0x16E5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x19F3 JUMPI PUSH2 0x19F2 PUSH2 0x199C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A06 PUSH2 0x15C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A12 DUP3 DUP3 PUSH2 0x19CB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A32 JUMPI PUSH2 0x1A31 PUSH2 0x199C JUMP JUMPDEST JUMPDEST PUSH2 0x1A3B DUP3 PUSH2 0x16E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6A PUSH2 0x1A65 DUP5 PUSH2 0x1A17 JUMP JUMPDEST PUSH2 0x19FC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A86 JUMPI PUSH2 0x1A85 PUSH2 0x1997 JUMP JUMPDEST JUMPDEST PUSH2 0x1A91 DUP5 DUP3 DUP6 PUSH2 0x1A48 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AAE JUMPI PUSH2 0x1AAD PUSH2 0x1992 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1ABE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1AE1 JUMPI PUSH2 0x1AE0 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AEF DUP8 DUP3 DUP9 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1B00 DUP8 DUP3 DUP9 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1B11 DUP8 DUP3 DUP9 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B32 JUMPI PUSH2 0x1B31 PUSH2 0x15D6 JUMP JUMPDEST JUMPDEST PUSH2 0x1B3E DUP8 DUP3 DUP9 ADD PUSH2 0x1A99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B61 JUMPI PUSH2 0x1B60 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B6F DUP6 DUP3 DUP7 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B80 DUP6 DUP3 DUP7 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1BD1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1BE5 JUMPI PUSH2 0x1BE4 PUSH2 0x1B8A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C47 PUSH1 0x21 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C52 DUP3 PUSH2 0x1BEB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C76 DUP2 PUSH2 0x1C3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD9 PUSH1 0x3D DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE4 DUP3 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D08 DUP2 PUSH2 0x1CCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6B PUSH1 0x2D DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D76 DUP3 PUSH2 0x1D0F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D9A DUP2 PUSH2 0x1D5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD7 PUSH1 0x18 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE2 DUP3 PUSH2 0x1DA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E06 DUP2 PUSH2 0x1DCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E69 PUSH1 0x29 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E74 DUP3 PUSH2 0x1E0D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E98 DUP2 PUSH2 0x1E5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB5 DUP3 PUSH2 0x1696 JUMP JUMPDEST PUSH2 0x1EBF DUP2 DUP6 PUSH2 0x1E9F JUMP JUMPDEST SWAP4 POP PUSH2 0x1ECF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16B2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE7 DUP3 DUP6 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF3 DUP3 DUP5 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F5B PUSH1 0x25 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F66 DUP3 PUSH2 0x1EFF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F8A DUP2 PUSH2 0x1F4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FED PUSH1 0x24 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF8 DUP3 PUSH2 0x1F91 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x201C DUP2 PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2059 PUSH1 0x19 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2064 DUP3 PUSH2 0x2023 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2088 DUP2 PUSH2 0x204C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EB PUSH1 0x32 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F6 DUP3 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x211A DUP2 PUSH2 0x20DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x218A DUP3 PUSH2 0x1751 JUMP JUMPDEST SWAP2 POP PUSH2 0x2195 DUP4 PUSH2 0x1751 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x21A8 JUMPI PUSH2 0x21A7 PUSH2 0x2150 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21BE DUP3 PUSH2 0x1751 JUMP JUMPDEST SWAP2 POP PUSH2 0x21C9 DUP4 PUSH2 0x1751 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x21FE JUMPI PUSH2 0x21FD PUSH2 0x2150 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2230 DUP3 PUSH2 0x2209 JUMP JUMPDEST PUSH2 0x223A DUP2 DUP6 PUSH2 0x2214 JUMP JUMPDEST SWAP4 POP PUSH2 0x224A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16B2 JUMP JUMPDEST PUSH2 0x2253 DUP2 PUSH2 0x16E5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2273 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x2280 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x228D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18FC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x229F DUP2 DUP5 PUSH2 0x2225 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22B9 DUP2 PUSH2 0x1607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22D5 JUMPI PUSH2 0x22D4 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22E3 DUP5 DUP3 DUP6 ADD PUSH2 0x22AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x3AAC1846FBB6554E39D2F4D3272C3082F1EA30229289FDB6 0xA5 0xF8 PUSH31 0xBCF98D7D64736F6C6343000809003300000000000000000000000000000000 ","sourceMap":"628:16327:10:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;628:16327;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:27:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;628:16327:10:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2881":{"entryPoint":4788,"id":2881,"parameterSlots":4,"returnSlots":0},"@_approve_2714":{"entryPoint":2576,"id":2714,"parameterSlots":2,"returnSlots":0},"@_baseURI_2151":{"entryPoint":4190,"id":2151,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_2868":{"entryPoint":4494,"id":2868,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_2822":{"entryPoint":4794,"id":2822,"parameterSlots":4,"returnSlots":1},"@_exists_2383":{"entryPoint":4429,"id":2383,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_2417":{"entryPoint":2761,"id":2417,"parameterSlots":2,"returnSlots":1},"@_msgSender_3510":{"entryPoint":2568,"id":3510,"parameterSlots":0,"returnSlots":1},"@_ownerOf_2365":{"entryPoint":3672,"id":2365,"parameterSlots":1,"returnSlots":1},"@_requireMinted_2760":{"entryPoint":2493,"id":2760,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_2352":{"entryPoint":4098,"id":2352,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_2746":{"entryPoint":3733,"id":2746,"parameterSlots":3,"returnSlots":0},"@_transfer_2690":{"entryPoint":2910,"id":2690,"parameterSlots":3,"returnSlots":0},"@approve_2194":{"entryPoint":1142,"id":2194,"parameterSlots":2,"returnSlots":0},"@balanceOf_2055":{"entryPoint":1685,"id":2055,"parameterSlots":1,"returnSlots":1},"@getApproved_2212":{"entryPoint":1072,"id":2212,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_2247":{"entryPoint":2239,"id":2247,"parameterSlots":2,"returnSlots":1},"@isContract_3186":{"entryPoint":5540,"id":3186,"parameterSlots":1,"returnSlots":1},"@log10_5022":{"entryPoint":5201,"id":5022,"parameterSlots":1,"returnSlots":1},"@name_2093":{"entryPoint":926,"id":2093,"parameterSlots":0,"returnSlots":1},"@ownerOf_2083":{"entryPoint":1550,"id":2083,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_2293":{"entryPoint":1518,"id":2293,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_2323":{"entryPoint":2037,"id":2323,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_2229":{"entryPoint":2015,"id":2229,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2031":{"entryPoint":700,"id":2031,"parameterSlots":1,"returnSlots":1},"@supportsInterface_4307":{"entryPoint":2387,"id":4307,"parameterSlots":1,"returnSlots":1},"@symbol_2103":{"entryPoint":1869,"id":2103,"parameterSlots":0,"returnSlots":1},"@toString_3652":{"entryPoint":4213,"id":3652,"parameterSlots":1,"returnSlots":1},"@tokenURI_2142":{"entryPoint":2135,"id":2142,"parameterSlots":1,"returnSlots":1},"@transferFrom_2274":{"entryPoint":1422,"id":2274,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6743,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6183,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":6461,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5662,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":8874,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6809,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6002,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6351,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6986,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6268,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":6855,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6482,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6204,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5683,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8895,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6023,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6118,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5740,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8741,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5878,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7850,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":7518,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":8414,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":8014,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":8160,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":8268,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":7772,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":7626,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":7226,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":7372,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6396,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7899,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6133,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8798,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5755,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5935,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7553,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8449,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8049,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8195,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8303,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7807,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7661,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7261,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7407,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6411,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6652,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5575,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":6679,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8713,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5782,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8724,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5793,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7839,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":8627,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":8575,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6100,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5728,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":5595,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6068,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5969,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":6728,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":5810,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7097,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6603,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":8528,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8481,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7050,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6556,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":6546,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":6551,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5590,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5585,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5861,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":7439,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":8335,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":7935,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":8081,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":8227,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":7693,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":7585,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":7147,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":7293,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6160,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6438,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":5639,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5979,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23861:27","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:27","statements":[{"nodeType":"YulAssignment","src":"57:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:27"},"nodeType":"YulFunctionCall","src":"67:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:27","type":""}],"src":"7:75:27"},{"body":{"nodeType":"YulBlock","src":"177:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:27"},"nodeType":"YulFunctionCall","src":"187:12:27"},"nodeType":"YulExpressionStatement","src":"187:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:27"},{"body":{"nodeType":"YulBlock","src":"300:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:27"},"nodeType":"YulFunctionCall","src":"310:12:27"},"nodeType":"YulExpressionStatement","src":"310:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:27"},{"body":{"nodeType":"YulBlock","src":"378:105:27","statements":[{"nodeType":"YulAssignment","src":"388:89:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:27","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:27"},"nodeType":"YulFunctionCall","src":"399:78:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:27"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:27","type":""}],"src":"334:149:27"},{"body":{"nodeType":"YulBlock","src":"531:78:27","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:27"},"nodeType":"YulFunctionCall","src":"589:12:27"},"nodeType":"YulExpressionStatement","src":"589:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:27"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:27"},"nodeType":"YulFunctionCall","src":"561:23:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:27"},"nodeType":"YulFunctionCall","src":"551:34:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:27"},"nodeType":"YulFunctionCall","src":"544:42:27"},"nodeType":"YulIf","src":"541:62:27"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:27","type":""}],"src":"489:120:27"},{"body":{"nodeType":"YulBlock","src":"666:86:27","statements":[{"nodeType":"YulAssignment","src":"676:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:27"},"nodeType":"YulFunctionCall","src":"685:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:27"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:27"},"nodeType":"YulFunctionCall","src":"714:32:27"},"nodeType":"YulExpressionStatement","src":"714:32:27"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:27","type":""}],"src":"615:137:27"},{"body":{"nodeType":"YulBlock","src":"823:262:27","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:27"},"nodeType":"YulFunctionCall","src":"871:79:27"},"nodeType":"YulExpressionStatement","src":"871:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:27"},"nodeType":"YulFunctionCall","src":"840:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:27"},"nodeType":"YulFunctionCall","src":"836:32:27"},"nodeType":"YulIf","src":"833:119:27"},{"nodeType":"YulBlock","src":"962:116:27","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:27","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:27"},"nodeType":"YulFunctionCall","src":"1036:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:27"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:27"},"nodeType":"YulFunctionCall","src":"1016:52:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:27","type":""}],"src":"758:327:27"},{"body":{"nodeType":"YulBlock","src":"1133:48:27","statements":[{"nodeType":"YulAssignment","src":"1143:32:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:27"},"nodeType":"YulFunctionCall","src":"1161:13:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:27"},"nodeType":"YulFunctionCall","src":"1154:21:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:27"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:27","type":""}],"src":"1091:90:27"},{"body":{"nodeType":"YulBlock","src":"1246:50:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:27"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:27"},"nodeType":"YulFunctionCall","src":"1268:21:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:27"},"nodeType":"YulFunctionCall","src":"1256:34:27"},"nodeType":"YulExpressionStatement","src":"1256:34:27"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:27","type":""}],"src":"1187:109:27"},{"body":{"nodeType":"YulBlock","src":"1394:118:27","statements":[{"nodeType":"YulAssignment","src":"1404:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:27"},"nodeType":"YulFunctionCall","src":"1412:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:27"},"nodeType":"YulFunctionCall","src":"1487:17:27"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:27"},"nodeType":"YulFunctionCall","src":"1440:65:27"},"nodeType":"YulExpressionStatement","src":"1440:65:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:27","type":""}],"src":"1302:210:27"},{"body":{"nodeType":"YulBlock","src":"1577:40:27","statements":[{"nodeType":"YulAssignment","src":"1588:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:27"},"nodeType":"YulFunctionCall","src":"1598:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:27"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:27","type":""}],"src":"1518:99:27"},{"body":{"nodeType":"YulBlock","src":"1719:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:27"},"nodeType":"YulFunctionCall","src":"1729:19:27"},"nodeType":"YulExpressionStatement","src":"1729:19:27"},{"nodeType":"YulAssignment","src":"1757:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:27"},"nodeType":"YulFunctionCall","src":"1772:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:27","type":""}],"src":"1623:169:27"},{"body":{"nodeType":"YulBlock","src":"1847:258:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1861:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1951:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"1956:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:27"},"nodeType":"YulFunctionCall","src":"1947:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1970:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"1975:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:27"},"nodeType":"YulFunctionCall","src":"1966:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:27"},"nodeType":"YulFunctionCall","src":"1960:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:27"},"nodeType":"YulFunctionCall","src":"1940:39:27"},"nodeType":"YulExpressionStatement","src":"1940:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1887:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1884:2:27"},"nodeType":"YulFunctionCall","src":"1884:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1898:19:27","statements":[{"nodeType":"YulAssignment","src":"1900:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1909:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:27"},"nodeType":"YulFunctionCall","src":"1905:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"1880:3:27","statements":[]},"src":"1876:113:27"},{"body":{"nodeType":"YulBlock","src":"2023:76:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2073:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:27"},"nodeType":"YulFunctionCall","src":"2069:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:27"},"nodeType":"YulFunctionCall","src":"2062:27:27"},"nodeType":"YulExpressionStatement","src":"2062:27:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2004:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"2007:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2001:2:27"},"nodeType":"YulFunctionCall","src":"2001:13:27"},"nodeType":"YulIf","src":"1998:101:27"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1829:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1834:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"1839:6:27","type":""}],"src":"1798:307:27"},{"body":{"nodeType":"YulBlock","src":"2159:54:27","statements":[{"nodeType":"YulAssignment","src":"2169:38:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2187:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2194:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:27"},"nodeType":"YulFunctionCall","src":"2183:14:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2203:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2199:3:27"},"nodeType":"YulFunctionCall","src":"2199:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2179:3:27"},"nodeType":"YulFunctionCall","src":"2179:28:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2169:6:27"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2142:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2152:6:27","type":""}],"src":"2111:102:27"},{"body":{"nodeType":"YulBlock","src":"2311:272:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2321:53:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2335:32:27"},"nodeType":"YulFunctionCall","src":"2335:39:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2325:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2383:78:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2454:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2390:58:27"},"nodeType":"YulFunctionCall","src":"2390:71:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2496:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2503:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:27"},"nodeType":"YulFunctionCall","src":"2492:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2515:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2470:21:27"},"nodeType":"YulFunctionCall","src":"2470:52:27"},"nodeType":"YulExpressionStatement","src":"2470:52:27"},{"nodeType":"YulAssignment","src":"2531:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2547:21:27"},"nodeType":"YulFunctionCall","src":"2547:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:27"},"nodeType":"YulFunctionCall","src":"2538:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2531:3:27"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2292:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2299:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2307:3:27","type":""}],"src":"2219:364:27"},{"body":{"nodeType":"YulBlock","src":"2707:195:27","statements":[{"nodeType":"YulAssignment","src":"2717:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:27"},"nodeType":"YulFunctionCall","src":"2725:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:27"},"nodeType":"YulFunctionCall","src":"2760:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2783:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2779:3:27"},"nodeType":"YulFunctionCall","src":"2779:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:27"},"nodeType":"YulFunctionCall","src":"2753:47:27"},"nodeType":"YulExpressionStatement","src":"2753:47:27"},{"nodeType":"YulAssignment","src":"2809:86:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2881:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"2890:4:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2817:63:27"},"nodeType":"YulFunctionCall","src":"2817:78:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2679:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2691:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2702:4:27","type":""}],"src":"2589:313:27"},{"body":{"nodeType":"YulBlock","src":"2953:32:27","statements":[{"nodeType":"YulAssignment","src":"2963:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"2974:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2963:7:27"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2935:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2945:7:27","type":""}],"src":"2908:77:27"},{"body":{"nodeType":"YulBlock","src":"3034:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"3091:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3100:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3093:6:27"},"nodeType":"YulFunctionCall","src":"3093:12:27"},"nodeType":"YulExpressionStatement","src":"3093:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3057:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3082:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3064:17:27"},"nodeType":"YulFunctionCall","src":"3064:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3054:2:27"},"nodeType":"YulFunctionCall","src":"3054:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:27"},"nodeType":"YulFunctionCall","src":"3047:43:27"},"nodeType":"YulIf","src":"3044:63:27"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3027:5:27","type":""}],"src":"2991:122:27"},{"body":{"nodeType":"YulBlock","src":"3171:87:27","statements":[{"nodeType":"YulAssignment","src":"3181:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3190:12:27"},"nodeType":"YulFunctionCall","src":"3190:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3246:5:27"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3219:26:27"},"nodeType":"YulFunctionCall","src":"3219:33:27"},"nodeType":"YulExpressionStatement","src":"3219:33:27"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3149:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"3157:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3165:5:27","type":""}],"src":"3119:139:27"},{"body":{"nodeType":"YulBlock","src":"3330:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"3376:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3378:77:27"},"nodeType":"YulFunctionCall","src":"3378:79:27"},"nodeType":"YulExpressionStatement","src":"3378:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3351:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3347:3:27"},"nodeType":"YulFunctionCall","src":"3347:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"3372:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3343:3:27"},"nodeType":"YulFunctionCall","src":"3343:32:27"},"nodeType":"YulIf","src":"3340:119:27"},{"nodeType":"YulBlock","src":"3469:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3498:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:27","type":""}]},{"nodeType":"YulAssignment","src":"3513:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3559:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:27"},"nodeType":"YulFunctionCall","src":"3544:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3568:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3523:20:27"},"nodeType":"YulFunctionCall","src":"3523:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:27"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3300:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3311:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3323:6:27","type":""}],"src":"3264:329:27"},{"body":{"nodeType":"YulBlock","src":"3644:81:27","statements":[{"nodeType":"YulAssignment","src":"3654:65:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3669:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"3676:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3665:3:27"},"nodeType":"YulFunctionCall","src":"3665:54:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3654:7:27"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3626:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3636:7:27","type":""}],"src":"3599:126:27"},{"body":{"nodeType":"YulBlock","src":"3776:51:27","statements":[{"nodeType":"YulAssignment","src":"3786:35:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:27"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3797:17:27"},"nodeType":"YulFunctionCall","src":"3797:24:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3786:7:27"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3758:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3768:7:27","type":""}],"src":"3731:96:27"},{"body":{"nodeType":"YulBlock","src":"3898:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3915:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3920:17:27"},"nodeType":"YulFunctionCall","src":"3920:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3908:6:27"},"nodeType":"YulFunctionCall","src":"3908:37:27"},"nodeType":"YulExpressionStatement","src":"3908:37:27"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3886:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3893:3:27","type":""}],"src":"3833:118:27"},{"body":{"nodeType":"YulBlock","src":"4055:124:27","statements":[{"nodeType":"YulAssignment","src":"4065:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4088:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:27"},"nodeType":"YulFunctionCall","src":"4073:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4065:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4145:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4169:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:27"},"nodeType":"YulFunctionCall","src":"4154:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4101:43:27"},"nodeType":"YulFunctionCall","src":"4101:71:27"},"nodeType":"YulExpressionStatement","src":"4101:71:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4027:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4039:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4050:4:27","type":""}],"src":"3957:222:27"},{"body":{"nodeType":"YulBlock","src":"4228:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"4285:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4294:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4297:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4287:6:27"},"nodeType":"YulFunctionCall","src":"4287:12:27"},"nodeType":"YulExpressionStatement","src":"4287:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4251:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4276:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4258:17:27"},"nodeType":"YulFunctionCall","src":"4258:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4248:2:27"},"nodeType":"YulFunctionCall","src":"4248:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4241:6:27"},"nodeType":"YulFunctionCall","src":"4241:43:27"},"nodeType":"YulIf","src":"4238:63:27"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4221:5:27","type":""}],"src":"4185:122:27"},{"body":{"nodeType":"YulBlock","src":"4365:87:27","statements":[{"nodeType":"YulAssignment","src":"4375:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4397:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4384:12:27"},"nodeType":"YulFunctionCall","src":"4384:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4375:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4440:5:27"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4413:26:27"},"nodeType":"YulFunctionCall","src":"4413:33:27"},"nodeType":"YulExpressionStatement","src":"4413:33:27"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4343:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"4351:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4359:5:27","type":""}],"src":"4313:139:27"},{"body":{"nodeType":"YulBlock","src":"4541:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"4587:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4589:77:27"},"nodeType":"YulFunctionCall","src":"4589:79:27"},"nodeType":"YulExpressionStatement","src":"4589:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4562:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4558:3:27"},"nodeType":"YulFunctionCall","src":"4558:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4554:3:27"},"nodeType":"YulFunctionCall","src":"4554:32:27"},"nodeType":"YulIf","src":"4551:119:27"},{"nodeType":"YulBlock","src":"4680:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4695:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4709:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4699:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4724:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4770:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:27"},"nodeType":"YulFunctionCall","src":"4755:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4779:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4734:20:27"},"nodeType":"YulFunctionCall","src":"4734:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:27"}]}]},{"nodeType":"YulBlock","src":"4807:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4852:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4898:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:27"},"nodeType":"YulFunctionCall","src":"4883:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4862:20:27"},"nodeType":"YulFunctionCall","src":"4862:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4852:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4503:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4514:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4526:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4534:6:27","type":""}],"src":"4458:474:27"},{"body":{"nodeType":"YulBlock","src":"5038:519:27","statements":[{"body":{"nodeType":"YulBlock","src":"5084:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5086:77:27"},"nodeType":"YulFunctionCall","src":"5086:79:27"},"nodeType":"YulExpressionStatement","src":"5086:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5059:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5068:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5055:3:27"},"nodeType":"YulFunctionCall","src":"5055:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5080:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5051:3:27"},"nodeType":"YulFunctionCall","src":"5051:32:27"},"nodeType":"YulIf","src":"5048:119:27"},{"nodeType":"YulBlock","src":"5177:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5192:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5206:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5196:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5221:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5256:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5267:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5252:3:27"},"nodeType":"YulFunctionCall","src":"5252:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5276:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5231:20:27"},"nodeType":"YulFunctionCall","src":"5231:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5221:6:27"}]}]},{"nodeType":"YulBlock","src":"5304:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5319:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5333:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5323:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5349:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5395:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5380:3:27"},"nodeType":"YulFunctionCall","src":"5380:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5404:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5359:20:27"},"nodeType":"YulFunctionCall","src":"5359:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5349:6:27"}]}]},{"nodeType":"YulBlock","src":"5432:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5447:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5461:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5451:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5477:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5512:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5523:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5508:3:27"},"nodeType":"YulFunctionCall","src":"5508:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5532:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5487:20:27"},"nodeType":"YulFunctionCall","src":"5487:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5477:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4992:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5003:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5015:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5023:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5031:6:27","type":""}],"src":"4938:619:27"},{"body":{"nodeType":"YulBlock","src":"5629:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"5675:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5677:77:27"},"nodeType":"YulFunctionCall","src":"5677:79:27"},"nodeType":"YulExpressionStatement","src":"5677:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5650:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5659:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5646:3:27"},"nodeType":"YulFunctionCall","src":"5646:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5671:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5642:3:27"},"nodeType":"YulFunctionCall","src":"5642:32:27"},"nodeType":"YulIf","src":"5639:119:27"},{"nodeType":"YulBlock","src":"5768:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5783:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5797:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5787:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5812:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5847:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5858:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5843:3:27"},"nodeType":"YulFunctionCall","src":"5843:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5867:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5822:20:27"},"nodeType":"YulFunctionCall","src":"5822:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5812:6:27"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5599:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5610:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5622:6:27","type":""}],"src":"5563:329:27"},{"body":{"nodeType":"YulBlock","src":"5963:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5980:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6003:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5985:17:27"},"nodeType":"YulFunctionCall","src":"5985:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5973:6:27"},"nodeType":"YulFunctionCall","src":"5973:37:27"},"nodeType":"YulExpressionStatement","src":"5973:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5951:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5958:3:27","type":""}],"src":"5898:118:27"},{"body":{"nodeType":"YulBlock","src":"6120:124:27","statements":[{"nodeType":"YulAssignment","src":"6130:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6142:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6153:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6138:3:27"},"nodeType":"YulFunctionCall","src":"6138:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6130:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6210:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6223:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6234:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6219:3:27"},"nodeType":"YulFunctionCall","src":"6219:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6166:43:27"},"nodeType":"YulFunctionCall","src":"6166:71:27"},"nodeType":"YulExpressionStatement","src":"6166:71:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6092:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6104:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6115:4:27","type":""}],"src":"6022:222:27"},{"body":{"nodeType":"YulBlock","src":"6290:76:27","statements":[{"body":{"nodeType":"YulBlock","src":"6344:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6353:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6356:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6346:6:27"},"nodeType":"YulFunctionCall","src":"6346:12:27"},"nodeType":"YulExpressionStatement","src":"6346:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6313:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6335:5:27"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6320:14:27"},"nodeType":"YulFunctionCall","src":"6320:21:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6310:2:27"},"nodeType":"YulFunctionCall","src":"6310:32:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6303:6:27"},"nodeType":"YulFunctionCall","src":"6303:40:27"},"nodeType":"YulIf","src":"6300:60:27"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6283:5:27","type":""}],"src":"6250:116:27"},{"body":{"nodeType":"YulBlock","src":"6421:84:27","statements":[{"nodeType":"YulAssignment","src":"6431:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6453:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6440:12:27"},"nodeType":"YulFunctionCall","src":"6440:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6431:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6493:5:27"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6469:23:27"},"nodeType":"YulFunctionCall","src":"6469:30:27"},"nodeType":"YulExpressionStatement","src":"6469:30:27"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6399:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"6407:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6415:5:27","type":""}],"src":"6372:133:27"},{"body":{"nodeType":"YulBlock","src":"6591:388:27","statements":[{"body":{"nodeType":"YulBlock","src":"6637:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6639:77:27"},"nodeType":"YulFunctionCall","src":"6639:79:27"},"nodeType":"YulExpressionStatement","src":"6639:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6612:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"6621:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6608:3:27"},"nodeType":"YulFunctionCall","src":"6608:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"6633:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6604:3:27"},"nodeType":"YulFunctionCall","src":"6604:32:27"},"nodeType":"YulIf","src":"6601:119:27"},{"nodeType":"YulBlock","src":"6730:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6745:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"6759:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6749:6:27","type":""}]},{"nodeType":"YulAssignment","src":"6774:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6809:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"6820:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6805:3:27"},"nodeType":"YulFunctionCall","src":"6805:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6829:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6784:20:27"},"nodeType":"YulFunctionCall","src":"6784:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6774:6:27"}]}]},{"nodeType":"YulBlock","src":"6857:115:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6872:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"6886:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6876:6:27","type":""}]},{"nodeType":"YulAssignment","src":"6902:60:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6934:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"6945:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6930:3:27"},"nodeType":"YulFunctionCall","src":"6930:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6954:7:27"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6912:17:27"},"nodeType":"YulFunctionCall","src":"6912:50:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6902:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6553:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6564:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6576:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6584:6:27","type":""}],"src":"6511:468:27"},{"body":{"nodeType":"YulBlock","src":"7074:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7091:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7094:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7084:6:27"},"nodeType":"YulFunctionCall","src":"7084:12:27"},"nodeType":"YulExpressionStatement","src":"7084:12:27"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6985:117:27"},{"body":{"nodeType":"YulBlock","src":"7197:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7214:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7217:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7207:6:27"},"nodeType":"YulFunctionCall","src":"7207:12:27"},"nodeType":"YulExpressionStatement","src":"7207:12:27"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7108:117:27"},{"body":{"nodeType":"YulBlock","src":"7259:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7276:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7279:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7269:6:27"},"nodeType":"YulFunctionCall","src":"7269:88:27"},"nodeType":"YulExpressionStatement","src":"7269:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7373:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7376:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7366:6:27"},"nodeType":"YulFunctionCall","src":"7366:15:27"},"nodeType":"YulExpressionStatement","src":"7366:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7397:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7400:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7390:6:27"},"nodeType":"YulFunctionCall","src":"7390:15:27"},"nodeType":"YulExpressionStatement","src":"7390:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7231:180:27"},{"body":{"nodeType":"YulBlock","src":"7460:238:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7470:58:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7492:6:27"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7522:4:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7500:21:27"},"nodeType":"YulFunctionCall","src":"7500:27:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7488:3:27"},"nodeType":"YulFunctionCall","src":"7488:40:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7474:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"7639:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7641:16:27"},"nodeType":"YulFunctionCall","src":"7641:18:27"},"nodeType":"YulExpressionStatement","src":"7641:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7582:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"7594:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7579:2:27"},"nodeType":"YulFunctionCall","src":"7579:34:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7618:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7630:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7615:2:27"},"nodeType":"YulFunctionCall","src":"7615:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7576:2:27"},"nodeType":"YulFunctionCall","src":"7576:62:27"},"nodeType":"YulIf","src":"7573:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7677:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7681:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7670:6:27"},"nodeType":"YulFunctionCall","src":"7670:22:27"},"nodeType":"YulExpressionStatement","src":"7670:22:27"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7446:6:27","type":""},{"name":"size","nodeType":"YulTypedName","src":"7454:4:27","type":""}],"src":"7417:281:27"},{"body":{"nodeType":"YulBlock","src":"7745:88:27","statements":[{"nodeType":"YulAssignment","src":"7755:30:27","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7765:18:27"},"nodeType":"YulFunctionCall","src":"7765:20:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7755:6:27"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7814:6:27"},{"name":"size","nodeType":"YulIdentifier","src":"7822:4:27"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7794:19:27"},"nodeType":"YulFunctionCall","src":"7794:33:27"},"nodeType":"YulExpressionStatement","src":"7794:33:27"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7729:4:27","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7738:6:27","type":""}],"src":"7704:129:27"},{"body":{"nodeType":"YulBlock","src":"7905:241:27","statements":[{"body":{"nodeType":"YulBlock","src":"8010:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8012:16:27"},"nodeType":"YulFunctionCall","src":"8012:18:27"},"nodeType":"YulExpressionStatement","src":"8012:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7982:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7990:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7979:2:27"},"nodeType":"YulFunctionCall","src":"7979:30:27"},"nodeType":"YulIf","src":"7976:56:27"},{"nodeType":"YulAssignment","src":"8042:37:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8072:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8050:21:27"},"nodeType":"YulFunctionCall","src":"8050:29:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8042:4:27"}]},{"nodeType":"YulAssignment","src":"8116:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8128:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"8134:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8124:3:27"},"nodeType":"YulFunctionCall","src":"8124:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8116:4:27"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7889:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7900:4:27","type":""}],"src":"7839:307:27"},{"body":{"nodeType":"YulBlock","src":"8203:103:27","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8226:3:27"},{"name":"src","nodeType":"YulIdentifier","src":"8231:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"8236:6:27"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8213:12:27"},"nodeType":"YulFunctionCall","src":"8213:30:27"},"nodeType":"YulExpressionStatement","src":"8213:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8284:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"8289:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8280:3:27"},"nodeType":"YulFunctionCall","src":"8280:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"8298:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8273:6:27"},"nodeType":"YulFunctionCall","src":"8273:27:27"},"nodeType":"YulExpressionStatement","src":"8273:27:27"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8185:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8190:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"8195:6:27","type":""}],"src":"8152:154:27"},{"body":{"nodeType":"YulBlock","src":"8395:327:27","statements":[{"nodeType":"YulAssignment","src":"8405:74:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8471:6:27"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8430:40:27"},"nodeType":"YulFunctionCall","src":"8430:48:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8414:15:27"},"nodeType":"YulFunctionCall","src":"8414:65:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8405:5:27"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8495:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"8502:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8488:6:27"},"nodeType":"YulFunctionCall","src":"8488:21:27"},"nodeType":"YulExpressionStatement","src":"8488:21:27"},{"nodeType":"YulVariableDeclaration","src":"8518:27:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8533:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"8540:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8529:3:27"},"nodeType":"YulFunctionCall","src":"8529:16:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8522:3:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"8583:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8585:77:27"},"nodeType":"YulFunctionCall","src":"8585:79:27"},"nodeType":"YulExpressionStatement","src":"8585:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8564:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"8569:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8560:3:27"},"nodeType":"YulFunctionCall","src":"8560:16:27"},{"name":"end","nodeType":"YulIdentifier","src":"8578:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8557:2:27"},"nodeType":"YulFunctionCall","src":"8557:25:27"},"nodeType":"YulIf","src":"8554:112:27"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8699:3:27"},{"name":"dst","nodeType":"YulIdentifier","src":"8704:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"8709:6:27"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"8675:23:27"},"nodeType":"YulFunctionCall","src":"8675:41:27"},"nodeType":"YulExpressionStatement","src":"8675:41:27"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8368:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"8373:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"8381:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8389:5:27","type":""}],"src":"8312:410:27"},{"body":{"nodeType":"YulBlock","src":"8802:277:27","statements":[{"body":{"nodeType":"YulBlock","src":"8851:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8853:77:27"},"nodeType":"YulFunctionCall","src":"8853:79:27"},"nodeType":"YulExpressionStatement","src":"8853:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8830:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8838:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8826:3:27"},"nodeType":"YulFunctionCall","src":"8826:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"8845:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8822:3:27"},"nodeType":"YulFunctionCall","src":"8822:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8815:6:27"},"nodeType":"YulFunctionCall","src":"8815:35:27"},"nodeType":"YulIf","src":"8812:122:27"},{"nodeType":"YulVariableDeclaration","src":"8943:34:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8970:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8957:12:27"},"nodeType":"YulFunctionCall","src":"8957:20:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8947:6:27","type":""}]},{"nodeType":"YulAssignment","src":"8986:87:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9046:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"9054:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9042:3:27"},"nodeType":"YulFunctionCall","src":"9042:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"9061:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"9069:3:27"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8995:46:27"},"nodeType":"YulFunctionCall","src":"8995:78:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8986:5:27"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8780:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"8788:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8796:5:27","type":""}],"src":"8741:338:27"},{"body":{"nodeType":"YulBlock","src":"9211:817:27","statements":[{"body":{"nodeType":"YulBlock","src":"9258:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9260:77:27"},"nodeType":"YulFunctionCall","src":"9260:79:27"},"nodeType":"YulExpressionStatement","src":"9260:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9232:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"9241:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9228:3:27"},"nodeType":"YulFunctionCall","src":"9228:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"9253:3:27","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9224:3:27"},"nodeType":"YulFunctionCall","src":"9224:33:27"},"nodeType":"YulIf","src":"9221:120:27"},{"nodeType":"YulBlock","src":"9351:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9366:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"9380:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9370:6:27","type":""}]},{"nodeType":"YulAssignment","src":"9395:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9430:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"9441:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9426:3:27"},"nodeType":"YulFunctionCall","src":"9426:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9450:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9405:20:27"},"nodeType":"YulFunctionCall","src":"9405:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9395:6:27"}]}]},{"nodeType":"YulBlock","src":"9478:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9493:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"9507:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9497:6:27","type":""}]},{"nodeType":"YulAssignment","src":"9523:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9558:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"9569:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9554:3:27"},"nodeType":"YulFunctionCall","src":"9554:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9578:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9533:20:27"},"nodeType":"YulFunctionCall","src":"9533:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9523:6:27"}]}]},{"nodeType":"YulBlock","src":"9606:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9621:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"9635:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9625:6:27","type":""}]},{"nodeType":"YulAssignment","src":"9651:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9686:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"9697:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9682:3:27"},"nodeType":"YulFunctionCall","src":"9682:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9706:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9661:20:27"},"nodeType":"YulFunctionCall","src":"9661:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9651:6:27"}]}]},{"nodeType":"YulBlock","src":"9734:287:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9749:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9780:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9791:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9776:3:27"},"nodeType":"YulFunctionCall","src":"9776:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9763:12:27"},"nodeType":"YulFunctionCall","src":"9763:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9753:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"9842:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9844:77:27"},"nodeType":"YulFunctionCall","src":"9844:79:27"},"nodeType":"YulExpressionStatement","src":"9844:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9814:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"9822:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9811:2:27"},"nodeType":"YulFunctionCall","src":"9811:30:27"},"nodeType":"YulIf","src":"9808:117:27"},{"nodeType":"YulAssignment","src":"9939:72:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9983:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"9994:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9979:3:27"},"nodeType":"YulFunctionCall","src":"9979:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10003:7:27"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9949:29:27"},"nodeType":"YulFunctionCall","src":"9949:62:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9939:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9157:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9168:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9180:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9188:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9196:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9204:6:27","type":""}],"src":"9085:943:27"},{"body":{"nodeType":"YulBlock","src":"10117:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"10163:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10165:77:27"},"nodeType":"YulFunctionCall","src":"10165:79:27"},"nodeType":"YulExpressionStatement","src":"10165:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10138:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"10147:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10134:3:27"},"nodeType":"YulFunctionCall","src":"10134:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"10159:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10130:3:27"},"nodeType":"YulFunctionCall","src":"10130:32:27"},"nodeType":"YulIf","src":"10127:119:27"},{"nodeType":"YulBlock","src":"10256:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10271:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"10285:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10275:6:27","type":""}]},{"nodeType":"YulAssignment","src":"10300:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10335:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"10346:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10331:3:27"},"nodeType":"YulFunctionCall","src":"10331:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10355:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10310:20:27"},"nodeType":"YulFunctionCall","src":"10310:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10300:6:27"}]}]},{"nodeType":"YulBlock","src":"10383:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10398:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"10412:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10402:6:27","type":""}]},{"nodeType":"YulAssignment","src":"10428:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10463:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"10474:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10459:3:27"},"nodeType":"YulFunctionCall","src":"10459:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10483:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10438:20:27"},"nodeType":"YulFunctionCall","src":"10438:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10428:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10079:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10090:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10102:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10110:6:27","type":""}],"src":"10034:474:27"},{"body":{"nodeType":"YulBlock","src":"10542:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10559:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10562:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10552:6:27"},"nodeType":"YulFunctionCall","src":"10552:88:27"},"nodeType":"YulExpressionStatement","src":"10552:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10656:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10659:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10649:6:27"},"nodeType":"YulFunctionCall","src":"10649:15:27"},"nodeType":"YulExpressionStatement","src":"10649:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10680:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10683:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10673:6:27"},"nodeType":"YulFunctionCall","src":"10673:15:27"},"nodeType":"YulExpressionStatement","src":"10673:15:27"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10514:180:27"},{"body":{"nodeType":"YulBlock","src":"10751:269:27","statements":[{"nodeType":"YulAssignment","src":"10761:22:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10775:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"10781:1:27","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10771:3:27"},"nodeType":"YulFunctionCall","src":"10771:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10761:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"10792:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10822:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"10828:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10818:3:27"},"nodeType":"YulFunctionCall","src":"10818:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10796:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"10869:51:27","statements":[{"nodeType":"YulAssignment","src":"10883:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10897:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"10905:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10893:3:27"},"nodeType":"YulFunctionCall","src":"10893:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10883:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10849:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10842:6:27"},"nodeType":"YulFunctionCall","src":"10842:26:27"},"nodeType":"YulIf","src":"10839:81:27"},{"body":{"nodeType":"YulBlock","src":"10972:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"10986:16:27"},"nodeType":"YulFunctionCall","src":"10986:18:27"},"nodeType":"YulExpressionStatement","src":"10986:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10936:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10959:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"10967:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10956:2:27"},"nodeType":"YulFunctionCall","src":"10956:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10933:2:27"},"nodeType":"YulFunctionCall","src":"10933:38:27"},"nodeType":"YulIf","src":"10930:84:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10735:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10744:6:27","type":""}],"src":"10700:320:27"},{"body":{"nodeType":"YulBlock","src":"11132:114:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11154:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"11162:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11150:3:27"},"nodeType":"YulFunctionCall","src":"11150:14:27"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"11166:34:27","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11143:6:27"},"nodeType":"YulFunctionCall","src":"11143:58:27"},"nodeType":"YulExpressionStatement","src":"11143:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11222:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"11230:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11218:3:27"},"nodeType":"YulFunctionCall","src":"11218:15:27"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"11235:3:27","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11211:6:27"},"nodeType":"YulFunctionCall","src":"11211:28:27"},"nodeType":"YulExpressionStatement","src":"11211:28:27"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11124:6:27","type":""}],"src":"11026:220:27"},{"body":{"nodeType":"YulBlock","src":"11398:220:27","statements":[{"nodeType":"YulAssignment","src":"11408:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11474:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"11479:2:27","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11415:58:27"},"nodeType":"YulFunctionCall","src":"11415:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11408:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11580:3:27"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"11491:88:27"},"nodeType":"YulFunctionCall","src":"11491:93:27"},"nodeType":"YulExpressionStatement","src":"11491:93:27"},{"nodeType":"YulAssignment","src":"11593:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11604:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"11609:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11600:3:27"},"nodeType":"YulFunctionCall","src":"11600:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11593:3:27"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11386:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11394:3:27","type":""}],"src":"11252:366:27"},{"body":{"nodeType":"YulBlock","src":"11795:248:27","statements":[{"nodeType":"YulAssignment","src":"11805:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11817:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11828:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11813:3:27"},"nodeType":"YulFunctionCall","src":"11813:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11805:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11852:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11863:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11848:3:27"},"nodeType":"YulFunctionCall","src":"11848:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11871:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"11877:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11867:3:27"},"nodeType":"YulFunctionCall","src":"11867:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11841:6:27"},"nodeType":"YulFunctionCall","src":"11841:47:27"},"nodeType":"YulExpressionStatement","src":"11841:47:27"},{"nodeType":"YulAssignment","src":"11897:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12031:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11905:124:27"},"nodeType":"YulFunctionCall","src":"11905:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11897:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11775:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11790:4:27","type":""}],"src":"11624:419:27"},{"body":{"nodeType":"YulBlock","src":"12155:142:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12177:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"12185:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12173:3:27"},"nodeType":"YulFunctionCall","src":"12173:14:27"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"12189:34:27","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12166:6:27"},"nodeType":"YulFunctionCall","src":"12166:58:27"},"nodeType":"YulExpressionStatement","src":"12166:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12245:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"12253:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12241:3:27"},"nodeType":"YulFunctionCall","src":"12241:15:27"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"12258:31:27","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12234:6:27"},"nodeType":"YulFunctionCall","src":"12234:56:27"},"nodeType":"YulExpressionStatement","src":"12234:56:27"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12147:6:27","type":""}],"src":"12049:248:27"},{"body":{"nodeType":"YulBlock","src":"12449:220:27","statements":[{"nodeType":"YulAssignment","src":"12459:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12525:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12530:2:27","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12466:58:27"},"nodeType":"YulFunctionCall","src":"12466:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12459:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12631:3:27"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"12542:88:27"},"nodeType":"YulFunctionCall","src":"12542:93:27"},"nodeType":"YulExpressionStatement","src":"12542:93:27"},{"nodeType":"YulAssignment","src":"12644:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12655:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"12660:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12651:3:27"},"nodeType":"YulFunctionCall","src":"12651:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12644:3:27"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12437:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12445:3:27","type":""}],"src":"12303:366:27"},{"body":{"nodeType":"YulBlock","src":"12846:248:27","statements":[{"nodeType":"YulAssignment","src":"12856:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12868:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12879:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12864:3:27"},"nodeType":"YulFunctionCall","src":"12864:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12856:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12903:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12914:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12899:3:27"},"nodeType":"YulFunctionCall","src":"12899:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12922:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"12928:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12918:3:27"},"nodeType":"YulFunctionCall","src":"12918:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12892:6:27"},"nodeType":"YulFunctionCall","src":"12892:47:27"},"nodeType":"YulExpressionStatement","src":"12892:47:27"},{"nodeType":"YulAssignment","src":"12948:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13082:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12956:124:27"},"nodeType":"YulFunctionCall","src":"12956:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12948:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12826:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12841:4:27","type":""}],"src":"12675:419:27"},{"body":{"nodeType":"YulBlock","src":"13206:126:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13228:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"13236:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13224:3:27"},"nodeType":"YulFunctionCall","src":"13224:14:27"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"13240:34:27","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13217:6:27"},"nodeType":"YulFunctionCall","src":"13217:58:27"},"nodeType":"YulExpressionStatement","src":"13217:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13296:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"13304:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13292:3:27"},"nodeType":"YulFunctionCall","src":"13292:15:27"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"13309:15:27","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13285:6:27"},"nodeType":"YulFunctionCall","src":"13285:40:27"},"nodeType":"YulExpressionStatement","src":"13285:40:27"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13198:6:27","type":""}],"src":"13100:232:27"},{"body":{"nodeType":"YulBlock","src":"13484:220:27","statements":[{"nodeType":"YulAssignment","src":"13494:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13560:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"13565:2:27","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13501:58:27"},"nodeType":"YulFunctionCall","src":"13501:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13494:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13666:3:27"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"13577:88:27"},"nodeType":"YulFunctionCall","src":"13577:93:27"},"nodeType":"YulExpressionStatement","src":"13577:93:27"},{"nodeType":"YulAssignment","src":"13679:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13690:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"13695:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13686:3:27"},"nodeType":"YulFunctionCall","src":"13686:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13679:3:27"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13472:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13480:3:27","type":""}],"src":"13338:366:27"},{"body":{"nodeType":"YulBlock","src":"13881:248:27","statements":[{"nodeType":"YulAssignment","src":"13891:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13903:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13914:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13899:3:27"},"nodeType":"YulFunctionCall","src":"13899:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13891:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13938:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13949:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13934:3:27"},"nodeType":"YulFunctionCall","src":"13934:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13957:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"13963:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13953:3:27"},"nodeType":"YulFunctionCall","src":"13953:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13927:6:27"},"nodeType":"YulFunctionCall","src":"13927:47:27"},"nodeType":"YulExpressionStatement","src":"13927:47:27"},{"nodeType":"YulAssignment","src":"13983:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14117:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13991:124:27"},"nodeType":"YulFunctionCall","src":"13991:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13983:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13861:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13876:4:27","type":""}],"src":"13710:419:27"},{"body":{"nodeType":"YulBlock","src":"14241:68:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14263:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"14271:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14259:3:27"},"nodeType":"YulFunctionCall","src":"14259:14:27"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"14275:26:27","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14252:6:27"},"nodeType":"YulFunctionCall","src":"14252:50:27"},"nodeType":"YulExpressionStatement","src":"14252:50:27"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14233:6:27","type":""}],"src":"14135:174:27"},{"body":{"nodeType":"YulBlock","src":"14461:220:27","statements":[{"nodeType":"YulAssignment","src":"14471:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14537:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"14542:2:27","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14478:58:27"},"nodeType":"YulFunctionCall","src":"14478:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14471:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14643:3:27"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"14554:88:27"},"nodeType":"YulFunctionCall","src":"14554:93:27"},"nodeType":"YulExpressionStatement","src":"14554:93:27"},{"nodeType":"YulAssignment","src":"14656:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14667:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"14672:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14663:3:27"},"nodeType":"YulFunctionCall","src":"14663:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14656:3:27"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14449:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14457:3:27","type":""}],"src":"14315:366:27"},{"body":{"nodeType":"YulBlock","src":"14858:248:27","statements":[{"nodeType":"YulAssignment","src":"14868:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14880:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14891:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14876:3:27"},"nodeType":"YulFunctionCall","src":"14876:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14868:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14915:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14926:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14911:3:27"},"nodeType":"YulFunctionCall","src":"14911:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14934:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"14940:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14930:3:27"},"nodeType":"YulFunctionCall","src":"14930:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14904:6:27"},"nodeType":"YulFunctionCall","src":"14904:47:27"},"nodeType":"YulExpressionStatement","src":"14904:47:27"},{"nodeType":"YulAssignment","src":"14960:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15094:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14968:124:27"},"nodeType":"YulFunctionCall","src":"14968:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14960:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14838:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14853:4:27","type":""}],"src":"14687:419:27"},{"body":{"nodeType":"YulBlock","src":"15218:122:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15240:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"15248:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15236:3:27"},"nodeType":"YulFunctionCall","src":"15236:14:27"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"15252:34:27","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15229:6:27"},"nodeType":"YulFunctionCall","src":"15229:58:27"},"nodeType":"YulExpressionStatement","src":"15229:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15308:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"15316:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15304:3:27"},"nodeType":"YulFunctionCall","src":"15304:15:27"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"15321:11:27","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15297:6:27"},"nodeType":"YulFunctionCall","src":"15297:36:27"},"nodeType":"YulExpressionStatement","src":"15297:36:27"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15210:6:27","type":""}],"src":"15112:228:27"},{"body":{"nodeType":"YulBlock","src":"15492:220:27","statements":[{"nodeType":"YulAssignment","src":"15502:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15568:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"15573:2:27","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15509:58:27"},"nodeType":"YulFunctionCall","src":"15509:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15502:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15674:3:27"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"15585:88:27"},"nodeType":"YulFunctionCall","src":"15585:93:27"},"nodeType":"YulExpressionStatement","src":"15585:93:27"},{"nodeType":"YulAssignment","src":"15687:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15698:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"15703:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15694:3:27"},"nodeType":"YulFunctionCall","src":"15694:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15687:3:27"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15480:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15488:3:27","type":""}],"src":"15346:366:27"},{"body":{"nodeType":"YulBlock","src":"15889:248:27","statements":[{"nodeType":"YulAssignment","src":"15899:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15911:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15922:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15907:3:27"},"nodeType":"YulFunctionCall","src":"15907:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15899:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15946:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15957:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15942:3:27"},"nodeType":"YulFunctionCall","src":"15942:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15965:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"15971:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15961:3:27"},"nodeType":"YulFunctionCall","src":"15961:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15935:6:27"},"nodeType":"YulFunctionCall","src":"15935:47:27"},"nodeType":"YulExpressionStatement","src":"15935:47:27"},{"nodeType":"YulAssignment","src":"15991:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16125:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15999:124:27"},"nodeType":"YulFunctionCall","src":"15999:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15991:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15869:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15884:4:27","type":""}],"src":"15718:419:27"},{"body":{"nodeType":"YulBlock","src":"16257:34:27","statements":[{"nodeType":"YulAssignment","src":"16267:18:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"16282:3:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16267:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16229:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"16234:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16245:11:27","type":""}],"src":"16143:148:27"},{"body":{"nodeType":"YulBlock","src":"16407:267:27","statements":[{"nodeType":"YulVariableDeclaration","src":"16417:53:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16464:5:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16431:32:27"},"nodeType":"YulFunctionCall","src":"16431:39:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16421:6:27","type":""}]},{"nodeType":"YulAssignment","src":"16479:96:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16563:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"16568:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16486:76:27"},"nodeType":"YulFunctionCall","src":"16486:89:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16479:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16610:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"16617:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16606:3:27"},"nodeType":"YulFunctionCall","src":"16606:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"16624:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"16629:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"16584:21:27"},"nodeType":"YulFunctionCall","src":"16584:52:27"},"nodeType":"YulExpressionStatement","src":"16584:52:27"},{"nodeType":"YulAssignment","src":"16645:23:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16656:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"16661:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16652:3:27"},"nodeType":"YulFunctionCall","src":"16652:16:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16645:3:27"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16388:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16395:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16403:3:27","type":""}],"src":"16297:377:27"},{"body":{"nodeType":"YulBlock","src":"16864:251:27","statements":[{"nodeType":"YulAssignment","src":"16875:102:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16964:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"16973:3:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16882:81:27"},"nodeType":"YulFunctionCall","src":"16882:95:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16875:3:27"}]},{"nodeType":"YulAssignment","src":"16987:102:27","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17076:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"17085:3:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16994:81:27"},"nodeType":"YulFunctionCall","src":"16994:95:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16987:3:27"}]},{"nodeType":"YulAssignment","src":"17099:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"17106:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17099:3:27"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16835:3:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16841:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16849:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16860:3:27","type":""}],"src":"16680:435:27"},{"body":{"nodeType":"YulBlock","src":"17227:118:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17249:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"17257:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17245:3:27"},"nodeType":"YulFunctionCall","src":"17245:14:27"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"17261:34:27","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17238:6:27"},"nodeType":"YulFunctionCall","src":"17238:58:27"},"nodeType":"YulExpressionStatement","src":"17238:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17317:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"17325:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17313:3:27"},"nodeType":"YulFunctionCall","src":"17313:15:27"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"17330:7:27","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17306:6:27"},"nodeType":"YulFunctionCall","src":"17306:32:27"},"nodeType":"YulExpressionStatement","src":"17306:32:27"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17219:6:27","type":""}],"src":"17121:224:27"},{"body":{"nodeType":"YulBlock","src":"17497:220:27","statements":[{"nodeType":"YulAssignment","src":"17507:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17573:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"17578:2:27","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17514:58:27"},"nodeType":"YulFunctionCall","src":"17514:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17507:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17679:3:27"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"17590:88:27"},"nodeType":"YulFunctionCall","src":"17590:93:27"},"nodeType":"YulExpressionStatement","src":"17590:93:27"},{"nodeType":"YulAssignment","src":"17692:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17703:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"17708:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17699:3:27"},"nodeType":"YulFunctionCall","src":"17699:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17692:3:27"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17485:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17493:3:27","type":""}],"src":"17351:366:27"},{"body":{"nodeType":"YulBlock","src":"17894:248:27","statements":[{"nodeType":"YulAssignment","src":"17904:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17916:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17927:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17912:3:27"},"nodeType":"YulFunctionCall","src":"17912:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17904:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17951:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17962:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17947:3:27"},"nodeType":"YulFunctionCall","src":"17947:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17970:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"17976:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17966:3:27"},"nodeType":"YulFunctionCall","src":"17966:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17940:6:27"},"nodeType":"YulFunctionCall","src":"17940:47:27"},"nodeType":"YulExpressionStatement","src":"17940:47:27"},{"nodeType":"YulAssignment","src":"17996:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18130:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18004:124:27"},"nodeType":"YulFunctionCall","src":"18004:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17996:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17874:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17889:4:27","type":""}],"src":"17723:419:27"},{"body":{"nodeType":"YulBlock","src":"18254:117:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18276:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"18284:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18272:3:27"},"nodeType":"YulFunctionCall","src":"18272:14:27"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"18288:34:27","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18265:6:27"},"nodeType":"YulFunctionCall","src":"18265:58:27"},"nodeType":"YulExpressionStatement","src":"18265:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18344:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"18352:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18340:3:27"},"nodeType":"YulFunctionCall","src":"18340:15:27"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"18357:6:27","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18333:6:27"},"nodeType":"YulFunctionCall","src":"18333:31:27"},"nodeType":"YulExpressionStatement","src":"18333:31:27"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18246:6:27","type":""}],"src":"18148:223:27"},{"body":{"nodeType":"YulBlock","src":"18523:220:27","statements":[{"nodeType":"YulAssignment","src":"18533:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18599:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"18604:2:27","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18540:58:27"},"nodeType":"YulFunctionCall","src":"18540:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18533:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18705:3:27"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"18616:88:27"},"nodeType":"YulFunctionCall","src":"18616:93:27"},"nodeType":"YulExpressionStatement","src":"18616:93:27"},{"nodeType":"YulAssignment","src":"18718:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18729:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"18734:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18725:3:27"},"nodeType":"YulFunctionCall","src":"18725:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18718:3:27"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18511:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18519:3:27","type":""}],"src":"18377:366:27"},{"body":{"nodeType":"YulBlock","src":"18920:248:27","statements":[{"nodeType":"YulAssignment","src":"18930:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18942:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18953:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18938:3:27"},"nodeType":"YulFunctionCall","src":"18938:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18930:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18977:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18988:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18973:3:27"},"nodeType":"YulFunctionCall","src":"18973:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18996:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"19002:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18992:3:27"},"nodeType":"YulFunctionCall","src":"18992:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18966:6:27"},"nodeType":"YulFunctionCall","src":"18966:47:27"},"nodeType":"YulExpressionStatement","src":"18966:47:27"},{"nodeType":"YulAssignment","src":"19022:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19156:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19030:124:27"},"nodeType":"YulFunctionCall","src":"19030:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19022:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18900:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18915:4:27","type":""}],"src":"18749:419:27"},{"body":{"nodeType":"YulBlock","src":"19280:69:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19302:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"19310:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19298:3:27"},"nodeType":"YulFunctionCall","src":"19298:14:27"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"19314:27:27","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19291:6:27"},"nodeType":"YulFunctionCall","src":"19291:51:27"},"nodeType":"YulExpressionStatement","src":"19291:51:27"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19272:6:27","type":""}],"src":"19174:175:27"},{"body":{"nodeType":"YulBlock","src":"19501:220:27","statements":[{"nodeType":"YulAssignment","src":"19511:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19577:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"19582:2:27","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19518:58:27"},"nodeType":"YulFunctionCall","src":"19518:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19511:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19683:3:27"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"19594:88:27"},"nodeType":"YulFunctionCall","src":"19594:93:27"},"nodeType":"YulExpressionStatement","src":"19594:93:27"},{"nodeType":"YulAssignment","src":"19696:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19707:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"19712:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19703:3:27"},"nodeType":"YulFunctionCall","src":"19703:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19696:3:27"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19489:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19497:3:27","type":""}],"src":"19355:366:27"},{"body":{"nodeType":"YulBlock","src":"19898:248:27","statements":[{"nodeType":"YulAssignment","src":"19908:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19920:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19931:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19916:3:27"},"nodeType":"YulFunctionCall","src":"19916:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19908:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19955:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19966:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19951:3:27"},"nodeType":"YulFunctionCall","src":"19951:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19974:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"19980:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19970:3:27"},"nodeType":"YulFunctionCall","src":"19970:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19944:6:27"},"nodeType":"YulFunctionCall","src":"19944:47:27"},"nodeType":"YulExpressionStatement","src":"19944:47:27"},{"nodeType":"YulAssignment","src":"20000:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20134:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20008:124:27"},"nodeType":"YulFunctionCall","src":"20008:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20000:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19878:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19893:4:27","type":""}],"src":"19727:419:27"},{"body":{"nodeType":"YulBlock","src":"20258:131:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20280:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"20288:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20276:3:27"},"nodeType":"YulFunctionCall","src":"20276:14:27"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"20292:34:27","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20269:6:27"},"nodeType":"YulFunctionCall","src":"20269:58:27"},"nodeType":"YulExpressionStatement","src":"20269:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20348:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"20356:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20344:3:27"},"nodeType":"YulFunctionCall","src":"20344:15:27"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"20361:20:27","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20337:6:27"},"nodeType":"YulFunctionCall","src":"20337:45:27"},"nodeType":"YulExpressionStatement","src":"20337:45:27"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20250:6:27","type":""}],"src":"20152:237:27"},{"body":{"nodeType":"YulBlock","src":"20541:220:27","statements":[{"nodeType":"YulAssignment","src":"20551:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20617:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"20622:2:27","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20558:58:27"},"nodeType":"YulFunctionCall","src":"20558:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20551:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20723:3:27"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"20634:88:27"},"nodeType":"YulFunctionCall","src":"20634:93:27"},"nodeType":"YulExpressionStatement","src":"20634:93:27"},{"nodeType":"YulAssignment","src":"20736:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20747:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"20752:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20743:3:27"},"nodeType":"YulFunctionCall","src":"20743:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20736:3:27"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20529:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20537:3:27","type":""}],"src":"20395:366:27"},{"body":{"nodeType":"YulBlock","src":"20938:248:27","statements":[{"nodeType":"YulAssignment","src":"20948:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20960:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20971:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20956:3:27"},"nodeType":"YulFunctionCall","src":"20956:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20948:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20995:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21006:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20991:3:27"},"nodeType":"YulFunctionCall","src":"20991:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21014:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"21020:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21010:3:27"},"nodeType":"YulFunctionCall","src":"21010:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20984:6:27"},"nodeType":"YulFunctionCall","src":"20984:47:27"},"nodeType":"YulExpressionStatement","src":"20984:47:27"},{"nodeType":"YulAssignment","src":"21040:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21174:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21048:124:27"},"nodeType":"YulFunctionCall","src":"21048:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21040:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20918:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20933:4:27","type":""}],"src":"20767:419:27"},{"body":{"nodeType":"YulBlock","src":"21220:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21237:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21240:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21230:6:27"},"nodeType":"YulFunctionCall","src":"21230:88:27"},"nodeType":"YulExpressionStatement","src":"21230:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21334:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21337:4:27","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21327:6:27"},"nodeType":"YulFunctionCall","src":"21327:15:27"},"nodeType":"YulExpressionStatement","src":"21327:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21358:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21361:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21351:6:27"},"nodeType":"YulFunctionCall","src":"21351:15:27"},"nodeType":"YulExpressionStatement","src":"21351:15:27"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"21192:180:27"},{"body":{"nodeType":"YulBlock","src":"21406:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21423:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21426:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21416:6:27"},"nodeType":"YulFunctionCall","src":"21416:88:27"},"nodeType":"YulExpressionStatement","src":"21416:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21520:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21523:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21513:6:27"},"nodeType":"YulFunctionCall","src":"21513:15:27"},"nodeType":"YulExpressionStatement","src":"21513:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21544:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21547:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21537:6:27"},"nodeType":"YulFunctionCall","src":"21537:15:27"},"nodeType":"YulExpressionStatement","src":"21537:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"21378:180:27"},{"body":{"nodeType":"YulBlock","src":"21609:146:27","statements":[{"nodeType":"YulAssignment","src":"21619:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21642:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21624:17:27"},"nodeType":"YulFunctionCall","src":"21624:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"21619:1:27"}]},{"nodeType":"YulAssignment","src":"21653:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21676:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21658:17:27"},"nodeType":"YulFunctionCall","src":"21658:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"21653:1:27"}]},{"body":{"nodeType":"YulBlock","src":"21700:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21702:16:27"},"nodeType":"YulFunctionCall","src":"21702:18:27"},"nodeType":"YulExpressionStatement","src":"21702:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21694:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"21697:1:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21691:2:27"},"nodeType":"YulFunctionCall","src":"21691:8:27"},"nodeType":"YulIf","src":"21688:34:27"},{"nodeType":"YulAssignment","src":"21732:17:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21744:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"21747:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21740:3:27"},"nodeType":"YulFunctionCall","src":"21740:9:27"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"21732:4:27"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21595:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"21598:1:27","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"21604:4:27","type":""}],"src":"21564:191:27"},{"body":{"nodeType":"YulBlock","src":"21805:261:27","statements":[{"nodeType":"YulAssignment","src":"21815:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21838:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21820:17:27"},"nodeType":"YulFunctionCall","src":"21820:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"21815:1:27"}]},{"nodeType":"YulAssignment","src":"21849:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"21872:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21854:17:27"},"nodeType":"YulFunctionCall","src":"21854:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"21849:1:27"}]},{"body":{"nodeType":"YulBlock","src":"22012:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22014:16:27"},"nodeType":"YulFunctionCall","src":"22014:18:27"},"nodeType":"YulExpressionStatement","src":"22014:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"21933:1:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21940:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"22008:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21936:3:27"},"nodeType":"YulFunctionCall","src":"21936:74:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21930:2:27"},"nodeType":"YulFunctionCall","src":"21930:81:27"},"nodeType":"YulIf","src":"21927:107:27"},{"nodeType":"YulAssignment","src":"22044:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22055:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"22058:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22051:3:27"},"nodeType":"YulFunctionCall","src":"22051:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"22044:3:27"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"21792:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"21795:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"21801:3:27","type":""}],"src":"21761:305:27"},{"body":{"nodeType":"YulBlock","src":"22130:40:27","statements":[{"nodeType":"YulAssignment","src":"22141:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22157:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22151:5:27"},"nodeType":"YulFunctionCall","src":"22151:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22141:6:27"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22113:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"22123:6:27","type":""}],"src":"22072:98:27"},{"body":{"nodeType":"YulBlock","src":"22271:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22288:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"22293:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22281:6:27"},"nodeType":"YulFunctionCall","src":"22281:19:27"},"nodeType":"YulExpressionStatement","src":"22281:19:27"},{"nodeType":"YulAssignment","src":"22309:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22328:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"22333:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22324:3:27"},"nodeType":"YulFunctionCall","src":"22324:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"22309:11:27"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22243:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"22248:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"22259:11:27","type":""}],"src":"22176:168:27"},{"body":{"nodeType":"YulBlock","src":"22440:270:27","statements":[{"nodeType":"YulVariableDeclaration","src":"22450:52:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22496:5:27"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"22464:31:27"},"nodeType":"YulFunctionCall","src":"22464:38:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22454:6:27","type":""}]},{"nodeType":"YulAssignment","src":"22511:77:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22576:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"22581:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22518:57:27"},"nodeType":"YulFunctionCall","src":"22518:70:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22511:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22623:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"22630:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22619:3:27"},"nodeType":"YulFunctionCall","src":"22619:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"22637:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"22642:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"22597:21:27"},"nodeType":"YulFunctionCall","src":"22597:52:27"},"nodeType":"YulExpressionStatement","src":"22597:52:27"},{"nodeType":"YulAssignment","src":"22658:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22669:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22696:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"22674:21:27"},"nodeType":"YulFunctionCall","src":"22674:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22665:3:27"},"nodeType":"YulFunctionCall","src":"22665:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22658:3:27"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22421:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22428:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22436:3:27","type":""}],"src":"22350:360:27"},{"body":{"nodeType":"YulBlock","src":"22916:440:27","statements":[{"nodeType":"YulAssignment","src":"22926:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22938:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22949:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22934:3:27"},"nodeType":"YulFunctionCall","src":"22934:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22926:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23007:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23020:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23031:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23016:3:27"},"nodeType":"YulFunctionCall","src":"23016:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22963:43:27"},"nodeType":"YulFunctionCall","src":"22963:71:27"},"nodeType":"YulExpressionStatement","src":"22963:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23088:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23101:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23112:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23097:3:27"},"nodeType":"YulFunctionCall","src":"23097:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23044:43:27"},"nodeType":"YulFunctionCall","src":"23044:72:27"},"nodeType":"YulExpressionStatement","src":"23044:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23170:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23183:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23194:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23179:3:27"},"nodeType":"YulFunctionCall","src":"23179:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23126:43:27"},"nodeType":"YulFunctionCall","src":"23126:72:27"},"nodeType":"YulExpressionStatement","src":"23126:72:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23219:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23230:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23215:3:27"},"nodeType":"YulFunctionCall","src":"23215:18:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23239:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"23245:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23235:3:27"},"nodeType":"YulFunctionCall","src":"23235:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23208:6:27"},"nodeType":"YulFunctionCall","src":"23208:48:27"},"nodeType":"YulExpressionStatement","src":"23208:48:27"},{"nodeType":"YulAssignment","src":"23265:84:27","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23335:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"23344:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23273:61:27"},"nodeType":"YulFunctionCall","src":"23273:76:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23265:4:27"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22864:9:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22876:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22884:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22892:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22900:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22911:4:27","type":""}],"src":"22716:640:27"},{"body":{"nodeType":"YulBlock","src":"23424:79:27","statements":[{"nodeType":"YulAssignment","src":"23434:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23449:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23443:5:27"},"nodeType":"YulFunctionCall","src":"23443:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23434:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23491:5:27"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"23465:25:27"},"nodeType":"YulFunctionCall","src":"23465:32:27"},"nodeType":"YulExpressionStatement","src":"23465:32:27"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"23402:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"23410:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"23418:5:27","type":""}],"src":"23362:141:27"},{"body":{"nodeType":"YulBlock","src":"23585:273:27","statements":[{"body":{"nodeType":"YulBlock","src":"23631:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"23633:77:27"},"nodeType":"YulFunctionCall","src":"23633:79:27"},"nodeType":"YulExpressionStatement","src":"23633:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23606:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"23615:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23602:3:27"},"nodeType":"YulFunctionCall","src":"23602:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"23627:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23598:3:27"},"nodeType":"YulFunctionCall","src":"23598:32:27"},"nodeType":"YulIf","src":"23595:119:27"},{"nodeType":"YulBlock","src":"23724:127:27","statements":[{"nodeType":"YulVariableDeclaration","src":"23739:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"23753:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23743:6:27","type":""}]},{"nodeType":"YulAssignment","src":"23768:73:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23813:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"23824:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23809:3:27"},"nodeType":"YulFunctionCall","src":"23809:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23833:7:27"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"23778:30:27"},"nodeType":"YulFunctionCall","src":"23778:63:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23768:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23555:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"23566:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"23578:6:27","type":""}],"src":"23509:349:27"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611633565b6102bc565b6040516100fb919061167b565b60405180910390f35b61010c61039e565b604051610119919061172f565b60405180910390f35b61013c60048036038101906101379190611787565b610430565b60405161014991906117f5565b60405180910390f35b61016c6004803603810190610167919061183c565b610476565b005b6101886004803603810190610183919061187c565b61058e565b005b6101a4600480360381019061019f919061187c565b6105ee565b005b6101c060048036038101906101bb9190611787565b61060e565b6040516101cd91906117f5565b60405180910390f35b6101f060048036038101906101eb91906118cf565b610695565b6040516101fd919061190b565b60405180910390f35b61020e61074d565b60405161021b919061172f565b60405180910390f35b61023e60048036038101906102399190611952565b6107df565b005b61025a60048036038101906102559190611ac7565b6107f5565b005b61027660048036038101906102719190611787565b610857565b604051610283919061172f565b60405180910390f35b6102a660048036038101906102a19190611b4a565b6108bf565b6040516102b3919061167b565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610953565b5b9050919050565b6060600080546103ad90611bb9565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611bb9565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109bd565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611c5d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a08565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a08565b6108bf565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611cef565b60405180910390fd5b6105898383610a10565b505050565b61059f610599610a08565b82610ac9565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611d81565b60405180910390fd5b6105e9838383610b5e565b505050565b610609838383604051806020016040528060008152506107f5565b505050565b60008061061a83610e58565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611ded565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611e7f565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075c90611bb9565b80601f016020809104026020016040519081016040528092919081815260200182805461078890611bb9565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b6107f16107ea610a08565b8383610e95565b5050565b610806610800610a08565b83610ac9565b610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c90611d81565b60405180910390fd5b61085184848484611002565b50505050565b6060610862826109bd565b600061086c61105e565b9050600081511161088c57604051806020016040528060008152506108b7565b8061089684611075565b6040516020016108a7929190611edb565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c68161114d565b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611ded565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a838361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad58361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b175750610b1681856108bf565b5b80610b5557508373ffffffffffffffffffffffffffffffffffffffff16610b3d84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7e8261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611f71565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b90612003565b60405180910390fd5b610c51838383600161118e565b8273ffffffffffffffffffffffffffffffffffffffff16610c718261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe90611f71565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e5383838360016112b4565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb9061206f565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff5919061167b565b60405180910390a3505050565b61100d848484610b5e565b611019848484846112ba565b611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90612101565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161108484611451565b01905060008167ffffffffffffffff8111156110a3576110a261199c565b5b6040519080825280601f01601f1916602001820160405280156110d55781602001600182028036833780820191505090505b509050600082602001820190505b600115611142578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112c5761112b612121565b5b049450600085141561113d57611142565b6110e3565b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116f83610e58565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60018111156112ae57600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146112225780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461121a919061217f565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146112ad5780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112a591906121b3565b925050819055505b5b50505050565b50505050565b60006112db8473ffffffffffffffffffffffffffffffffffffffff166115a4565b15611444578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611304610a08565b8786866040518563ffffffff1660e01b8152600401611326949392919061225e565b602060405180830381600087803b15801561134057600080fd5b505af192505050801561137157506040513d601f19601f8201168201806040525081019061136e91906122bf565b60015b6113f4573d80600081146113a1576040519150601f19603f3d011682016040523d82523d6000602084013e6113a6565b606091505b506000815114156113ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113e390612101565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611449565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106114af577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816114a5576114a4612121565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106114ec576d04ee2d6d415b85acef810000000083816114e2576114e1612121565b5b0492506020810190505b662386f26fc10000831061151b57662386f26fc10000838161151157611510612121565b5b0492506010810190505b6305f5e1008310611544576305f5e100838161153a57611539612121565b5b0492506008810190505b612710831061156957612710838161155f5761155e612121565b5b0492506004810190505b6064831061158c576064838161158257611581612121565b5b0492506002810190505b600a831061159b576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611610816115db565b811461161b57600080fd5b50565b60008135905061162d81611607565b92915050565b600060208284031215611649576116486115d1565b5b60006116578482850161161e565b91505092915050565b60008115159050919050565b61167581611660565b82525050565b6000602082019050611690600083018461166c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116d05780820151818401526020810190506116b5565b838111156116df576000848401525b50505050565b6000601f19601f8301169050919050565b600061170182611696565b61170b81856116a1565b935061171b8185602086016116b2565b611724816116e5565b840191505092915050565b6000602082019050818103600083015261174981846116f6565b905092915050565b6000819050919050565b61176481611751565b811461176f57600080fd5b50565b6000813590506117818161175b565b92915050565b60006020828403121561179d5761179c6115d1565b5b60006117ab84828501611772565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117df826117b4565b9050919050565b6117ef816117d4565b82525050565b600060208201905061180a60008301846117e6565b92915050565b611819816117d4565b811461182457600080fd5b50565b60008135905061183681611810565b92915050565b60008060408385031215611853576118526115d1565b5b600061186185828601611827565b925050602061187285828601611772565b9150509250929050565b600080600060608486031215611895576118946115d1565b5b60006118a386828701611827565b93505060206118b486828701611827565b92505060406118c586828701611772565b9150509250925092565b6000602082840312156118e5576118e46115d1565b5b60006118f384828501611827565b91505092915050565b61190581611751565b82525050565b600060208201905061192060008301846118fc565b92915050565b61192f81611660565b811461193a57600080fd5b50565b60008135905061194c81611926565b92915050565b60008060408385031215611969576119686115d1565b5b600061197785828601611827565b92505060206119888582860161193d565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6119d4826116e5565b810181811067ffffffffffffffff821117156119f3576119f261199c565b5b80604052505050565b6000611a066115c7565b9050611a1282826119cb565b919050565b600067ffffffffffffffff821115611a3257611a3161199c565b5b611a3b826116e5565b9050602081019050919050565b82818337600083830152505050565b6000611a6a611a6584611a17565b6119fc565b905082815260208101848484011115611a8657611a85611997565b5b611a91848285611a48565b509392505050565b600082601f830112611aae57611aad611992565b5b8135611abe848260208601611a57565b91505092915050565b60008060008060808587031215611ae157611ae06115d1565b5b6000611aef87828801611827565b9450506020611b0087828801611827565b9350506040611b1187828801611772565b925050606085013567ffffffffffffffff811115611b3257611b316115d6565b5b611b3e87828801611a99565b91505092959194509250565b60008060408385031215611b6157611b606115d1565b5b6000611b6f85828601611827565b9250506020611b8085828601611827565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611bd157607f821691505b60208210811415611be557611be4611b8a565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611c476021836116a1565b9150611c5282611beb565b604082019050919050565b60006020820190508181036000830152611c7681611c3a565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611cd9603d836116a1565b9150611ce482611c7d565b604082019050919050565b60006020820190508181036000830152611d0881611ccc565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611d6b602d836116a1565b9150611d7682611d0f565b604082019050919050565b60006020820190508181036000830152611d9a81611d5e565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611dd76018836116a1565b9150611de282611da1565b602082019050919050565b60006020820190508181036000830152611e0681611dca565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611e696029836116a1565b9150611e7482611e0d565b604082019050919050565b60006020820190508181036000830152611e9881611e5c565b9050919050565b600081905092915050565b6000611eb582611696565b611ebf8185611e9f565b9350611ecf8185602086016116b2565b80840191505092915050565b6000611ee78285611eaa565b9150611ef38284611eaa565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611f5b6025836116a1565b9150611f6682611eff565b604082019050919050565b60006020820190508181036000830152611f8a81611f4e565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611fed6024836116a1565b9150611ff882611f91565b604082019050919050565b6000602082019050818103600083015261201c81611fe0565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b60006120596019836116a1565b915061206482612023565b602082019050919050565b600060208201905081810360008301526120888161204c565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b60006120eb6032836116a1565b91506120f68261208f565b604082019050919050565b6000602082019050818103600083015261211a816120de565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061218a82611751565b915061219583611751565b9250828210156121a8576121a7612150565b5b828203905092915050565b60006121be82611751565b91506121c983611751565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156121fe576121fd612150565b5b828201905092915050565b600081519050919050565b600082825260208201905092915050565b600061223082612209565b61223a8185612214565b935061224a8185602086016116b2565b612253816116e5565b840191505092915050565b600060808201905061227360008301876117e6565b61228060208301866117e6565b61228d60408301856118fc565b818103606083015261229f8184612225565b905095945050505050565b6000815190506122b981611607565b92915050565b6000602082840312156122d5576122d46115d1565b5b60006122e3848285016122aa565b9150509291505056fea2646970667358221220773aac1846fbb6554e39d2f4d3272c3082f1ea30229289fdb6a5f87ebcf98d7d64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1633 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x183C JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x187C JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x187C JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x18CF JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x190B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1AC7 JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x172F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x953 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1CEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA10 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA08 JUMP JUMPDEST DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x61A DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1E7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x1BB9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0x7EA PUSH2 0xA08 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x806 PUSH2 0x800 PUSH2 0xA08 JUMP JUMPDEST DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x851 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x862 DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86C PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B7 JUMP JUMPDEST DUP1 PUSH2 0x896 DUP5 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A7 SWAP3 SWAP2 SWAP1 PUSH2 0x1EDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x114D JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x1DED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA83 DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD5 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB17 JUMPI POP PUSH2 0xB16 DUP2 DUP6 PUSH2 0x8BF JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB55 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3D DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP1 PUSH2 0x2003 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC51 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x118E JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC71 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP1 PUSH2 0x1F71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE53 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP1 PUSH2 0x206F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x100D DUP5 DUP5 DUP5 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x1019 DUP5 DUP5 DUP5 DUP5 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1084 DUP5 PUSH2 0x1451 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A2 PUSH2 0x199C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1142 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x112C JUMPI PUSH2 0x112B PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x113D JUMPI PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x116F DUP4 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12AE JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1222 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x121A SWAP2 SWAP1 PUSH2 0x217F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12AD JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12A5 SWAP2 SWAP1 PUSH2 0x21B3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12DB DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15A4 JUMP JUMPDEST ISZERO PUSH2 0x1444 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1304 PUSH2 0xA08 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1326 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x225E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1371 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x136E SWAP2 SWAP1 PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13F4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13A1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13A6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x13EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E3 SWAP1 PUSH2 0x2101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x14AF JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x14A5 JUMPI PUSH2 0x14A4 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x14EC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x14E2 JUMPI PUSH2 0x14E1 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x151B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1511 JUMPI PUSH2 0x1510 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1544 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x153A JUMPI PUSH2 0x1539 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1569 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x155F JUMPI PUSH2 0x155E PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x158C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1582 JUMPI PUSH2 0x1581 PUSH2 0x2121 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x159B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1610 DUP2 PUSH2 0x15DB JUMP JUMPDEST DUP2 EQ PUSH2 0x161B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x162D DUP2 PUSH2 0x1607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1649 JUMPI PUSH2 0x1648 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1657 DUP5 DUP3 DUP6 ADD PUSH2 0x161E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1675 DUP2 PUSH2 0x1660 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1690 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x166C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16D0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16B5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16DF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1701 DUP3 PUSH2 0x1696 JUMP JUMPDEST PUSH2 0x170B DUP2 DUP6 PUSH2 0x16A1 JUMP JUMPDEST SWAP4 POP PUSH2 0x171B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16B2 JUMP JUMPDEST PUSH2 0x1724 DUP2 PUSH2 0x16E5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1749 DUP2 DUP5 PUSH2 0x16F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1764 DUP2 PUSH2 0x1751 JUMP JUMPDEST DUP2 EQ PUSH2 0x176F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1781 DUP2 PUSH2 0x175B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17AB DUP5 DUP3 DUP6 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DF DUP3 PUSH2 0x17B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17EF DUP2 PUSH2 0x17D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x180A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1819 DUP2 PUSH2 0x17D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1836 DUP2 PUSH2 0x1810 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1853 JUMPI PUSH2 0x1852 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1861 DUP6 DUP3 DUP7 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1872 DUP6 DUP3 DUP7 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1895 JUMPI PUSH2 0x1894 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18A3 DUP7 DUP3 DUP8 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18B4 DUP7 DUP3 DUP8 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18C5 DUP7 DUP3 DUP8 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18E5 JUMPI PUSH2 0x18E4 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18F3 DUP5 DUP3 DUP6 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1905 DUP2 PUSH2 0x1751 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1920 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x192F DUP2 PUSH2 0x1660 JUMP JUMPDEST DUP2 EQ PUSH2 0x193A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x194C DUP2 PUSH2 0x1926 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1969 JUMPI PUSH2 0x1968 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1977 DUP6 DUP3 DUP7 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1988 DUP6 DUP3 DUP7 ADD PUSH2 0x193D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x19D4 DUP3 PUSH2 0x16E5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x19F3 JUMPI PUSH2 0x19F2 PUSH2 0x199C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A06 PUSH2 0x15C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A12 DUP3 DUP3 PUSH2 0x19CB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A32 JUMPI PUSH2 0x1A31 PUSH2 0x199C JUMP JUMPDEST JUMPDEST PUSH2 0x1A3B DUP3 PUSH2 0x16E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6A PUSH2 0x1A65 DUP5 PUSH2 0x1A17 JUMP JUMPDEST PUSH2 0x19FC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A86 JUMPI PUSH2 0x1A85 PUSH2 0x1997 JUMP JUMPDEST JUMPDEST PUSH2 0x1A91 DUP5 DUP3 DUP6 PUSH2 0x1A48 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AAE JUMPI PUSH2 0x1AAD PUSH2 0x1992 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1ABE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A57 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1AE1 JUMPI PUSH2 0x1AE0 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AEF DUP8 DUP3 DUP9 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1B00 DUP8 DUP3 DUP9 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1B11 DUP8 DUP3 DUP9 ADD PUSH2 0x1772 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B32 JUMPI PUSH2 0x1B31 PUSH2 0x15D6 JUMP JUMPDEST JUMPDEST PUSH2 0x1B3E DUP8 DUP3 DUP9 ADD PUSH2 0x1A99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B61 JUMPI PUSH2 0x1B60 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B6F DUP6 DUP3 DUP7 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B80 DUP6 DUP3 DUP7 ADD PUSH2 0x1827 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1BD1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1BE5 JUMPI PUSH2 0x1BE4 PUSH2 0x1B8A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C47 PUSH1 0x21 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C52 DUP3 PUSH2 0x1BEB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C76 DUP2 PUSH2 0x1C3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD9 PUSH1 0x3D DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE4 DUP3 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D08 DUP2 PUSH2 0x1CCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6B PUSH1 0x2D DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D76 DUP3 PUSH2 0x1D0F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D9A DUP2 PUSH2 0x1D5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD7 PUSH1 0x18 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE2 DUP3 PUSH2 0x1DA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E06 DUP2 PUSH2 0x1DCA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E69 PUSH1 0x29 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E74 DUP3 PUSH2 0x1E0D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E98 DUP2 PUSH2 0x1E5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB5 DUP3 PUSH2 0x1696 JUMP JUMPDEST PUSH2 0x1EBF DUP2 DUP6 PUSH2 0x1E9F JUMP JUMPDEST SWAP4 POP PUSH2 0x1ECF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16B2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE7 DUP3 DUP6 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF3 DUP3 DUP5 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F5B PUSH1 0x25 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F66 DUP3 PUSH2 0x1EFF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F8A DUP2 PUSH2 0x1F4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FED PUSH1 0x24 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF8 DUP3 PUSH2 0x1F91 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x201C DUP2 PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2059 PUSH1 0x19 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2064 DUP3 PUSH2 0x2023 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2088 DUP2 PUSH2 0x204C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EB PUSH1 0x32 DUP4 PUSH2 0x16A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F6 DUP3 PUSH2 0x208F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x211A DUP2 PUSH2 0x20DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x218A DUP3 PUSH2 0x1751 JUMP JUMPDEST SWAP2 POP PUSH2 0x2195 DUP4 PUSH2 0x1751 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x21A8 JUMPI PUSH2 0x21A7 PUSH2 0x2150 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21BE DUP3 PUSH2 0x1751 JUMP JUMPDEST SWAP2 POP PUSH2 0x21C9 DUP4 PUSH2 0x1751 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x21FE JUMPI PUSH2 0x21FD PUSH2 0x2150 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2230 DUP3 PUSH2 0x2209 JUMP JUMPDEST PUSH2 0x223A DUP2 DUP6 PUSH2 0x2214 JUMP JUMPDEST SWAP4 POP PUSH2 0x224A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16B2 JUMP JUMPDEST PUSH2 0x2253 DUP2 PUSH2 0x16E5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2273 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x2280 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x17E6 JUMP JUMPDEST PUSH2 0x228D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18FC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x229F DUP2 DUP5 PUSH2 0x2225 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x22B9 DUP2 PUSH2 0x1607 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22D5 JUMPI PUSH2 0x22D4 PUSH2 0x15D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22E3 DUP5 DUP3 DUP6 ADD PUSH2 0x22AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x3AAC1846FBB6554E39D2F4D3272C3082F1EA30229289FDB6 0xA5 0xF8 PUSH31 0xBCF98D7D64736F6C6343000809003300000000000000000000000000000000 ","sourceMap":"628:16327:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5004:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5249:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2801:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;4388:162::-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:21:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13466:133:10:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:16:-;693:7;719:10;712:17;;640:96;:::o;12768:171:10:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;6838:115::-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;13075:307::-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;415:696:18:-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;1032:21;;;1048:5;;1032:21;788:280;;;1088:6;1081:13;;;;;415:696;;;:::o;7256:126:10:-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;15698:396::-;15882:1;15870:9;:13;15866:222;;;15919:1;15903:18;;:4;:18;;;15899:85;;15960:9;15941;:15;15951:4;15941:15;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;15899:85;16015:1;16001:16;;:2;:16;;;15997:81;;16054:9;16037;:13;16047:2;16037:13;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;15997:81;15866:222;15698:396;;;;:::o;16800:153::-;;;;;:::o;14151:831::-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;9889:890:23:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;1175:320:15:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:75:27:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:619::-;5015:6;5023;5031;5080:2;5068:9;5059:7;5055:23;5051:32;5048:119;;;5086:79;;:::i;:::-;5048:119;5206:1;5231:53;5276:7;5267:6;5256:9;5252:22;5231:53;:::i;:::-;5221:63;;5177:117;5333:2;5359:53;5404:7;5395:6;5384:9;5380:22;5359:53;:::i;:::-;5349:63;;5304:118;5461:2;5487:53;5532:7;5523:6;5512:9;5508:22;5487:53;:::i;:::-;5477:63;;5432:118;4938:619;;;;;:::o;5563:329::-;5622:6;5671:2;5659:9;5650:7;5646:23;5642:32;5639:119;;;5677:79;;:::i;:::-;5639:119;5797:1;5822:53;5867:7;5858:6;5847:9;5843:22;5822:53;:::i;:::-;5812:63;;5768:117;5563:329;;;;:::o;5898:118::-;5985:24;6003:5;5985:24;:::i;:::-;5980:3;5973:37;5898:118;;:::o;6022:222::-;6115:4;6153:2;6142:9;6138:18;6130:26;;6166:71;6234:1;6223:9;6219:17;6210:6;6166:71;:::i;:::-;6022:222;;;;:::o;6250:116::-;6320:21;6335:5;6320:21;:::i;:::-;6313:5;6310:32;6300:60;;6356:1;6353;6346:12;6300:60;6250:116;:::o;6372:133::-;6415:5;6453:6;6440:20;6431:29;;6469:30;6493:5;6469:30;:::i;:::-;6372:133;;;;:::o;6511:468::-;6576:6;6584;6633:2;6621:9;6612:7;6608:23;6604:32;6601:119;;;6639:79;;:::i;:::-;6601:119;6759:1;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6730:117;6886:2;6912:50;6954:7;6945:6;6934:9;6930:22;6912:50;:::i;:::-;6902:60;;6857:115;6511:468;;;;;:::o;6985:117::-;7094:1;7091;7084:12;7108:117;7217:1;7214;7207:12;7231:180;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:281;7500:27;7522:4;7500:27;:::i;:::-;7492:6;7488:40;7630:6;7618:10;7615:22;7594:18;7582:10;7579:34;7576:62;7573:88;;;7641:18;;:::i;:::-;7573:88;7681:10;7677:2;7670:22;7460:238;7417:281;;:::o;7704:129::-;7738:6;7765:20;;:::i;:::-;7755:30;;7794:33;7822:4;7814:6;7794:33;:::i;:::-;7704:129;;;:::o;7839:307::-;7900:4;7990:18;7982:6;7979:30;7976:56;;;8012:18;;:::i;:::-;7976:56;8050:29;8072:6;8050:29;:::i;:::-;8042:37;;8134:4;8128;8124:15;8116:23;;7839:307;;;:::o;8152:154::-;8236:6;8231:3;8226;8213:30;8298:1;8289:6;8284:3;8280:16;8273:27;8152:154;;;:::o;8312:410::-;8389:5;8414:65;8430:48;8471:6;8430:48;:::i;:::-;8414:65;:::i;:::-;8405:74;;8502:6;8495:5;8488:21;8540:4;8533:5;8529:16;8578:3;8569:6;8564:3;8560:16;8557:25;8554:112;;;8585:79;;:::i;:::-;8554:112;8675:41;8709:6;8704:3;8699;8675:41;:::i;:::-;8395:327;8312:410;;;;;:::o;8741:338::-;8796:5;8845:3;8838:4;8830:6;8826:17;8822:27;8812:122;;8853:79;;:::i;:::-;8812:122;8970:6;8957:20;8995:78;9069:3;9061:6;9054:4;9046:6;9042:17;8995:78;:::i;:::-;8986:87;;8802:277;8741:338;;;;:::o;9085:943::-;9180:6;9188;9196;9204;9253:3;9241:9;9232:7;9228:23;9224:33;9221:120;;;9260:79;;:::i;:::-;9221:120;9380:1;9405:53;9450:7;9441:6;9430:9;9426:22;9405:53;:::i;:::-;9395:63;;9351:117;9507:2;9533:53;9578:7;9569:6;9558:9;9554:22;9533:53;:::i;:::-;9523:63;;9478:118;9635:2;9661:53;9706:7;9697:6;9686:9;9682:22;9661:53;:::i;:::-;9651:63;;9606:118;9791:2;9780:9;9776:18;9763:32;9822:18;9814:6;9811:30;9808:117;;;9844:79;;:::i;:::-;9808:117;9949:62;10003:7;9994:6;9983:9;9979:22;9949:62;:::i;:::-;9939:72;;9734:287;9085:943;;;;;;;:::o;10034:474::-;10102:6;10110;10159:2;10147:9;10138:7;10134:23;10130:32;10127:119;;;10165:79;;:::i;:::-;10127:119;10285:1;10310:53;10355:7;10346:6;10335:9;10331:22;10310:53;:::i;:::-;10300:63;;10256:117;10412:2;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10383:118;10034:474;;;;;:::o;10514:180::-;10562:77;10559:1;10552:88;10659:4;10656:1;10649:15;10683:4;10680:1;10673:15;10700:320;10744:6;10781:1;10775:4;10771:12;10761:22;;10828:1;10822:4;10818:12;10849:18;10839:81;;10905:4;10897:6;10893:17;10883:27;;10839:81;10967:2;10959:6;10956:14;10936:18;10933:38;10930:84;;;10986:18;;:::i;:::-;10930:84;10751:269;10700:320;;;:::o;11026:220::-;11166:34;11162:1;11154:6;11150:14;11143:58;11235:3;11230:2;11222:6;11218:15;11211:28;11026:220;:::o;11252:366::-;11394:3;11415:67;11479:2;11474:3;11415:67;:::i;:::-;11408:74;;11491:93;11580:3;11491:93;:::i;:::-;11609:2;11604:3;11600:12;11593:19;;11252:366;;;:::o;11624:419::-;11790:4;11828:2;11817:9;11813:18;11805:26;;11877:9;11871:4;11867:20;11863:1;11852:9;11848:17;11841:47;11905:131;12031:4;11905:131;:::i;:::-;11897:139;;11624:419;;;:::o;12049:248::-;12189:34;12185:1;12177:6;12173:14;12166:58;12258:31;12253:2;12245:6;12241:15;12234:56;12049:248;:::o;12303:366::-;12445:3;12466:67;12530:2;12525:3;12466:67;:::i;:::-;12459:74;;12542:93;12631:3;12542:93;:::i;:::-;12660:2;12655:3;12651:12;12644:19;;12303:366;;;:::o;12675:419::-;12841:4;12879:2;12868:9;12864:18;12856:26;;12928:9;12922:4;12918:20;12914:1;12903:9;12899:17;12892:47;12956:131;13082:4;12956:131;:::i;:::-;12948:139;;12675:419;;;:::o;13100:232::-;13240:34;13236:1;13228:6;13224:14;13217:58;13309:15;13304:2;13296:6;13292:15;13285:40;13100:232;:::o;13338:366::-;13480:3;13501:67;13565:2;13560:3;13501:67;:::i;:::-;13494:74;;13577:93;13666:3;13577:93;:::i;:::-;13695:2;13690:3;13686:12;13679:19;;13338:366;;;:::o;13710:419::-;13876:4;13914:2;13903:9;13899:18;13891:26;;13963:9;13957:4;13953:20;13949:1;13938:9;13934:17;13927:47;13991:131;14117:4;13991:131;:::i;:::-;13983:139;;13710:419;;;:::o;14135:174::-;14275:26;14271:1;14263:6;14259:14;14252:50;14135:174;:::o;14315:366::-;14457:3;14478:67;14542:2;14537:3;14478:67;:::i;:::-;14471:74;;14554:93;14643:3;14554:93;:::i;:::-;14672:2;14667:3;14663:12;14656:19;;14315:366;;;:::o;14687:419::-;14853:4;14891:2;14880:9;14876:18;14868:26;;14940:9;14934:4;14930:20;14926:1;14915:9;14911:17;14904:47;14968:131;15094:4;14968:131;:::i;:::-;14960:139;;14687:419;;;:::o;15112:228::-;15252:34;15248:1;15240:6;15236:14;15229:58;15321:11;15316:2;15308:6;15304:15;15297:36;15112:228;:::o;15346:366::-;15488:3;15509:67;15573:2;15568:3;15509:67;:::i;:::-;15502:74;;15585:93;15674:3;15585:93;:::i;:::-;15703:2;15698:3;15694:12;15687:19;;15346:366;;;:::o;15718:419::-;15884:4;15922:2;15911:9;15907:18;15899:26;;15971:9;15965:4;15961:20;15957:1;15946:9;15942:17;15935:47;15999:131;16125:4;15999:131;:::i;:::-;15991:139;;15718:419;;;:::o;16143:148::-;16245:11;16282:3;16267:18;;16143:148;;;;:::o;16297:377::-;16403:3;16431:39;16464:5;16431:39;:::i;:::-;16486:89;16568:6;16563:3;16486:89;:::i;:::-;16479:96;;16584:52;16629:6;16624:3;16617:4;16610:5;16606:16;16584:52;:::i;:::-;16661:6;16656:3;16652:16;16645:23;;16407:267;16297:377;;;;:::o;16680:435::-;16860:3;16882:95;16973:3;16964:6;16882:95;:::i;:::-;16875:102;;16994:95;17085:3;17076:6;16994:95;:::i;:::-;16987:102;;17106:3;17099:10;;16680:435;;;;;:::o;17121:224::-;17261:34;17257:1;17249:6;17245:14;17238:58;17330:7;17325:2;17317:6;17313:15;17306:32;17121:224;:::o;17351:366::-;17493:3;17514:67;17578:2;17573:3;17514:67;:::i;:::-;17507:74;;17590:93;17679:3;17590:93;:::i;:::-;17708:2;17703:3;17699:12;17692:19;;17351:366;;;:::o;17723:419::-;17889:4;17927:2;17916:9;17912:18;17904:26;;17976:9;17970:4;17966:20;17962:1;17951:9;17947:17;17940:47;18004:131;18130:4;18004:131;:::i;:::-;17996:139;;17723:419;;;:::o;18148:223::-;18288:34;18284:1;18276:6;18272:14;18265:58;18357:6;18352:2;18344:6;18340:15;18333:31;18148:223;:::o;18377:366::-;18519:3;18540:67;18604:2;18599:3;18540:67;:::i;:::-;18533:74;;18616:93;18705:3;18616:93;:::i;:::-;18734:2;18729:3;18725:12;18718:19;;18377:366;;;:::o;18749:419::-;18915:4;18953:2;18942:9;18938:18;18930:26;;19002:9;18996:4;18992:20;18988:1;18977:9;18973:17;18966:47;19030:131;19156:4;19030:131;:::i;:::-;19022:139;;18749:419;;;:::o;19174:175::-;19314:27;19310:1;19302:6;19298:14;19291:51;19174:175;:::o;19355:366::-;19497:3;19518:67;19582:2;19577:3;19518:67;:::i;:::-;19511:74;;19594:93;19683:3;19594:93;:::i;:::-;19712:2;19707:3;19703:12;19696:19;;19355:366;;;:::o;19727:419::-;19893:4;19931:2;19920:9;19916:18;19908:26;;19980:9;19974:4;19970:20;19966:1;19955:9;19951:17;19944:47;20008:131;20134:4;20008:131;:::i;:::-;20000:139;;19727:419;;;:::o;20152:237::-;20292:34;20288:1;20280:6;20276:14;20269:58;20361:20;20356:2;20348:6;20344:15;20337:45;20152:237;:::o;20395:366::-;20537:3;20558:67;20622:2;20617:3;20558:67;:::i;:::-;20551:74;;20634:93;20723:3;20634:93;:::i;:::-;20752:2;20747:3;20743:12;20736:19;;20395:366;;;:::o;20767:419::-;20933:4;20971:2;20960:9;20956:18;20948:26;;21020:9;21014:4;21010:20;21006:1;20995:9;20991:17;20984:47;21048:131;21174:4;21048:131;:::i;:::-;21040:139;;20767:419;;;:::o;21192:180::-;21240:77;21237:1;21230:88;21337:4;21334:1;21327:15;21361:4;21358:1;21351:15;21378:180;21426:77;21423:1;21416:88;21523:4;21520:1;21513:15;21547:4;21544:1;21537:15;21564:191;21604:4;21624:20;21642:1;21624:20;:::i;:::-;21619:25;;21658:20;21676:1;21658:20;:::i;:::-;21653:25;;21697:1;21694;21691:8;21688:34;;;21702:18;;:::i;:::-;21688:34;21747:1;21744;21740:9;21732:17;;21564:191;;;;:::o;21761:305::-;21801:3;21820:20;21838:1;21820:20;:::i;:::-;21815:25;;21854:20;21872:1;21854:20;:::i;:::-;21849:25;;22008:1;21940:66;21936:74;21933:1;21930:81;21927:107;;;22014:18;;:::i;:::-;21927:107;22058:1;22055;22051:9;22044:16;;21761:305;;;;:::o;22072:98::-;22123:6;22157:5;22151:12;22141:22;;22072:98;;;:::o;22176:168::-;22259:11;22293:6;22288:3;22281:19;22333:4;22328:3;22324:14;22309:29;;22176:168;;;;:::o;22350:360::-;22436:3;22464:38;22496:5;22464:38;:::i;:::-;22518:70;22581:6;22576:3;22518:70;:::i;:::-;22511:77;;22597:52;22642:6;22637:3;22630:4;22623:5;22619:16;22597:52;:::i;:::-;22674:29;22696:6;22674:29;:::i;:::-;22669:3;22665:39;22658:46;;22440:270;22350:360;;;;:::o;22716:640::-;22911:4;22949:3;22938:9;22934:19;22926:27;;22963:71;23031:1;23020:9;23016:17;23007:6;22963:71;:::i;:::-;23044:72;23112:2;23101:9;23097:18;23088:6;23044:72;:::i;:::-;23126;23194:2;23183:9;23179:18;23170:6;23126:72;:::i;:::-;23245:9;23239:4;23235:20;23230:2;23219:9;23215:18;23208:48;23273:76;23344:4;23335:6;23273:76;:::i;:::-;23265:84;;22716:640;;;;;;;:::o;23362:141::-;23418:5;23449:6;23443:13;23434:22;;23465:32;23491:5;23465:32;:::i;:::-;23362:141;;;;:::o;23509:349::-;23578:6;23627:2;23615:9;23606:7;23602:23;23598:32;23595:119;;;23633:79;;:::i;:::-;23595:119;23753:1;23778:63;23833:7;23824:6;23813:9;23809:22;23778:63;:::i;:::-;23768:73;;23724:127;23509:349;;;;:::o"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899c87a849a94c848818d0afede6961d2c87665af1dd23a5c983e78981a65691\",\"dweb:/ipfs/QmUeFDffQRDmX87FX3MRxN3bmpUxDTWpWLwPJzeAJ3yF6H\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220802a43d16b56d54d3186b9e894a204a536592a0e2ae45a746d0f0087c166d37964736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0x2A NUMBER 0xD1 PUSH12 0x56D54D3186B9E894A204A536 MSIZE 0x2A 0xE 0x2A 0xE4 GAS PUSH21 0x6D0F0087C166D37964736F6C634300080900330000 ","sourceMap":"194:8964:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220802a43d16b56d54d3186b9e894a204a536592a0e2ae45a746d0f0087c166d37964736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0x2A NUMBER 0xD1 PUSH12 0x56D54D3186B9E894A204A536 MSIZE 0x2A 0xE 0x2A 0xE4 GAS PUSH21 0x6D0F0087C166D37964736F6C634300080900330000 ","sourceMap":"194:8964:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206b1c31e7b962abcf83f83118011fe94b3f162b24dd0e3a485631d28652e7e89264736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x1C31E7B962ABCF83F8311801 0x1F 0xE9 0x4B EXTCODEHASH AND 0x2B 0x24 0xDD 0xE GASPRICE BASEFEE JUMP BALANCE 0xD2 DUP7 MSTORE 0xE7 0xE8 SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"424:971:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206b1c31e7b962abcf83f83118011fe94b3f162b24dd0e3a485631d28652e7e89264736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x1C31E7B962ABCF83F8311801 0x1F 0xE9 0x4B EXTCODEHASH AND 0x2B 0x24 0xDD 0xE GASPRICE BASEFEE JUMP BALANCE 0xD2 DUP7 MSTORE 0xE7 0xE8 SWAP3 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"424:971:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201afbc5b38bfb129f18c184525d965a8dab7a58ed0005ea6b41a960eafc78cbc864736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xFB 0xC5 0xB3 DUP12 0xFB SLT SWAP16 XOR 0xC1 DUP5 MSTORE 0x5D SWAP7 GAS DUP14 0xAB PUSH27 0x58ED0005EA6B41A960EAFC78CBC864736F6C634300080900330000 ","sourceMap":"188:2065:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201afbc5b38bfb129f18c184525d965a8dab7a58ed0005ea6b41a960eafc78cbc864736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xFB 0xC5 0xB3 DUP12 0xFB SLT SWAP16 XOR 0xC1 DUP5 MSTORE 0x5D SWAP7 GAS DUP14 0xAB PUSH27 0x58ED0005EA6B41A960EAFC78CBC864736F6C634300080900330000 ","sourceMap":"188:2065:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eab25f1ef58678c84a28cc84508335f288a5b617af9553d15b1448800049ae5a64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xB2 0x5F 0x1E CREATE2 DUP7 PUSH25 0xC84A28CC84508335F288A5B617AF9553D15B1448800049AE5A PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"369:8168:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eab25f1ef58678c84a28cc84508335f288a5b617af9553d15b1448800049ae5a64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xB2 0x5F 0x1E CREATE2 DUP7 PUSH25 0xC84A28CC84508335F288A5B617AF9553D15B1448800049AE5A PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"369:8168:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204c79a003a8186f14f4131b5cd92ba33af17ae859389ff59d5077d8043ae6fe2264736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH26 0xA003A8186F14F4131B5CD92BA33AF17AE859389FF59D5077D804 GASPRICE 0xE6 INVALID 0x22 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"202:12302:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204c79a003a8186f14f4131b5cd92ba33af17ae859389ff59d5077d8043ae6fe2264736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH26 0xA003A8186F14F4131B5CD92BA33AF17AE859389FF59D5077D804 GASPRICE 0xE6 INVALID 0x22 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"202:12302:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203824c6771dcaaef335540ac2c0c6b4aa31d189d069ae1f18c030e9afaee0d41c64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0x24 0xC6 PUSH24 0x1DCAAEF335540AC2C0C6B4AA31D189D069AE1F18C030E9AF 0xAE 0xE0 0xD4 SHR PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"927:34153:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203824c6771dcaaef335540ac2c0c6b4aa31d189d069ae1f18c030e9afaee0d41c64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0x24 0xC6 PUSH24 0x1DCAAEF335540AC2C0C6B4AA31D189D069AE1F18C030E9AF 0xAE 0xE0 0xD4 SHR PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"927:34153:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}"}},"contracts/SbfNFT.sol":{"SbfNFT":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"string","name":"tokenURI","type":"string"}],"name":"mintNFT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2000":{"entryPoint":null,"id":2000,"parameterSlots":2,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_6751":{"entryPoint":null,"id":6751,"parameterSlots":0,"returnSlots":0},"@_msgSender_3510":{"entryPoint":216,"id":3510,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":224,"id":111,"parameterSlots":1,"returnSlots":0},"extract_byte_array_length":{"entryPoint":645,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x22":{"entryPoint":598,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:516:27","statements":[{"body":{"nodeType":"YulBlock","src":"35:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"52:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"55:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45:6:27"},"nodeType":"YulFunctionCall","src":"45:88:27"},"nodeType":"YulExpressionStatement","src":"45:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"149:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"152:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"142:6:27"},"nodeType":"YulFunctionCall","src":"142:15:27"},"nodeType":"YulExpressionStatement","src":"142:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"173:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"176:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"166:6:27"},"nodeType":"YulFunctionCall","src":"166:15:27"},"nodeType":"YulExpressionStatement","src":"166:15:27"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"7:180:27"},{"body":{"nodeType":"YulBlock","src":"244:269:27","statements":[{"nodeType":"YulAssignment","src":"254:22:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"268:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"274:1:27","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"264:3:27"},"nodeType":"YulFunctionCall","src":"264:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"254:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"285:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"315:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"321:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"311:3:27"},"nodeType":"YulFunctionCall","src":"311:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"289:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"362:51:27","statements":[{"nodeType":"YulAssignment","src":"376:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"390:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"398:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"386:3:27"},"nodeType":"YulFunctionCall","src":"386:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"376:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"342:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"335:6:27"},"nodeType":"YulFunctionCall","src":"335:26:27"},"nodeType":"YulIf","src":"332:81:27"},{"body":{"nodeType":"YulBlock","src":"465:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"479:16:27"},"nodeType":"YulFunctionCall","src":"479:18:27"},"nodeType":"YulExpressionStatement","src":"479:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"429:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"452:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"460:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"449:2:27"},"nodeType":"YulFunctionCall","src":"449:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"426:2:27"},"nodeType":"YulFunctionCall","src":"426:38:27"},"nodeType":"YulIf","src":"423:84:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"228:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"237:6:27","type":""}],"src":"193:320:27"}]},"contents":"{\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040518060400160405280601281526020017f534246204d656d62657273686970204e465400000000000000000000000000008152506040518060400160405280600381526020017f5342460000000000000000000000000000000000000000000000000000000000815250816000908051906020019062000096929190620001a6565b508060019080519060200190620000af929190620001a6565b505050620000d2620000c6620000d860201b60201c565b620000e060201b60201c565b620002bb565b600033905090565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001b49062000285565b90600052602060002090601f016020900481019282620001d8576000855562000224565b82601f10620001f357805160ff191683800117855562000224565b8280016001018555821562000224579182015b828111156200022357825182559160200191906001019062000206565b5b50905062000233919062000237565b5090565b5b808211156200025257600081600090555060010162000238565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200029e57607f821691505b60208210811415620002b557620002b462000256565b5b50919050565b612de980620002cb6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063b88d4fde11610071578063b88d4fde146102a4578063c87b56dd146102c0578063e985e9c5146102f0578063eacabe1414610320578063f2fde38b146103505761010b565b8063715018a6146102425780638da5cb5b1461024c57806395d89b411461026a578063a22cb465146102885761010b565b806323b872dd116100de57806323b872dd146101aa57806342842e0e146101c65780636352211e146101e257806370a08231146102125761010b565b806301ffc9a71461011057806306fdde0314610140578063081812fc1461015e578063095ea7b31461018e575b600080fd5b61012a60048036038101906101259190611d95565b61036c565b6040516101379190611ddd565b60405180910390f35b61014861044e565b6040516101559190611e91565b60405180910390f35b61017860048036038101906101739190611ee9565b6104e0565b6040516101859190611f57565b60405180910390f35b6101a860048036038101906101a39190611f9e565b610526565b005b6101c460048036038101906101bf9190611fde565b61063e565b005b6101e060048036038101906101db9190611fde565b61069e565b005b6101fc60048036038101906101f79190611ee9565b6106be565b6040516102099190611f57565b60405180910390f35b61022c60048036038101906102279190612031565b610745565b604051610239919061206d565b60405180910390f35b61024a6107fd565b005b610254610811565b6040516102619190611f57565b60405180910390f35b61027261083b565b60405161027f9190611e91565b60405180910390f35b6102a2600480360381019061029d91906120b4565b6108cd565b005b6102be60048036038101906102b99190612229565b6108e3565b005b6102da60048036038101906102d59190611ee9565b610945565b6040516102e79190611e91565b60405180910390f35b61030a600480360381019061030591906122ac565b610a58565b6040516103179190611ddd565b60405180910390f35b61033a6004803603810190610335919061238d565b610aec565b604051610347919061206d565b60405180910390f35b61036a60048036038101906103659190612031565b610b2c565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061043757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610447575061044682610bb0565b5b9050919050565b60606000805461045d90612418565b80601f016020809104026020016040519081016040528092919081815260200182805461048990612418565b80156104d65780601f106104ab576101008083540402835291602001916104d6565b820191906000526020600020905b8154815290600101906020018083116104b957829003601f168201915b5050505050905090565b60006104eb82610c1a565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610531826106be565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610599906124bc565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105c1610c65565b73ffffffffffffffffffffffffffffffffffffffff1614806105f057506105ef816105ea610c65565b610a58565b5b61062f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106269061254e565b60405180910390fd5b6106398383610c6d565b505050565b61064f610649610c65565b82610d26565b61068e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610685906125e0565b60405180910390fd5b610699838383610dbb565b505050565b6106b9838383604051806020016040528060008152506108e3565b505050565b6000806106ca836110b5565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561073c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107339061264c565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ad906126de565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6108056110f2565b61080f6000611170565b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461084a90612418565b80601f016020809104026020016040519081016040528092919081815260200182805461087690612418565b80156108c35780601f10610898576101008083540402835291602001916108c3565b820191906000526020600020905b8154815290600101906020018083116108a657829003601f168201915b5050505050905090565b6108df6108d8610c65565b8383611236565b5050565b6108f46108ee610c65565b83610d26565b610933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092a906125e0565b60405180910390fd5b61093f848484846113a3565b50505050565b606061095082610c1a565b600060066000848152602001908152602001600020805461097090612418565b80601f016020809104026020016040519081016040528092919081815260200182805461099c90612418565b80156109e95780601f106109be576101008083540402835291602001916109e9565b820191906000526020600020905b8154815290600101906020018083116109cc57829003601f168201915b5050505050905060006109fa6113ff565b9050600081511415610a10578192505050610a53565b600082511115610a45578082604051602001610a2d92919061273a565b60405160208183030381529060405292505050610a53565b610a4e84611416565b925050505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000610af66110f2565b610b00600861147e565b6000610b0c6008611494565b9050610b1884826114a2565b610b2281846116c0565b8091505092915050565b610b346110f2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ba4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9b906127d0565b60405180910390fd5b610bad81611170565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610c2381611734565b610c62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c599061264c565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610ce0836106be565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610d32836106be565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610d745750610d738185610a58565b5b80610db257508373ffffffffffffffffffffffffffffffffffffffff16610d9a846104e0565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610ddb826106be565b73ffffffffffffffffffffffffffffffffffffffff1614610e31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2890612862565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ea1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e98906128f4565b60405180910390fd5b610eae8383836001611775565b8273ffffffffffffffffffffffffffffffffffffffff16610ece826106be565b73ffffffffffffffffffffffffffffffffffffffff1614610f24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1b90612862565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46110b0838383600161189b565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6110fa610c65565b73ffffffffffffffffffffffffffffffffffffffff16611118610811565b73ffffffffffffffffffffffffffffffffffffffff161461116e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116590612960565b60405180910390fd5b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156112a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129c906129cc565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516113969190611ddd565b60405180910390a3505050565b6113ae848484610dbb565b6113ba848484846118a1565b6113f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f090612a5e565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b606061142182610c1a565b600061142b6113ff565b9050600081511161144b5760405180602001604052806000815250611476565b8061145584611a38565b60405160200161146692919061273a565b6040516020818303038152906040525b915050919050565b6001816000016000828254019250508190555050565b600081600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611512576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150990612aca565b60405180910390fd5b61151b81611734565b1561155b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155290612b36565b60405180910390fd5b611569600083836001611775565b61157281611734565b156115b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a990612b36565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46116bc60008383600161189b565b5050565b6116c982611734565b611708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ff90612bc8565b60405180910390fd5b8060066000848152602001908152602001600020908051906020019061172f929190611c86565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff16611756836110b5565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600181111561189557600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146118095780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118019190612c17565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146118945780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461188c9190612c4b565b925050819055505b5b50505050565b50505050565b60006118c28473ffffffffffffffffffffffffffffffffffffffff16611b10565b15611a2b578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026118eb610c65565b8786866040518563ffffffff1660e01b815260040161190d9493929190612cf6565b602060405180830381600087803b15801561192757600080fd5b505af192505050801561195857506040513d601f19601f820116820180604052508101906119559190612d57565b60015b6119db573d8060008114611988576040519150601f19603f3d011682016040523d82523d6000602084013e61198d565b606091505b506000815114156119d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119ca90612a5e565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611a30565b600190505b949350505050565b606060006001611a4784611b33565b01905060008167ffffffffffffffff811115611a6657611a656120fe565b5b6040519080825280601f01601f191660200182016040528015611a985781602001600182028036833780820191505090505b509050600082602001820190505b600115611b05578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611aef57611aee612d84565b5b0494506000851415611b0057611b05565b611aa6565b819350505050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611b91577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611b8757611b86612d84565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611bce576d04ee2d6d415b85acef81000000008381611bc457611bc3612d84565b5b0492506020810190505b662386f26fc100008310611bfd57662386f26fc100008381611bf357611bf2612d84565b5b0492506010810190505b6305f5e1008310611c26576305f5e1008381611c1c57611c1b612d84565b5b0492506008810190505b6127108310611c4b576127108381611c4157611c40612d84565b5b0492506004810190505b60648310611c6e5760648381611c6457611c63612d84565b5b0492506002810190505b600a8310611c7d576001810190505b80915050919050565b828054611c9290612418565b90600052602060002090601f016020900481019282611cb45760008555611cfb565b82601f10611ccd57805160ff1916838001178555611cfb565b82800160010185558215611cfb579182015b82811115611cfa578251825591602001919060010190611cdf565b5b509050611d089190611d0c565b5090565b5b80821115611d25576000816000905550600101611d0d565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611d7281611d3d565b8114611d7d57600080fd5b50565b600081359050611d8f81611d69565b92915050565b600060208284031215611dab57611daa611d33565b5b6000611db984828501611d80565b91505092915050565b60008115159050919050565b611dd781611dc2565b82525050565b6000602082019050611df26000830184611dce565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611e32578082015181840152602081019050611e17565b83811115611e41576000848401525b50505050565b6000601f19601f8301169050919050565b6000611e6382611df8565b611e6d8185611e03565b9350611e7d818560208601611e14565b611e8681611e47565b840191505092915050565b60006020820190508181036000830152611eab8184611e58565b905092915050565b6000819050919050565b611ec681611eb3565b8114611ed157600080fd5b50565b600081359050611ee381611ebd565b92915050565b600060208284031215611eff57611efe611d33565b5b6000611f0d84828501611ed4565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f4182611f16565b9050919050565b611f5181611f36565b82525050565b6000602082019050611f6c6000830184611f48565b92915050565b611f7b81611f36565b8114611f8657600080fd5b50565b600081359050611f9881611f72565b92915050565b60008060408385031215611fb557611fb4611d33565b5b6000611fc385828601611f89565b9250506020611fd485828601611ed4565b9150509250929050565b600080600060608486031215611ff757611ff6611d33565b5b600061200586828701611f89565b935050602061201686828701611f89565b925050604061202786828701611ed4565b9150509250925092565b60006020828403121561204757612046611d33565b5b600061205584828501611f89565b91505092915050565b61206781611eb3565b82525050565b6000602082019050612082600083018461205e565b92915050565b61209181611dc2565b811461209c57600080fd5b50565b6000813590506120ae81612088565b92915050565b600080604083850312156120cb576120ca611d33565b5b60006120d985828601611f89565b92505060206120ea8582860161209f565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61213682611e47565b810181811067ffffffffffffffff82111715612155576121546120fe565b5b80604052505050565b6000612168611d29565b9050612174828261212d565b919050565b600067ffffffffffffffff821115612194576121936120fe565b5b61219d82611e47565b9050602081019050919050565b82818337600083830152505050565b60006121cc6121c784612179565b61215e565b9050828152602081018484840111156121e8576121e76120f9565b5b6121f38482856121aa565b509392505050565b600082601f8301126122105761220f6120f4565b5b81356122208482602086016121b9565b91505092915050565b6000806000806080858703121561224357612242611d33565b5b600061225187828801611f89565b945050602061226287828801611f89565b935050604061227387828801611ed4565b925050606085013567ffffffffffffffff81111561229457612293611d38565b5b6122a0878288016121fb565b91505092959194509250565b600080604083850312156122c3576122c2611d33565b5b60006122d185828601611f89565b92505060206122e285828601611f89565b9150509250929050565b600067ffffffffffffffff821115612307576123066120fe565b5b61231082611e47565b9050602081019050919050565b600061233061232b846122ec565b61215e565b90508281526020810184848401111561234c5761234b6120f9565b5b6123578482856121aa565b509392505050565b600082601f830112612374576123736120f4565b5b813561238484826020860161231d565b91505092915050565b600080604083850312156123a4576123a3611d33565b5b60006123b285828601611f89565b925050602083013567ffffffffffffffff8111156123d3576123d2611d38565b5b6123df8582860161235f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061243057607f821691505b60208210811415612444576124436123e9565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b60006124a6602183611e03565b91506124b18261244a565b604082019050919050565b600060208201905081810360008301526124d581612499565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000612538603d83611e03565b9150612543826124dc565b604082019050919050565b600060208201905081810360008301526125678161252b565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b60006125ca602d83611e03565b91506125d58261256e565b604082019050919050565b600060208201905081810360008301526125f9816125bd565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000612636601883611e03565b915061264182612600565b602082019050919050565b6000602082019050818103600083015261266581612629565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b60006126c8602983611e03565b91506126d38261266c565b604082019050919050565b600060208201905081810360008301526126f7816126bb565b9050919050565b600081905092915050565b600061271482611df8565b61271e81856126fe565b935061272e818560208601611e14565b80840191505092915050565b60006127468285612709565b91506127528284612709565b91508190509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006127ba602683611e03565b91506127c58261275e565b604082019050919050565b600060208201905081810360008301526127e9816127ad565b9050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b600061284c602583611e03565b9150612857826127f0565b604082019050919050565b6000602082019050818103600083015261287b8161283f565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006128de602483611e03565b91506128e982612882565b604082019050919050565b6000602082019050818103600083015261290d816128d1565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061294a602083611e03565b915061295582612914565b602082019050919050565b600060208201905081810360008301526129798161293d565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b60006129b6601983611e03565b91506129c182612980565b602082019050919050565b600060208201905081810360008301526129e5816129a9565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000612a48603283611e03565b9150612a53826129ec565b604082019050919050565b60006020820190508181036000830152612a7781612a3b565b9050919050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000612ab4602083611e03565b9150612abf82612a7e565b602082019050919050565b60006020820190508181036000830152612ae381612aa7565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000612b20601c83611e03565b9150612b2b82612aea565b602082019050919050565b60006020820190508181036000830152612b4f81612b13565b9050919050565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b6000612bb2602e83611e03565b9150612bbd82612b56565b604082019050919050565b60006020820190508181036000830152612be181612ba5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612c2282611eb3565b9150612c2d83611eb3565b925082821015612c4057612c3f612be8565b5b828203905092915050565b6000612c5682611eb3565b9150612c6183611eb3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612c9657612c95612be8565b5b828201905092915050565b600081519050919050565b600082825260208201905092915050565b6000612cc882612ca1565b612cd28185612cac565b9350612ce2818560208601611e14565b612ceb81611e47565b840191505092915050565b6000608082019050612d0b6000830187611f48565b612d186020830186611f48565b612d25604083018561205e565b8181036060830152612d378184612cbd565b905095945050505050565b600081519050612d5181611d69565b92915050565b600060208284031215612d6d57612d6c611d33565b5b6000612d7b84828501612d42565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea264697066735822122042d191c8fe732900c3f99a5dec5524d0260227dfe6654dfb64289b7bf3ef5dad64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x534246204D656D62657273686970204E46540000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5342460000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x96 SWAP3 SWAP2 SWAP1 PUSH3 0x1A6 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xAF SWAP3 SWAP2 SWAP1 PUSH3 0x1A6 JUMP JUMPDEST POP POP POP PUSH3 0xD2 PUSH3 0xC6 PUSH3 0xD8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2BB JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1B4 SWAP1 PUSH3 0x285 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1D8 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x224 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1F3 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x224 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x224 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x223 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x206 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x233 SWAP2 SWAP1 PUSH3 0x237 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x252 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x238 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x29E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2B5 JUMPI PUSH3 0x2B4 PUSH3 0x256 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DE9 DUP1 PUSH3 0x2CB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xEACABE14 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x350 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x288 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x212 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x1D95 JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1EE9 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH2 0x526 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1FDE JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1FDE JUMP JUMPDEST PUSH2 0x69E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x1EE9 JUMP JUMPDEST PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x2031 JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x206D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH2 0x7FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x254 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH2 0x83B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x20B4 JUMP JUMPDEST PUSH2 0x8CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x2229 JUMP JUMPDEST PUSH2 0x8E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x1EE9 JUMP JUMPDEST PUSH2 0x945 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x22AC JUMP JUMPDEST PUSH2 0xA58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x238D JUMP JUMPDEST PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x206D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x2031 JUMP JUMPDEST PUSH2 0xB2C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x437 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x447 JUMPI POP PUSH2 0x446 DUP3 PUSH2 0xBB0 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x45D SWAP1 PUSH2 0x2418 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x489 SWAP1 PUSH2 0x2418 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EB DUP3 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x531 DUP3 PUSH2 0x6BE JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x599 SWAP1 PUSH2 0x24BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5C1 PUSH2 0xC65 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5F0 JUMPI POP PUSH2 0x5EF DUP2 PUSH2 0x5EA PUSH2 0xC65 JUMP JUMPDEST PUSH2 0xA58 JUMP JUMPDEST JUMPDEST PUSH2 0x62F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x626 SWAP1 PUSH2 0x254E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x639 DUP4 DUP4 PUSH2 0xC6D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x64F PUSH2 0x649 PUSH2 0xC65 JUMP JUMPDEST DUP3 PUSH2 0xD26 JUMP JUMPDEST PUSH2 0x68E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x685 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x699 DUP4 DUP4 DUP4 PUSH2 0xDBB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6B9 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6CA DUP4 PUSH2 0x10B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x733 SWAP1 PUSH2 0x264C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AD SWAP1 PUSH2 0x26DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x805 PUSH2 0x10F2 JUMP JUMPDEST PUSH2 0x80F PUSH1 0x0 PUSH2 0x1170 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x84A SWAP1 PUSH2 0x2418 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x876 SWAP1 PUSH2 0x2418 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8C3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x898 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8C3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8A6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8DF PUSH2 0x8D8 PUSH2 0xC65 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1236 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8F4 PUSH2 0x8EE PUSH2 0xC65 JUMP JUMPDEST DUP4 PUSH2 0xD26 JUMP JUMPDEST PUSH2 0x933 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92A SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93F DUP5 DUP5 DUP5 DUP5 PUSH2 0x13A3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x950 DUP3 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x970 SWAP1 PUSH2 0x2418 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x99C SWAP1 PUSH2 0x2418 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9E9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9BE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9E9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9CC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x9FA PUSH2 0x13FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xA10 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0xA45 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA2D SWAP3 SWAP2 SWAP1 PUSH2 0x273A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0xA53 JUMP JUMPDEST PUSH2 0xA4E DUP5 PUSH2 0x1416 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF6 PUSH2 0x10F2 JUMP JUMPDEST PUSH2 0xB00 PUSH1 0x8 PUSH2 0x147E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0C PUSH1 0x8 PUSH2 0x1494 JUMP JUMPDEST SWAP1 POP PUSH2 0xB18 DUP5 DUP3 PUSH2 0x14A2 JUMP JUMPDEST PUSH2 0xB22 DUP2 DUP5 PUSH2 0x16C0 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB34 PUSH2 0x10F2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9B SWAP1 PUSH2 0x27D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBAD DUP2 PUSH2 0x1170 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC23 DUP2 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC59 SWAP1 PUSH2 0x264C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCE0 DUP4 PUSH2 0x6BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD32 DUP4 PUSH2 0x6BE JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD74 JUMPI POP PUSH2 0xD73 DUP2 DUP6 PUSH2 0xA58 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xDB2 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD9A DUP5 PUSH2 0x4E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDDB DUP3 PUSH2 0x6BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE28 SWAP1 PUSH2 0x2862 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE98 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEAE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1775 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xECE DUP3 PUSH2 0x6BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1B SWAP1 PUSH2 0x2862 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x10B0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x189B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10FA PUSH2 0xC65 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1118 PUSH2 0x811 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x116E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1165 SWAP1 PUSH2 0x2960 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129C SWAP1 PUSH2 0x29CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1396 SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x13AE DUP5 DUP5 DUP5 PUSH2 0xDBB JUMP JUMPDEST PUSH2 0x13BA DUP5 DUP5 DUP5 DUP5 PUSH2 0x18A1 JUMP JUMPDEST PUSH2 0x13F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F0 SWAP1 PUSH2 0x2A5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1421 DUP3 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142B PUSH2 0x13FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x144B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1476 JUMP JUMPDEST DUP1 PUSH2 0x1455 DUP5 PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1466 SWAP3 SWAP2 SWAP1 PUSH2 0x273A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1512 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1509 SWAP1 PUSH2 0x2ACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x151B DUP2 PUSH2 0x1734 JUMP JUMPDEST ISZERO PUSH2 0x155B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1552 SWAP1 PUSH2 0x2B36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1569 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x1572 DUP2 PUSH2 0x1734 JUMP JUMPDEST ISZERO PUSH2 0x15B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A9 SWAP1 PUSH2 0x2B36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x16BC PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x189B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x16C9 DUP3 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x1708 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16FF SWAP1 PUSH2 0x2BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x172F SWAP3 SWAP2 SWAP1 PUSH2 0x1C86 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1756 DUP4 PUSH2 0x10B5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1895 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1809 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1801 SWAP2 SWAP1 PUSH2 0x2C17 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1894 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x188C SWAP2 SWAP1 PUSH2 0x2C4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B10 JUMP JUMPDEST ISZERO PUSH2 0x1A2B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x18EB PUSH2 0xC65 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x190D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1927 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1958 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1955 SWAP2 SWAP1 PUSH2 0x2D57 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x19DB JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1988 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x198D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x19D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19CA SWAP1 PUSH2 0x2A5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1A30 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1A47 DUP5 PUSH2 0x1B33 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A66 JUMPI PUSH2 0x1A65 PUSH2 0x20FE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A98 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1B05 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1AEF JUMPI PUSH2 0x1AEE PUSH2 0x2D84 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x1B00 JUMPI PUSH2 0x1B05 JUMP JUMPDEST PUSH2 0x1AA6 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1B91 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1B87 JUMPI PUSH2 0x1B86 PUSH2 0x2D84 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1BCE JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1BC4 JUMPI PUSH2 0x1BC3 PUSH2 0x2D84 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1BFD JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1BF3 JUMPI PUSH2 0x1BF2 PUSH2 0x2D84 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1C26 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1C1C JUMPI PUSH2 0x1C1B PUSH2 0x2D84 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1C4B JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1C41 JUMPI PUSH2 0x1C40 PUSH2 0x2D84 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1C6E JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1C64 JUMPI PUSH2 0x1C63 PUSH2 0x2D84 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1C7D JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1C92 SWAP1 PUSH2 0x2418 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1CB4 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1CFB JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1CCD JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1CFB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1CFB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1CFA JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1CDF JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1D08 SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1D25 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1D0D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D72 DUP2 PUSH2 0x1D3D JUMP JUMPDEST DUP2 EQ PUSH2 0x1D7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D8F DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DAB JUMPI PUSH2 0x1DAA PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DB9 DUP5 DUP3 DUP6 ADD PUSH2 0x1D80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DD7 DUP2 PUSH2 0x1DC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DF2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E32 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E17 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1E41 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E63 DUP3 PUSH2 0x1DF8 JUMP JUMPDEST PUSH2 0x1E6D DUP2 DUP6 PUSH2 0x1E03 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E7D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E14 JUMP JUMPDEST PUSH2 0x1E86 DUP2 PUSH2 0x1E47 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EAB DUP2 DUP5 PUSH2 0x1E58 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EC6 DUP2 PUSH2 0x1EB3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1ED1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EE3 DUP2 PUSH2 0x1EBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EFF JUMPI PUSH2 0x1EFE PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F0D DUP5 DUP3 DUP6 ADD PUSH2 0x1ED4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F41 DUP3 PUSH2 0x1F16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F51 DUP2 PUSH2 0x1F36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F6C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F7B DUP2 PUSH2 0x1F36 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F98 DUP2 PUSH2 0x1F72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FB5 JUMPI PUSH2 0x1FB4 PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FC3 DUP6 DUP3 DUP7 ADD PUSH2 0x1F89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FD4 DUP6 DUP3 DUP7 ADD PUSH2 0x1ED4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FF7 JUMPI PUSH2 0x1FF6 PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2005 DUP7 DUP3 DUP8 ADD PUSH2 0x1F89 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2016 DUP7 DUP3 DUP8 ADD PUSH2 0x1F89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2027 DUP7 DUP3 DUP8 ADD PUSH2 0x1ED4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2047 JUMPI PUSH2 0x2046 PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2055 DUP5 DUP3 DUP6 ADD PUSH2 0x1F89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2067 DUP2 PUSH2 0x1EB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2082 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x205E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2091 DUP2 PUSH2 0x1DC2 JUMP JUMPDEST DUP2 EQ PUSH2 0x209C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20AE DUP2 PUSH2 0x2088 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20CB JUMPI PUSH2 0x20CA PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20D9 DUP6 DUP3 DUP7 ADD PUSH2 0x1F89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20EA DUP6 DUP3 DUP7 ADD PUSH2 0x209F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2136 DUP3 PUSH2 0x1E47 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2155 JUMPI PUSH2 0x2154 PUSH2 0x20FE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2168 PUSH2 0x1D29 JUMP JUMPDEST SWAP1 POP PUSH2 0x2174 DUP3 DUP3 PUSH2 0x212D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2194 JUMPI PUSH2 0x2193 PUSH2 0x20FE JUMP JUMPDEST JUMPDEST PUSH2 0x219D DUP3 PUSH2 0x1E47 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21CC PUSH2 0x21C7 DUP5 PUSH2 0x2179 JUMP JUMPDEST PUSH2 0x215E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x21E8 JUMPI PUSH2 0x21E7 PUSH2 0x20F9 JUMP JUMPDEST JUMPDEST PUSH2 0x21F3 DUP5 DUP3 DUP6 PUSH2 0x21AA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2210 JUMPI PUSH2 0x220F PUSH2 0x20F4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2220 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x21B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2243 JUMPI PUSH2 0x2242 PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2251 DUP8 DUP3 DUP9 ADD PUSH2 0x1F89 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2262 DUP8 DUP3 DUP9 ADD PUSH2 0x1F89 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2273 DUP8 DUP3 DUP9 ADD PUSH2 0x1ED4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2294 JUMPI PUSH2 0x2293 PUSH2 0x1D38 JUMP JUMPDEST JUMPDEST PUSH2 0x22A0 DUP8 DUP3 DUP9 ADD PUSH2 0x21FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22C3 JUMPI PUSH2 0x22C2 PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22D1 DUP6 DUP3 DUP7 ADD PUSH2 0x1F89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22E2 DUP6 DUP3 DUP7 ADD PUSH2 0x1F89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2307 JUMPI PUSH2 0x2306 PUSH2 0x20FE JUMP JUMPDEST JUMPDEST PUSH2 0x2310 DUP3 PUSH2 0x1E47 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2330 PUSH2 0x232B DUP5 PUSH2 0x22EC JUMP JUMPDEST PUSH2 0x215E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x234C JUMPI PUSH2 0x234B PUSH2 0x20F9 JUMP JUMPDEST JUMPDEST PUSH2 0x2357 DUP5 DUP3 DUP6 PUSH2 0x21AA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2374 JUMPI PUSH2 0x2373 PUSH2 0x20F4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2384 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x231D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23A4 JUMPI PUSH2 0x23A3 PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23B2 DUP6 DUP3 DUP7 ADD PUSH2 0x1F89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23D3 JUMPI PUSH2 0x23D2 PUSH2 0x1D38 JUMP JUMPDEST JUMPDEST PUSH2 0x23DF DUP6 DUP3 DUP7 ADD PUSH2 0x235F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2430 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2444 JUMPI PUSH2 0x2443 PUSH2 0x23E9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24A6 PUSH1 0x21 DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x24B1 DUP3 PUSH2 0x244A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24D5 DUP2 PUSH2 0x2499 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2538 PUSH1 0x3D DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x2543 DUP3 PUSH2 0x24DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2567 DUP2 PUSH2 0x252B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25CA PUSH1 0x2D DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x25D5 DUP3 PUSH2 0x256E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25F9 DUP2 PUSH2 0x25BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2636 PUSH1 0x18 DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x2641 DUP3 PUSH2 0x2600 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2665 DUP2 PUSH2 0x2629 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26C8 PUSH1 0x29 DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x26D3 DUP3 PUSH2 0x266C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26F7 DUP2 PUSH2 0x26BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2714 DUP3 PUSH2 0x1DF8 JUMP JUMPDEST PUSH2 0x271E DUP2 DUP6 PUSH2 0x26FE JUMP JUMPDEST SWAP4 POP PUSH2 0x272E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E14 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2746 DUP3 DUP6 PUSH2 0x2709 JUMP JUMPDEST SWAP2 POP PUSH2 0x2752 DUP3 DUP5 PUSH2 0x2709 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27BA PUSH1 0x26 DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x27C5 DUP3 PUSH2 0x275E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27E9 DUP2 PUSH2 0x27AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x284C PUSH1 0x25 DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x2857 DUP3 PUSH2 0x27F0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x287B DUP2 PUSH2 0x283F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28DE PUSH1 0x24 DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x28E9 DUP3 PUSH2 0x2882 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x290D DUP2 PUSH2 0x28D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x294A PUSH1 0x20 DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x2955 DUP3 PUSH2 0x2914 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2979 DUP2 PUSH2 0x293D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29B6 PUSH1 0x19 DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x29C1 DUP3 PUSH2 0x2980 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29E5 DUP2 PUSH2 0x29A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A48 PUSH1 0x32 DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A53 DUP3 PUSH2 0x29EC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A77 DUP2 PUSH2 0x2A3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB4 PUSH1 0x20 DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ABF DUP3 PUSH2 0x2A7E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AE3 DUP2 PUSH2 0x2AA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B20 PUSH1 0x1C DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B2B DUP3 PUSH2 0x2AEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B4F DUP2 PUSH2 0x2B13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BB2 PUSH1 0x2E DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BBD DUP3 PUSH2 0x2B56 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BE1 DUP2 PUSH2 0x2BA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C22 DUP3 PUSH2 0x1EB3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C2D DUP4 PUSH2 0x1EB3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2C40 JUMPI PUSH2 0x2C3F PUSH2 0x2BE8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C56 DUP3 PUSH2 0x1EB3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C61 DUP4 PUSH2 0x1EB3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2C96 JUMPI PUSH2 0x2C95 PUSH2 0x2BE8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CC8 DUP3 PUSH2 0x2CA1 JUMP JUMPDEST PUSH2 0x2CD2 DUP2 DUP6 PUSH2 0x2CAC JUMP JUMPDEST SWAP4 POP PUSH2 0x2CE2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E14 JUMP JUMPDEST PUSH2 0x2CEB DUP2 PUSH2 0x1E47 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2D0B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1F48 JUMP JUMPDEST PUSH2 0x2D18 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1F48 JUMP JUMPDEST PUSH2 0x2D25 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x205E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2D37 DUP2 DUP5 PUSH2 0x2CBD JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2D51 DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D6D JUMPI PUSH2 0x2D6C PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D7B DUP5 DUP3 DUP6 ADD PUSH2 0x2D42 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xD1 SWAP2 0xC8 INVALID PUSH20 0x2900C3F99A5DEC5524D0260227DFE6654DFB6428 SWAP12 PUSH28 0xF3EF5DAD64736F6C6343000809003300000000000000000000000000 ","sourceMap":"435:521:25:-:0;;;572:52;;;;;;;;;;1390:113:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;435:521:25;;640:96:16;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;435:521:25:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:180:27:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:320;237:6;274:1;268:4;264:12;254:22;;321:1;315:4;311:12;342:18;332:81;;398:4;390:6;386:17;376:27;;332:81;460:2;452:6;449:14;429:18;426:38;423:84;;;479:18;;:::i;:::-;423:84;244:269;193:320;;;:::o;435:521:25:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2881":{"entryPoint":6299,"id":2881,"parameterSlots":4,"returnSlots":0},"@_approve_2714":{"entryPoint":3181,"id":2714,"parameterSlots":2,"returnSlots":0},"@_baseURI_2151":{"entryPoint":5119,"id":2151,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_2868":{"entryPoint":6005,"id":2868,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_2822":{"entryPoint":6305,"id":2822,"parameterSlots":4,"returnSlots":1},"@_checkOwner_54":{"entryPoint":4338,"id":54,"parameterSlots":0,"returnSlots":0},"@_exists_2383":{"entryPoint":5940,"id":2383,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_2417":{"entryPoint":3366,"id":2417,"parameterSlots":2,"returnSlots":1},"@_mint_2538":{"entryPoint":5282,"id":2538,"parameterSlots":2,"returnSlots":0},"@_msgSender_3510":{"entryPoint":3173,"id":3510,"parameterSlots":0,"returnSlots":1},"@_ownerOf_2365":{"entryPoint":4277,"id":2365,"parameterSlots":1,"returnSlots":1},"@_requireMinted_2760":{"entryPoint":3098,"id":2760,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_2352":{"entryPoint":5027,"id":2352,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_2746":{"entryPoint":4662,"id":2746,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_3110":{"entryPoint":5824,"id":3110,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":4464,"id":111,"parameterSlots":1,"returnSlots":0},"@_transfer_2690":{"entryPoint":3515,"id":2690,"parameterSlots":3,"returnSlots":0},"@approve_2194":{"entryPoint":1318,"id":2194,"parameterSlots":2,"returnSlots":0},"@balanceOf_2055":{"entryPoint":1861,"id":2055,"parameterSlots":1,"returnSlots":1},"@current_3538":{"entryPoint":5268,"id":3538,"parameterSlots":1,"returnSlots":1},"@getApproved_2212":{"entryPoint":1248,"id":2212,"parameterSlots":1,"returnSlots":1},"@increment_3552":{"entryPoint":5246,"id":3552,"parameterSlots":1,"returnSlots":0},"@isApprovedForAll_2247":{"entryPoint":2648,"id":2247,"parameterSlots":2,"returnSlots":1},"@isContract_3186":{"entryPoint":6928,"id":3186,"parameterSlots":1,"returnSlots":1},"@log10_5022":{"entryPoint":6963,"id":5022,"parameterSlots":1,"returnSlots":1},"@mintNFT_6786":{"entryPoint":2796,"id":6786,"parameterSlots":2,"returnSlots":1},"@name_2093":{"entryPoint":1102,"id":2093,"parameterSlots":0,"returnSlots":1},"@ownerOf_2083":{"entryPoint":1726,"id":2083,"parameterSlots":1,"returnSlots":1},"@owner_40":{"entryPoint":2065,"id":40,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":2045,"id":68,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_2293":{"entryPoint":1694,"id":2293,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_2323":{"entryPoint":2275,"id":2323,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_2229":{"entryPoint":2253,"id":2229,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2031":{"entryPoint":876,"id":2031,"parameterSlots":1,"returnSlots":1},"@supportsInterface_4307":{"entryPoint":2992,"id":4307,"parameterSlots":1,"returnSlots":1},"@symbol_2103":{"entryPoint":2107,"id":2103,"parameterSlots":0,"returnSlots":1},"@toString_3652":{"entryPoint":6712,"id":3652,"parameterSlots":1,"returnSlots":1},"@tokenURI_2142":{"entryPoint":5142,"id":2142,"parameterSlots":1,"returnSlots":1},"@tokenURI_3088":{"entryPoint":2373,"id":3088,"parameterSlots":1,"returnSlots":1},"@transferFrom_2274":{"entryPoint":1598,"id":2274,"parameterSlots":3,"returnSlots":0},"@transferOwnership_91":{"entryPoint":2860,"id":91,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":8633,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":8989,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":8073,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":8351,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":7552,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":11586,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":8699,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":9055,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7892,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8241,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":8876,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":8158,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":8745,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":8372,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_string_memory_ptr":{"entryPoint":9101,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8094,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":7573,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":11607,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":7913,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8008,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7630,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":11453,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7768,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9993,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":9661,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":10811,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":10157,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":10303,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":11027,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":10449,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":10665,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":9915,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack":{"entryPoint":11173,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":10919,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":10557,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":9769,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":9369,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":9515,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8286,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10042,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":8023,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11510,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7645,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7825,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9696,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10846,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10192,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10338,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11062,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10484,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10700,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9950,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11208,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10954,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10592,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9804,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9404,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9550,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8301,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":8542,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7465,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":8569,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":8940,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":11425,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7672,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":11436,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7683,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9982,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":11339,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":11287,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":7990,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7618,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7485,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7958,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7859,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":8618,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":7700,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":9240,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":8493,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":11240,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":11652,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":9193,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8446,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":8436,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":8441,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":7480,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7475,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7751,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":9582,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":10732,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":10078,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":10224,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":10986,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":10370,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":10624,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":9836,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4":{"entryPoint":11094,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":10878,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":10516,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":9728,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":9290,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":9436,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8050,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":8328,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":7529,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7869,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:30628:27","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:27","statements":[{"nodeType":"YulAssignment","src":"57:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:27"},"nodeType":"YulFunctionCall","src":"67:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:27","type":""}],"src":"7:75:27"},{"body":{"nodeType":"YulBlock","src":"177:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:27"},"nodeType":"YulFunctionCall","src":"187:12:27"},"nodeType":"YulExpressionStatement","src":"187:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:27"},{"body":{"nodeType":"YulBlock","src":"300:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:27"},"nodeType":"YulFunctionCall","src":"310:12:27"},"nodeType":"YulExpressionStatement","src":"310:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:27"},{"body":{"nodeType":"YulBlock","src":"378:105:27","statements":[{"nodeType":"YulAssignment","src":"388:89:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:27","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:27"},"nodeType":"YulFunctionCall","src":"399:78:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:27"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:27","type":""}],"src":"334:149:27"},{"body":{"nodeType":"YulBlock","src":"531:78:27","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:27"},"nodeType":"YulFunctionCall","src":"589:12:27"},"nodeType":"YulExpressionStatement","src":"589:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:27"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:27"},"nodeType":"YulFunctionCall","src":"561:23:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:27"},"nodeType":"YulFunctionCall","src":"551:34:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:27"},"nodeType":"YulFunctionCall","src":"544:42:27"},"nodeType":"YulIf","src":"541:62:27"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:27","type":""}],"src":"489:120:27"},{"body":{"nodeType":"YulBlock","src":"666:86:27","statements":[{"nodeType":"YulAssignment","src":"676:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:27"},"nodeType":"YulFunctionCall","src":"685:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:27"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:27"},"nodeType":"YulFunctionCall","src":"714:32:27"},"nodeType":"YulExpressionStatement","src":"714:32:27"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:27","type":""}],"src":"615:137:27"},{"body":{"nodeType":"YulBlock","src":"823:262:27","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:27"},"nodeType":"YulFunctionCall","src":"871:79:27"},"nodeType":"YulExpressionStatement","src":"871:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:27"},"nodeType":"YulFunctionCall","src":"840:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:27"},"nodeType":"YulFunctionCall","src":"836:32:27"},"nodeType":"YulIf","src":"833:119:27"},{"nodeType":"YulBlock","src":"962:116:27","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:27","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:27"},"nodeType":"YulFunctionCall","src":"1036:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:27"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:27"},"nodeType":"YulFunctionCall","src":"1016:52:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:27","type":""}],"src":"758:327:27"},{"body":{"nodeType":"YulBlock","src":"1133:48:27","statements":[{"nodeType":"YulAssignment","src":"1143:32:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:27"},"nodeType":"YulFunctionCall","src":"1161:13:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:27"},"nodeType":"YulFunctionCall","src":"1154:21:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:27"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:27","type":""}],"src":"1091:90:27"},{"body":{"nodeType":"YulBlock","src":"1246:50:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:27"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:27"},"nodeType":"YulFunctionCall","src":"1268:21:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:27"},"nodeType":"YulFunctionCall","src":"1256:34:27"},"nodeType":"YulExpressionStatement","src":"1256:34:27"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:27","type":""}],"src":"1187:109:27"},{"body":{"nodeType":"YulBlock","src":"1394:118:27","statements":[{"nodeType":"YulAssignment","src":"1404:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:27"},"nodeType":"YulFunctionCall","src":"1412:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:27"},"nodeType":"YulFunctionCall","src":"1487:17:27"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:27"},"nodeType":"YulFunctionCall","src":"1440:65:27"},"nodeType":"YulExpressionStatement","src":"1440:65:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:27","type":""}],"src":"1302:210:27"},{"body":{"nodeType":"YulBlock","src":"1577:40:27","statements":[{"nodeType":"YulAssignment","src":"1588:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:27"},"nodeType":"YulFunctionCall","src":"1598:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:27"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:27","type":""}],"src":"1518:99:27"},{"body":{"nodeType":"YulBlock","src":"1719:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:27"},"nodeType":"YulFunctionCall","src":"1729:19:27"},"nodeType":"YulExpressionStatement","src":"1729:19:27"},{"nodeType":"YulAssignment","src":"1757:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:27"},"nodeType":"YulFunctionCall","src":"1772:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:27","type":""}],"src":"1623:169:27"},{"body":{"nodeType":"YulBlock","src":"1847:258:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1861:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1951:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"1956:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:27"},"nodeType":"YulFunctionCall","src":"1947:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1970:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"1975:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:27"},"nodeType":"YulFunctionCall","src":"1966:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:27"},"nodeType":"YulFunctionCall","src":"1960:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:27"},"nodeType":"YulFunctionCall","src":"1940:39:27"},"nodeType":"YulExpressionStatement","src":"1940:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1887:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1884:2:27"},"nodeType":"YulFunctionCall","src":"1884:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1898:19:27","statements":[{"nodeType":"YulAssignment","src":"1900:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1909:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:27"},"nodeType":"YulFunctionCall","src":"1905:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"1880:3:27","statements":[]},"src":"1876:113:27"},{"body":{"nodeType":"YulBlock","src":"2023:76:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2073:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:27"},"nodeType":"YulFunctionCall","src":"2069:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:27"},"nodeType":"YulFunctionCall","src":"2062:27:27"},"nodeType":"YulExpressionStatement","src":"2062:27:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2004:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"2007:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2001:2:27"},"nodeType":"YulFunctionCall","src":"2001:13:27"},"nodeType":"YulIf","src":"1998:101:27"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1829:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1834:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"1839:6:27","type":""}],"src":"1798:307:27"},{"body":{"nodeType":"YulBlock","src":"2159:54:27","statements":[{"nodeType":"YulAssignment","src":"2169:38:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2187:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2194:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:27"},"nodeType":"YulFunctionCall","src":"2183:14:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2203:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2199:3:27"},"nodeType":"YulFunctionCall","src":"2199:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2179:3:27"},"nodeType":"YulFunctionCall","src":"2179:28:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2169:6:27"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2142:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2152:6:27","type":""}],"src":"2111:102:27"},{"body":{"nodeType":"YulBlock","src":"2311:272:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2321:53:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2335:32:27"},"nodeType":"YulFunctionCall","src":"2335:39:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2325:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2383:78:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2454:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2390:58:27"},"nodeType":"YulFunctionCall","src":"2390:71:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2496:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2503:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:27"},"nodeType":"YulFunctionCall","src":"2492:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"2515:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2470:21:27"},"nodeType":"YulFunctionCall","src":"2470:52:27"},"nodeType":"YulExpressionStatement","src":"2470:52:27"},{"nodeType":"YulAssignment","src":"2531:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2547:21:27"},"nodeType":"YulFunctionCall","src":"2547:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:27"},"nodeType":"YulFunctionCall","src":"2538:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2531:3:27"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2292:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2299:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2307:3:27","type":""}],"src":"2219:364:27"},{"body":{"nodeType":"YulBlock","src":"2707:195:27","statements":[{"nodeType":"YulAssignment","src":"2717:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:27"},"nodeType":"YulFunctionCall","src":"2725:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:27"},"nodeType":"YulFunctionCall","src":"2760:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2783:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2779:3:27"},"nodeType":"YulFunctionCall","src":"2779:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:27"},"nodeType":"YulFunctionCall","src":"2753:47:27"},"nodeType":"YulExpressionStatement","src":"2753:47:27"},{"nodeType":"YulAssignment","src":"2809:86:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2881:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"2890:4:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2817:63:27"},"nodeType":"YulFunctionCall","src":"2817:78:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2679:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2691:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2702:4:27","type":""}],"src":"2589:313:27"},{"body":{"nodeType":"YulBlock","src":"2953:32:27","statements":[{"nodeType":"YulAssignment","src":"2963:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"2974:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2963:7:27"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2935:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2945:7:27","type":""}],"src":"2908:77:27"},{"body":{"nodeType":"YulBlock","src":"3034:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"3091:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3100:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3093:6:27"},"nodeType":"YulFunctionCall","src":"3093:12:27"},"nodeType":"YulExpressionStatement","src":"3093:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3057:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3082:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3064:17:27"},"nodeType":"YulFunctionCall","src":"3064:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3054:2:27"},"nodeType":"YulFunctionCall","src":"3054:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:27"},"nodeType":"YulFunctionCall","src":"3047:43:27"},"nodeType":"YulIf","src":"3044:63:27"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3027:5:27","type":""}],"src":"2991:122:27"},{"body":{"nodeType":"YulBlock","src":"3171:87:27","statements":[{"nodeType":"YulAssignment","src":"3181:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3190:12:27"},"nodeType":"YulFunctionCall","src":"3190:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3246:5:27"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3219:26:27"},"nodeType":"YulFunctionCall","src":"3219:33:27"},"nodeType":"YulExpressionStatement","src":"3219:33:27"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3149:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"3157:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3165:5:27","type":""}],"src":"3119:139:27"},{"body":{"nodeType":"YulBlock","src":"3330:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"3376:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3378:77:27"},"nodeType":"YulFunctionCall","src":"3378:79:27"},"nodeType":"YulExpressionStatement","src":"3378:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3351:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3347:3:27"},"nodeType":"YulFunctionCall","src":"3347:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"3372:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3343:3:27"},"nodeType":"YulFunctionCall","src":"3343:32:27"},"nodeType":"YulIf","src":"3340:119:27"},{"nodeType":"YulBlock","src":"3469:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3498:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:27","type":""}]},{"nodeType":"YulAssignment","src":"3513:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3559:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:27"},"nodeType":"YulFunctionCall","src":"3544:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3568:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3523:20:27"},"nodeType":"YulFunctionCall","src":"3523:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:27"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3300:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3311:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3323:6:27","type":""}],"src":"3264:329:27"},{"body":{"nodeType":"YulBlock","src":"3644:81:27","statements":[{"nodeType":"YulAssignment","src":"3654:65:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3669:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"3676:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3665:3:27"},"nodeType":"YulFunctionCall","src":"3665:54:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3654:7:27"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3626:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3636:7:27","type":""}],"src":"3599:126:27"},{"body":{"nodeType":"YulBlock","src":"3776:51:27","statements":[{"nodeType":"YulAssignment","src":"3786:35:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:27"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3797:17:27"},"nodeType":"YulFunctionCall","src":"3797:24:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3786:7:27"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3758:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3768:7:27","type":""}],"src":"3731:96:27"},{"body":{"nodeType":"YulBlock","src":"3898:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3915:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3920:17:27"},"nodeType":"YulFunctionCall","src":"3920:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3908:6:27"},"nodeType":"YulFunctionCall","src":"3908:37:27"},"nodeType":"YulExpressionStatement","src":"3908:37:27"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3886:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3893:3:27","type":""}],"src":"3833:118:27"},{"body":{"nodeType":"YulBlock","src":"4055:124:27","statements":[{"nodeType":"YulAssignment","src":"4065:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4088:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:27"},"nodeType":"YulFunctionCall","src":"4073:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4065:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4145:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4169:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:27"},"nodeType":"YulFunctionCall","src":"4154:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4101:43:27"},"nodeType":"YulFunctionCall","src":"4101:71:27"},"nodeType":"YulExpressionStatement","src":"4101:71:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4027:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4039:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4050:4:27","type":""}],"src":"3957:222:27"},{"body":{"nodeType":"YulBlock","src":"4228:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"4285:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4294:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4297:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4287:6:27"},"nodeType":"YulFunctionCall","src":"4287:12:27"},"nodeType":"YulExpressionStatement","src":"4287:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4251:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4276:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4258:17:27"},"nodeType":"YulFunctionCall","src":"4258:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4248:2:27"},"nodeType":"YulFunctionCall","src":"4248:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4241:6:27"},"nodeType":"YulFunctionCall","src":"4241:43:27"},"nodeType":"YulIf","src":"4238:63:27"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4221:5:27","type":""}],"src":"4185:122:27"},{"body":{"nodeType":"YulBlock","src":"4365:87:27","statements":[{"nodeType":"YulAssignment","src":"4375:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4397:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4384:12:27"},"nodeType":"YulFunctionCall","src":"4384:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4375:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4440:5:27"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4413:26:27"},"nodeType":"YulFunctionCall","src":"4413:33:27"},"nodeType":"YulExpressionStatement","src":"4413:33:27"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4343:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"4351:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4359:5:27","type":""}],"src":"4313:139:27"},{"body":{"nodeType":"YulBlock","src":"4541:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"4587:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4589:77:27"},"nodeType":"YulFunctionCall","src":"4589:79:27"},"nodeType":"YulExpressionStatement","src":"4589:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4562:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4558:3:27"},"nodeType":"YulFunctionCall","src":"4558:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4554:3:27"},"nodeType":"YulFunctionCall","src":"4554:32:27"},"nodeType":"YulIf","src":"4551:119:27"},{"nodeType":"YulBlock","src":"4680:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4695:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4709:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4699:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4724:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4770:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:27"},"nodeType":"YulFunctionCall","src":"4755:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4779:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4734:20:27"},"nodeType":"YulFunctionCall","src":"4734:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:27"}]}]},{"nodeType":"YulBlock","src":"4807:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4852:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4898:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:27"},"nodeType":"YulFunctionCall","src":"4883:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4862:20:27"},"nodeType":"YulFunctionCall","src":"4862:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4852:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4503:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4514:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4526:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4534:6:27","type":""}],"src":"4458:474:27"},{"body":{"nodeType":"YulBlock","src":"5038:519:27","statements":[{"body":{"nodeType":"YulBlock","src":"5084:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5086:77:27"},"nodeType":"YulFunctionCall","src":"5086:79:27"},"nodeType":"YulExpressionStatement","src":"5086:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5059:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5068:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5055:3:27"},"nodeType":"YulFunctionCall","src":"5055:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5080:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5051:3:27"},"nodeType":"YulFunctionCall","src":"5051:32:27"},"nodeType":"YulIf","src":"5048:119:27"},{"nodeType":"YulBlock","src":"5177:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5192:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5206:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5196:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5221:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5256:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5267:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5252:3:27"},"nodeType":"YulFunctionCall","src":"5252:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5276:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5231:20:27"},"nodeType":"YulFunctionCall","src":"5231:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5221:6:27"}]}]},{"nodeType":"YulBlock","src":"5304:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5319:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5333:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5323:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5349:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5395:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5380:3:27"},"nodeType":"YulFunctionCall","src":"5380:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5404:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5359:20:27"},"nodeType":"YulFunctionCall","src":"5359:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5349:6:27"}]}]},{"nodeType":"YulBlock","src":"5432:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5447:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5461:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5451:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5477:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5512:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5523:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5508:3:27"},"nodeType":"YulFunctionCall","src":"5508:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5532:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5487:20:27"},"nodeType":"YulFunctionCall","src":"5487:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5477:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4992:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5003:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5015:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5023:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5031:6:27","type":""}],"src":"4938:619:27"},{"body":{"nodeType":"YulBlock","src":"5629:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"5675:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5677:77:27"},"nodeType":"YulFunctionCall","src":"5677:79:27"},"nodeType":"YulExpressionStatement","src":"5677:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5650:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5659:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5646:3:27"},"nodeType":"YulFunctionCall","src":"5646:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5671:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5642:3:27"},"nodeType":"YulFunctionCall","src":"5642:32:27"},"nodeType":"YulIf","src":"5639:119:27"},{"nodeType":"YulBlock","src":"5768:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5783:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5797:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5787:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5812:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5847:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5858:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5843:3:27"},"nodeType":"YulFunctionCall","src":"5843:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5867:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5822:20:27"},"nodeType":"YulFunctionCall","src":"5822:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5812:6:27"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5599:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5610:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5622:6:27","type":""}],"src":"5563:329:27"},{"body":{"nodeType":"YulBlock","src":"5963:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5980:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6003:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5985:17:27"},"nodeType":"YulFunctionCall","src":"5985:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5973:6:27"},"nodeType":"YulFunctionCall","src":"5973:37:27"},"nodeType":"YulExpressionStatement","src":"5973:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5951:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5958:3:27","type":""}],"src":"5898:118:27"},{"body":{"nodeType":"YulBlock","src":"6120:124:27","statements":[{"nodeType":"YulAssignment","src":"6130:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6142:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6153:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6138:3:27"},"nodeType":"YulFunctionCall","src":"6138:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6130:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6210:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6223:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6234:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6219:3:27"},"nodeType":"YulFunctionCall","src":"6219:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6166:43:27"},"nodeType":"YulFunctionCall","src":"6166:71:27"},"nodeType":"YulExpressionStatement","src":"6166:71:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6092:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6104:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6115:4:27","type":""}],"src":"6022:222:27"},{"body":{"nodeType":"YulBlock","src":"6290:76:27","statements":[{"body":{"nodeType":"YulBlock","src":"6344:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6353:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6356:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6346:6:27"},"nodeType":"YulFunctionCall","src":"6346:12:27"},"nodeType":"YulExpressionStatement","src":"6346:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6313:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6335:5:27"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6320:14:27"},"nodeType":"YulFunctionCall","src":"6320:21:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6310:2:27"},"nodeType":"YulFunctionCall","src":"6310:32:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6303:6:27"},"nodeType":"YulFunctionCall","src":"6303:40:27"},"nodeType":"YulIf","src":"6300:60:27"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6283:5:27","type":""}],"src":"6250:116:27"},{"body":{"nodeType":"YulBlock","src":"6421:84:27","statements":[{"nodeType":"YulAssignment","src":"6431:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6453:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6440:12:27"},"nodeType":"YulFunctionCall","src":"6440:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6431:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6493:5:27"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6469:23:27"},"nodeType":"YulFunctionCall","src":"6469:30:27"},"nodeType":"YulExpressionStatement","src":"6469:30:27"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6399:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"6407:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6415:5:27","type":""}],"src":"6372:133:27"},{"body":{"nodeType":"YulBlock","src":"6591:388:27","statements":[{"body":{"nodeType":"YulBlock","src":"6637:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6639:77:27"},"nodeType":"YulFunctionCall","src":"6639:79:27"},"nodeType":"YulExpressionStatement","src":"6639:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6612:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"6621:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6608:3:27"},"nodeType":"YulFunctionCall","src":"6608:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"6633:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6604:3:27"},"nodeType":"YulFunctionCall","src":"6604:32:27"},"nodeType":"YulIf","src":"6601:119:27"},{"nodeType":"YulBlock","src":"6730:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6745:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"6759:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6749:6:27","type":""}]},{"nodeType":"YulAssignment","src":"6774:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6809:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"6820:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6805:3:27"},"nodeType":"YulFunctionCall","src":"6805:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6829:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6784:20:27"},"nodeType":"YulFunctionCall","src":"6784:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6774:6:27"}]}]},{"nodeType":"YulBlock","src":"6857:115:27","statements":[{"nodeType":"YulVariableDeclaration","src":"6872:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"6886:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6876:6:27","type":""}]},{"nodeType":"YulAssignment","src":"6902:60:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6934:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"6945:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6930:3:27"},"nodeType":"YulFunctionCall","src":"6930:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6954:7:27"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6912:17:27"},"nodeType":"YulFunctionCall","src":"6912:50:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6902:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6553:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6564:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6576:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6584:6:27","type":""}],"src":"6511:468:27"},{"body":{"nodeType":"YulBlock","src":"7074:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7091:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7094:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7084:6:27"},"nodeType":"YulFunctionCall","src":"7084:12:27"},"nodeType":"YulExpressionStatement","src":"7084:12:27"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6985:117:27"},{"body":{"nodeType":"YulBlock","src":"7197:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7214:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7217:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7207:6:27"},"nodeType":"YulFunctionCall","src":"7207:12:27"},"nodeType":"YulExpressionStatement","src":"7207:12:27"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7108:117:27"},{"body":{"nodeType":"YulBlock","src":"7259:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7276:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7279:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7269:6:27"},"nodeType":"YulFunctionCall","src":"7269:88:27"},"nodeType":"YulExpressionStatement","src":"7269:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7373:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7376:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7366:6:27"},"nodeType":"YulFunctionCall","src":"7366:15:27"},"nodeType":"YulExpressionStatement","src":"7366:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7397:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7400:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7390:6:27"},"nodeType":"YulFunctionCall","src":"7390:15:27"},"nodeType":"YulExpressionStatement","src":"7390:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7231:180:27"},{"body":{"nodeType":"YulBlock","src":"7460:238:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7470:58:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7492:6:27"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7522:4:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7500:21:27"},"nodeType":"YulFunctionCall","src":"7500:27:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7488:3:27"},"nodeType":"YulFunctionCall","src":"7488:40:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7474:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"7639:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7641:16:27"},"nodeType":"YulFunctionCall","src":"7641:18:27"},"nodeType":"YulExpressionStatement","src":"7641:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7582:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"7594:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7579:2:27"},"nodeType":"YulFunctionCall","src":"7579:34:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7618:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7630:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7615:2:27"},"nodeType":"YulFunctionCall","src":"7615:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7576:2:27"},"nodeType":"YulFunctionCall","src":"7576:62:27"},"nodeType":"YulIf","src":"7573:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7677:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7681:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7670:6:27"},"nodeType":"YulFunctionCall","src":"7670:22:27"},"nodeType":"YulExpressionStatement","src":"7670:22:27"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7446:6:27","type":""},{"name":"size","nodeType":"YulTypedName","src":"7454:4:27","type":""}],"src":"7417:281:27"},{"body":{"nodeType":"YulBlock","src":"7745:88:27","statements":[{"nodeType":"YulAssignment","src":"7755:30:27","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7765:18:27"},"nodeType":"YulFunctionCall","src":"7765:20:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7755:6:27"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7814:6:27"},{"name":"size","nodeType":"YulIdentifier","src":"7822:4:27"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7794:19:27"},"nodeType":"YulFunctionCall","src":"7794:33:27"},"nodeType":"YulExpressionStatement","src":"7794:33:27"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7729:4:27","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7738:6:27","type":""}],"src":"7704:129:27"},{"body":{"nodeType":"YulBlock","src":"7905:241:27","statements":[{"body":{"nodeType":"YulBlock","src":"8010:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8012:16:27"},"nodeType":"YulFunctionCall","src":"8012:18:27"},"nodeType":"YulExpressionStatement","src":"8012:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7982:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7990:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7979:2:27"},"nodeType":"YulFunctionCall","src":"7979:30:27"},"nodeType":"YulIf","src":"7976:56:27"},{"nodeType":"YulAssignment","src":"8042:37:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8072:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8050:21:27"},"nodeType":"YulFunctionCall","src":"8050:29:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8042:4:27"}]},{"nodeType":"YulAssignment","src":"8116:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8128:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"8134:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8124:3:27"},"nodeType":"YulFunctionCall","src":"8124:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8116:4:27"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7889:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7900:4:27","type":""}],"src":"7839:307:27"},{"body":{"nodeType":"YulBlock","src":"8203:103:27","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8226:3:27"},{"name":"src","nodeType":"YulIdentifier","src":"8231:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"8236:6:27"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8213:12:27"},"nodeType":"YulFunctionCall","src":"8213:30:27"},"nodeType":"YulExpressionStatement","src":"8213:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8284:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"8289:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8280:3:27"},"nodeType":"YulFunctionCall","src":"8280:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"8298:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8273:6:27"},"nodeType":"YulFunctionCall","src":"8273:27:27"},"nodeType":"YulExpressionStatement","src":"8273:27:27"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8185:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8190:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"8195:6:27","type":""}],"src":"8152:154:27"},{"body":{"nodeType":"YulBlock","src":"8395:327:27","statements":[{"nodeType":"YulAssignment","src":"8405:74:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8471:6:27"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8430:40:27"},"nodeType":"YulFunctionCall","src":"8430:48:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8414:15:27"},"nodeType":"YulFunctionCall","src":"8414:65:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8405:5:27"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8495:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"8502:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8488:6:27"},"nodeType":"YulFunctionCall","src":"8488:21:27"},"nodeType":"YulExpressionStatement","src":"8488:21:27"},{"nodeType":"YulVariableDeclaration","src":"8518:27:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8533:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"8540:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8529:3:27"},"nodeType":"YulFunctionCall","src":"8529:16:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8522:3:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"8583:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8585:77:27"},"nodeType":"YulFunctionCall","src":"8585:79:27"},"nodeType":"YulExpressionStatement","src":"8585:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8564:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"8569:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8560:3:27"},"nodeType":"YulFunctionCall","src":"8560:16:27"},{"name":"end","nodeType":"YulIdentifier","src":"8578:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8557:2:27"},"nodeType":"YulFunctionCall","src":"8557:25:27"},"nodeType":"YulIf","src":"8554:112:27"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8699:3:27"},{"name":"dst","nodeType":"YulIdentifier","src":"8704:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"8709:6:27"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"8675:23:27"},"nodeType":"YulFunctionCall","src":"8675:41:27"},"nodeType":"YulExpressionStatement","src":"8675:41:27"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8368:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"8373:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"8381:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8389:5:27","type":""}],"src":"8312:410:27"},{"body":{"nodeType":"YulBlock","src":"8802:277:27","statements":[{"body":{"nodeType":"YulBlock","src":"8851:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8853:77:27"},"nodeType":"YulFunctionCall","src":"8853:79:27"},"nodeType":"YulExpressionStatement","src":"8853:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8830:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8838:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8826:3:27"},"nodeType":"YulFunctionCall","src":"8826:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"8845:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8822:3:27"},"nodeType":"YulFunctionCall","src":"8822:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8815:6:27"},"nodeType":"YulFunctionCall","src":"8815:35:27"},"nodeType":"YulIf","src":"8812:122:27"},{"nodeType":"YulVariableDeclaration","src":"8943:34:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8970:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8957:12:27"},"nodeType":"YulFunctionCall","src":"8957:20:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8947:6:27","type":""}]},{"nodeType":"YulAssignment","src":"8986:87:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9046:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"9054:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9042:3:27"},"nodeType":"YulFunctionCall","src":"9042:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"9061:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"9069:3:27"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8995:46:27"},"nodeType":"YulFunctionCall","src":"8995:78:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8986:5:27"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8780:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"8788:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8796:5:27","type":""}],"src":"8741:338:27"},{"body":{"nodeType":"YulBlock","src":"9211:817:27","statements":[{"body":{"nodeType":"YulBlock","src":"9258:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9260:77:27"},"nodeType":"YulFunctionCall","src":"9260:79:27"},"nodeType":"YulExpressionStatement","src":"9260:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9232:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"9241:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9228:3:27"},"nodeType":"YulFunctionCall","src":"9228:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"9253:3:27","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9224:3:27"},"nodeType":"YulFunctionCall","src":"9224:33:27"},"nodeType":"YulIf","src":"9221:120:27"},{"nodeType":"YulBlock","src":"9351:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9366:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"9380:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9370:6:27","type":""}]},{"nodeType":"YulAssignment","src":"9395:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9430:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"9441:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9426:3:27"},"nodeType":"YulFunctionCall","src":"9426:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9450:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9405:20:27"},"nodeType":"YulFunctionCall","src":"9405:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9395:6:27"}]}]},{"nodeType":"YulBlock","src":"9478:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9493:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"9507:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9497:6:27","type":""}]},{"nodeType":"YulAssignment","src":"9523:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9558:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"9569:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9554:3:27"},"nodeType":"YulFunctionCall","src":"9554:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9578:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9533:20:27"},"nodeType":"YulFunctionCall","src":"9533:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9523:6:27"}]}]},{"nodeType":"YulBlock","src":"9606:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9621:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"9635:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9625:6:27","type":""}]},{"nodeType":"YulAssignment","src":"9651:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9686:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"9697:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9682:3:27"},"nodeType":"YulFunctionCall","src":"9682:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9706:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9661:20:27"},"nodeType":"YulFunctionCall","src":"9661:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9651:6:27"}]}]},{"nodeType":"YulBlock","src":"9734:287:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9749:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9780:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9791:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9776:3:27"},"nodeType":"YulFunctionCall","src":"9776:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9763:12:27"},"nodeType":"YulFunctionCall","src":"9763:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9753:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"9842:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9844:77:27"},"nodeType":"YulFunctionCall","src":"9844:79:27"},"nodeType":"YulExpressionStatement","src":"9844:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9814:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"9822:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9811:2:27"},"nodeType":"YulFunctionCall","src":"9811:30:27"},"nodeType":"YulIf","src":"9808:117:27"},{"nodeType":"YulAssignment","src":"9939:72:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9983:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"9994:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9979:3:27"},"nodeType":"YulFunctionCall","src":"9979:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10003:7:27"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9949:29:27"},"nodeType":"YulFunctionCall","src":"9949:62:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9939:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9157:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9168:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9180:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9188:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9196:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9204:6:27","type":""}],"src":"9085:943:27"},{"body":{"nodeType":"YulBlock","src":"10117:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"10163:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10165:77:27"},"nodeType":"YulFunctionCall","src":"10165:79:27"},"nodeType":"YulExpressionStatement","src":"10165:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10138:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"10147:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10134:3:27"},"nodeType":"YulFunctionCall","src":"10134:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"10159:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10130:3:27"},"nodeType":"YulFunctionCall","src":"10130:32:27"},"nodeType":"YulIf","src":"10127:119:27"},{"nodeType":"YulBlock","src":"10256:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10271:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"10285:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10275:6:27","type":""}]},{"nodeType":"YulAssignment","src":"10300:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10335:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"10346:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10331:3:27"},"nodeType":"YulFunctionCall","src":"10331:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10355:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10310:20:27"},"nodeType":"YulFunctionCall","src":"10310:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10300:6:27"}]}]},{"nodeType":"YulBlock","src":"10383:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10398:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"10412:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10402:6:27","type":""}]},{"nodeType":"YulAssignment","src":"10428:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10463:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"10474:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10459:3:27"},"nodeType":"YulFunctionCall","src":"10459:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10483:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10438:20:27"},"nodeType":"YulFunctionCall","src":"10438:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10428:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10079:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10090:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10102:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10110:6:27","type":""}],"src":"10034:474:27"},{"body":{"nodeType":"YulBlock","src":"10581:241:27","statements":[{"body":{"nodeType":"YulBlock","src":"10686:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10688:16:27"},"nodeType":"YulFunctionCall","src":"10688:18:27"},"nodeType":"YulExpressionStatement","src":"10688:18:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10658:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"10666:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10655:2:27"},"nodeType":"YulFunctionCall","src":"10655:30:27"},"nodeType":"YulIf","src":"10652:56:27"},{"nodeType":"YulAssignment","src":"10718:37:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10748:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10726:21:27"},"nodeType":"YulFunctionCall","src":"10726:29:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10718:4:27"}]},{"nodeType":"YulAssignment","src":"10792:23:27","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10804:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"10810:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10800:3:27"},"nodeType":"YulFunctionCall","src":"10800:15:27"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10792:4:27"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"10565:6:27","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"10576:4:27","type":""}],"src":"10514:308:27"},{"body":{"nodeType":"YulBlock","src":"10912:328:27","statements":[{"nodeType":"YulAssignment","src":"10922:75:27","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10989:6:27"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10947:41:27"},"nodeType":"YulFunctionCall","src":"10947:49:27"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"10931:15:27"},"nodeType":"YulFunctionCall","src":"10931:66:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10922:5:27"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11013:5:27"},{"name":"length","nodeType":"YulIdentifier","src":"11020:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11006:6:27"},"nodeType":"YulFunctionCall","src":"11006:21:27"},"nodeType":"YulExpressionStatement","src":"11006:21:27"},{"nodeType":"YulVariableDeclaration","src":"11036:27:27","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11051:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"11058:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11047:3:27"},"nodeType":"YulFunctionCall","src":"11047:16:27"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"11040:3:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"11101:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"11103:77:27"},"nodeType":"YulFunctionCall","src":"11103:79:27"},"nodeType":"YulExpressionStatement","src":"11103:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11082:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"11087:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11078:3:27"},"nodeType":"YulFunctionCall","src":"11078:16:27"},{"name":"end","nodeType":"YulIdentifier","src":"11096:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11075:2:27"},"nodeType":"YulFunctionCall","src":"11075:25:27"},"nodeType":"YulIf","src":"11072:112:27"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11217:3:27"},{"name":"dst","nodeType":"YulIdentifier","src":"11222:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"11227:6:27"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"11193:23:27"},"nodeType":"YulFunctionCall","src":"11193:41:27"},"nodeType":"YulExpressionStatement","src":"11193:41:27"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10885:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"10890:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"10898:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10906:5:27","type":""}],"src":"10828:412:27"},{"body":{"nodeType":"YulBlock","src":"11322:278:27","statements":[{"body":{"nodeType":"YulBlock","src":"11371:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"11373:77:27"},"nodeType":"YulFunctionCall","src":"11373:79:27"},"nodeType":"YulExpressionStatement","src":"11373:79:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11350:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"11358:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11346:3:27"},"nodeType":"YulFunctionCall","src":"11346:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"11365:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11342:3:27"},"nodeType":"YulFunctionCall","src":"11342:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11335:6:27"},"nodeType":"YulFunctionCall","src":"11335:35:27"},"nodeType":"YulIf","src":"11332:122:27"},{"nodeType":"YulVariableDeclaration","src":"11463:34:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11490:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11477:12:27"},"nodeType":"YulFunctionCall","src":"11477:20:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11467:6:27","type":""}]},{"nodeType":"YulAssignment","src":"11506:88:27","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11567:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"11575:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11563:3:27"},"nodeType":"YulFunctionCall","src":"11563:17:27"},{"name":"length","nodeType":"YulIdentifier","src":"11582:6:27"},{"name":"end","nodeType":"YulIdentifier","src":"11590:3:27"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11515:47:27"},"nodeType":"YulFunctionCall","src":"11515:79:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11506:5:27"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11300:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"11308:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11316:5:27","type":""}],"src":"11260:340:27"},{"body":{"nodeType":"YulBlock","src":"11699:561:27","statements":[{"body":{"nodeType":"YulBlock","src":"11745:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11747:77:27"},"nodeType":"YulFunctionCall","src":"11747:79:27"},"nodeType":"YulExpressionStatement","src":"11747:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11720:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"11729:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11716:3:27"},"nodeType":"YulFunctionCall","src":"11716:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"11741:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11712:3:27"},"nodeType":"YulFunctionCall","src":"11712:32:27"},"nodeType":"YulIf","src":"11709:119:27"},{"nodeType":"YulBlock","src":"11838:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11853:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"11867:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11857:6:27","type":""}]},{"nodeType":"YulAssignment","src":"11882:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11917:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"11928:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11913:3:27"},"nodeType":"YulFunctionCall","src":"11913:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11937:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11892:20:27"},"nodeType":"YulFunctionCall","src":"11892:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11882:6:27"}]}]},{"nodeType":"YulBlock","src":"11965:288:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11980:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12011:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12022:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12007:3:27"},"nodeType":"YulFunctionCall","src":"12007:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11994:12:27"},"nodeType":"YulFunctionCall","src":"11994:32:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11984:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"12073:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12075:77:27"},"nodeType":"YulFunctionCall","src":"12075:79:27"},"nodeType":"YulExpressionStatement","src":"12075:79:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12045:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"12053:18:27","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12042:2:27"},"nodeType":"YulFunctionCall","src":"12042:30:27"},"nodeType":"YulIf","src":"12039:117:27"},{"nodeType":"YulAssignment","src":"12170:73:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12215:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"12226:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12211:3:27"},"nodeType":"YulFunctionCall","src":"12211:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12235:7:27"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"12180:30:27"},"nodeType":"YulFunctionCall","src":"12180:63:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12170:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11661:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11672:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11684:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11692:6:27","type":""}],"src":"11606:654:27"},{"body":{"nodeType":"YulBlock","src":"12294:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12311:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12314:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12304:6:27"},"nodeType":"YulFunctionCall","src":"12304:88:27"},"nodeType":"YulExpressionStatement","src":"12304:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12408:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12411:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12401:6:27"},"nodeType":"YulFunctionCall","src":"12401:15:27"},"nodeType":"YulExpressionStatement","src":"12401:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12432:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12435:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12425:6:27"},"nodeType":"YulFunctionCall","src":"12425:15:27"},"nodeType":"YulExpressionStatement","src":"12425:15:27"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"12266:180:27"},{"body":{"nodeType":"YulBlock","src":"12503:269:27","statements":[{"nodeType":"YulAssignment","src":"12513:22:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12527:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"12533:1:27","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12523:3:27"},"nodeType":"YulFunctionCall","src":"12523:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12513:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"12544:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12574:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"12580:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12570:3:27"},"nodeType":"YulFunctionCall","src":"12570:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"12548:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"12621:51:27","statements":[{"nodeType":"YulAssignment","src":"12635:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12649:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"12657:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12645:3:27"},"nodeType":"YulFunctionCall","src":"12645:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12635:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12601:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12594:6:27"},"nodeType":"YulFunctionCall","src":"12594:26:27"},"nodeType":"YulIf","src":"12591:81:27"},{"body":{"nodeType":"YulBlock","src":"12724:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"12738:16:27"},"nodeType":"YulFunctionCall","src":"12738:18:27"},"nodeType":"YulExpressionStatement","src":"12738:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12688:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12711:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"12719:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12708:2:27"},"nodeType":"YulFunctionCall","src":"12708:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12685:2:27"},"nodeType":"YulFunctionCall","src":"12685:38:27"},"nodeType":"YulIf","src":"12682:84:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"12487:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12496:6:27","type":""}],"src":"12452:320:27"},{"body":{"nodeType":"YulBlock","src":"12884:114:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12906:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"12914:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12902:3:27"},"nodeType":"YulFunctionCall","src":"12902:14:27"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"12918:34:27","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12895:6:27"},"nodeType":"YulFunctionCall","src":"12895:58:27"},"nodeType":"YulExpressionStatement","src":"12895:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12974:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"12982:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12970:3:27"},"nodeType":"YulFunctionCall","src":"12970:15:27"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"12987:3:27","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12963:6:27"},"nodeType":"YulFunctionCall","src":"12963:28:27"},"nodeType":"YulExpressionStatement","src":"12963:28:27"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12876:6:27","type":""}],"src":"12778:220:27"},{"body":{"nodeType":"YulBlock","src":"13150:220:27","statements":[{"nodeType":"YulAssignment","src":"13160:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13226:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"13231:2:27","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13167:58:27"},"nodeType":"YulFunctionCall","src":"13167:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13160:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13332:3:27"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"13243:88:27"},"nodeType":"YulFunctionCall","src":"13243:93:27"},"nodeType":"YulExpressionStatement","src":"13243:93:27"},{"nodeType":"YulAssignment","src":"13345:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13356:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"13361:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13352:3:27"},"nodeType":"YulFunctionCall","src":"13352:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13345:3:27"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13138:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13146:3:27","type":""}],"src":"13004:366:27"},{"body":{"nodeType":"YulBlock","src":"13547:248:27","statements":[{"nodeType":"YulAssignment","src":"13557:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13569:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13580:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13565:3:27"},"nodeType":"YulFunctionCall","src":"13565:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13557:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13604:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13615:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13600:3:27"},"nodeType":"YulFunctionCall","src":"13600:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13623:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"13629:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13619:3:27"},"nodeType":"YulFunctionCall","src":"13619:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13593:6:27"},"nodeType":"YulFunctionCall","src":"13593:47:27"},"nodeType":"YulExpressionStatement","src":"13593:47:27"},{"nodeType":"YulAssignment","src":"13649:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13783:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13657:124:27"},"nodeType":"YulFunctionCall","src":"13657:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13649:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13527:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13542:4:27","type":""}],"src":"13376:419:27"},{"body":{"nodeType":"YulBlock","src":"13907:142:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13929:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"13937:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13925:3:27"},"nodeType":"YulFunctionCall","src":"13925:14:27"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"13941:34:27","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13918:6:27"},"nodeType":"YulFunctionCall","src":"13918:58:27"},"nodeType":"YulExpressionStatement","src":"13918:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13997:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"14005:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13993:3:27"},"nodeType":"YulFunctionCall","src":"13993:15:27"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"14010:31:27","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13986:6:27"},"nodeType":"YulFunctionCall","src":"13986:56:27"},"nodeType":"YulExpressionStatement","src":"13986:56:27"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13899:6:27","type":""}],"src":"13801:248:27"},{"body":{"nodeType":"YulBlock","src":"14201:220:27","statements":[{"nodeType":"YulAssignment","src":"14211:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14277:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"14282:2:27","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14218:58:27"},"nodeType":"YulFunctionCall","src":"14218:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14211:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14383:3:27"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"14294:88:27"},"nodeType":"YulFunctionCall","src":"14294:93:27"},"nodeType":"YulExpressionStatement","src":"14294:93:27"},{"nodeType":"YulAssignment","src":"14396:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14407:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"14412:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14403:3:27"},"nodeType":"YulFunctionCall","src":"14403:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14396:3:27"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14189:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14197:3:27","type":""}],"src":"14055:366:27"},{"body":{"nodeType":"YulBlock","src":"14598:248:27","statements":[{"nodeType":"YulAssignment","src":"14608:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14620:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14631:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14616:3:27"},"nodeType":"YulFunctionCall","src":"14616:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14608:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14655:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14666:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14651:3:27"},"nodeType":"YulFunctionCall","src":"14651:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14674:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"14680:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14670:3:27"},"nodeType":"YulFunctionCall","src":"14670:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14644:6:27"},"nodeType":"YulFunctionCall","src":"14644:47:27"},"nodeType":"YulExpressionStatement","src":"14644:47:27"},{"nodeType":"YulAssignment","src":"14700:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14834:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14708:124:27"},"nodeType":"YulFunctionCall","src":"14708:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14700:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14578:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14593:4:27","type":""}],"src":"14427:419:27"},{"body":{"nodeType":"YulBlock","src":"14958:126:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14980:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"14988:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14976:3:27"},"nodeType":"YulFunctionCall","src":"14976:14:27"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"14992:34:27","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14969:6:27"},"nodeType":"YulFunctionCall","src":"14969:58:27"},"nodeType":"YulExpressionStatement","src":"14969:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15048:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"15056:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15044:3:27"},"nodeType":"YulFunctionCall","src":"15044:15:27"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"15061:15:27","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15037:6:27"},"nodeType":"YulFunctionCall","src":"15037:40:27"},"nodeType":"YulExpressionStatement","src":"15037:40:27"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14950:6:27","type":""}],"src":"14852:232:27"},{"body":{"nodeType":"YulBlock","src":"15236:220:27","statements":[{"nodeType":"YulAssignment","src":"15246:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15312:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"15317:2:27","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15253:58:27"},"nodeType":"YulFunctionCall","src":"15253:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15246:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15418:3:27"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"15329:88:27"},"nodeType":"YulFunctionCall","src":"15329:93:27"},"nodeType":"YulExpressionStatement","src":"15329:93:27"},{"nodeType":"YulAssignment","src":"15431:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15442:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"15447:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15438:3:27"},"nodeType":"YulFunctionCall","src":"15438:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15431:3:27"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15224:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15232:3:27","type":""}],"src":"15090:366:27"},{"body":{"nodeType":"YulBlock","src":"15633:248:27","statements":[{"nodeType":"YulAssignment","src":"15643:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15655:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15666:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15651:3:27"},"nodeType":"YulFunctionCall","src":"15651:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15643:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15690:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15701:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15686:3:27"},"nodeType":"YulFunctionCall","src":"15686:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15709:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"15715:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15705:3:27"},"nodeType":"YulFunctionCall","src":"15705:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15679:6:27"},"nodeType":"YulFunctionCall","src":"15679:47:27"},"nodeType":"YulExpressionStatement","src":"15679:47:27"},{"nodeType":"YulAssignment","src":"15735:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15869:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15743:124:27"},"nodeType":"YulFunctionCall","src":"15743:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15735:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15613:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15628:4:27","type":""}],"src":"15462:419:27"},{"body":{"nodeType":"YulBlock","src":"15993:68:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16015:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"16023:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16011:3:27"},"nodeType":"YulFunctionCall","src":"16011:14:27"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"16027:26:27","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16004:6:27"},"nodeType":"YulFunctionCall","src":"16004:50:27"},"nodeType":"YulExpressionStatement","src":"16004:50:27"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15985:6:27","type":""}],"src":"15887:174:27"},{"body":{"nodeType":"YulBlock","src":"16213:220:27","statements":[{"nodeType":"YulAssignment","src":"16223:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16289:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"16294:2:27","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16230:58:27"},"nodeType":"YulFunctionCall","src":"16230:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16223:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16395:3:27"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"16306:88:27"},"nodeType":"YulFunctionCall","src":"16306:93:27"},"nodeType":"YulExpressionStatement","src":"16306:93:27"},{"nodeType":"YulAssignment","src":"16408:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16419:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"16424:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16415:3:27"},"nodeType":"YulFunctionCall","src":"16415:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16408:3:27"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16201:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16209:3:27","type":""}],"src":"16067:366:27"},{"body":{"nodeType":"YulBlock","src":"16610:248:27","statements":[{"nodeType":"YulAssignment","src":"16620:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16632:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16643:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16628:3:27"},"nodeType":"YulFunctionCall","src":"16628:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16620:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16667:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16678:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16663:3:27"},"nodeType":"YulFunctionCall","src":"16663:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16686:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"16692:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16682:3:27"},"nodeType":"YulFunctionCall","src":"16682:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16656:6:27"},"nodeType":"YulFunctionCall","src":"16656:47:27"},"nodeType":"YulExpressionStatement","src":"16656:47:27"},{"nodeType":"YulAssignment","src":"16712:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16846:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16720:124:27"},"nodeType":"YulFunctionCall","src":"16720:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16712:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16590:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16605:4:27","type":""}],"src":"16439:419:27"},{"body":{"nodeType":"YulBlock","src":"16970:122:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16992:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"17000:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16988:3:27"},"nodeType":"YulFunctionCall","src":"16988:14:27"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"17004:34:27","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16981:6:27"},"nodeType":"YulFunctionCall","src":"16981:58:27"},"nodeType":"YulExpressionStatement","src":"16981:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17060:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"17068:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17056:3:27"},"nodeType":"YulFunctionCall","src":"17056:15:27"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"17073:11:27","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17049:6:27"},"nodeType":"YulFunctionCall","src":"17049:36:27"},"nodeType":"YulExpressionStatement","src":"17049:36:27"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16962:6:27","type":""}],"src":"16864:228:27"},{"body":{"nodeType":"YulBlock","src":"17244:220:27","statements":[{"nodeType":"YulAssignment","src":"17254:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17320:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"17325:2:27","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17261:58:27"},"nodeType":"YulFunctionCall","src":"17261:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17254:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17426:3:27"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"17337:88:27"},"nodeType":"YulFunctionCall","src":"17337:93:27"},"nodeType":"YulExpressionStatement","src":"17337:93:27"},{"nodeType":"YulAssignment","src":"17439:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17450:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"17455:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17446:3:27"},"nodeType":"YulFunctionCall","src":"17446:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17439:3:27"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17232:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17240:3:27","type":""}],"src":"17098:366:27"},{"body":{"nodeType":"YulBlock","src":"17641:248:27","statements":[{"nodeType":"YulAssignment","src":"17651:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17663:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17674:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17659:3:27"},"nodeType":"YulFunctionCall","src":"17659:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17651:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17698:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17709:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17694:3:27"},"nodeType":"YulFunctionCall","src":"17694:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17717:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"17723:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17713:3:27"},"nodeType":"YulFunctionCall","src":"17713:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17687:6:27"},"nodeType":"YulFunctionCall","src":"17687:47:27"},"nodeType":"YulExpressionStatement","src":"17687:47:27"},{"nodeType":"YulAssignment","src":"17743:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17877:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17751:124:27"},"nodeType":"YulFunctionCall","src":"17751:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17743:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17621:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17636:4:27","type":""}],"src":"17470:419:27"},{"body":{"nodeType":"YulBlock","src":"18009:34:27","statements":[{"nodeType":"YulAssignment","src":"18019:18:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"18034:3:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"18019:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17981:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"17986:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17997:11:27","type":""}],"src":"17895:148:27"},{"body":{"nodeType":"YulBlock","src":"18159:267:27","statements":[{"nodeType":"YulVariableDeclaration","src":"18169:53:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18216:5:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18183:32:27"},"nodeType":"YulFunctionCall","src":"18183:39:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18173:6:27","type":""}]},{"nodeType":"YulAssignment","src":"18231:96:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18315:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"18320:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18238:76:27"},"nodeType":"YulFunctionCall","src":"18238:89:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18231:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18362:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"18369:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18358:3:27"},"nodeType":"YulFunctionCall","src":"18358:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"18376:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"18381:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"18336:21:27"},"nodeType":"YulFunctionCall","src":"18336:52:27"},"nodeType":"YulExpressionStatement","src":"18336:52:27"},{"nodeType":"YulAssignment","src":"18397:23:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18408:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"18413:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18404:3:27"},"nodeType":"YulFunctionCall","src":"18404:16:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18397:3:27"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18140:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18147:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18155:3:27","type":""}],"src":"18049:377:27"},{"body":{"nodeType":"YulBlock","src":"18616:251:27","statements":[{"nodeType":"YulAssignment","src":"18627:102:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18716:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"18725:3:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18634:81:27"},"nodeType":"YulFunctionCall","src":"18634:95:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18627:3:27"}]},{"nodeType":"YulAssignment","src":"18739:102:27","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18828:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"18837:3:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18746:81:27"},"nodeType":"YulFunctionCall","src":"18746:95:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18739:3:27"}]},{"nodeType":"YulAssignment","src":"18851:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"18858:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18851:3:27"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18587:3:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18593:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18601:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18612:3:27","type":""}],"src":"18432:435:27"},{"body":{"nodeType":"YulBlock","src":"18979:119:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19001:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"19009:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18997:3:27"},"nodeType":"YulFunctionCall","src":"18997:14:27"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"19013:34:27","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18990:6:27"},"nodeType":"YulFunctionCall","src":"18990:58:27"},"nodeType":"YulExpressionStatement","src":"18990:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19069:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"19077:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19065:3:27"},"nodeType":"YulFunctionCall","src":"19065:15:27"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"19082:8:27","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19058:6:27"},"nodeType":"YulFunctionCall","src":"19058:33:27"},"nodeType":"YulExpressionStatement","src":"19058:33:27"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18971:6:27","type":""}],"src":"18873:225:27"},{"body":{"nodeType":"YulBlock","src":"19250:220:27","statements":[{"nodeType":"YulAssignment","src":"19260:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19326:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"19331:2:27","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19267:58:27"},"nodeType":"YulFunctionCall","src":"19267:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19260:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19432:3:27"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"19343:88:27"},"nodeType":"YulFunctionCall","src":"19343:93:27"},"nodeType":"YulExpressionStatement","src":"19343:93:27"},{"nodeType":"YulAssignment","src":"19445:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19456:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"19461:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19452:3:27"},"nodeType":"YulFunctionCall","src":"19452:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19445:3:27"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19238:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19246:3:27","type":""}],"src":"19104:366:27"},{"body":{"nodeType":"YulBlock","src":"19647:248:27","statements":[{"nodeType":"YulAssignment","src":"19657:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19669:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19680:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19665:3:27"},"nodeType":"YulFunctionCall","src":"19665:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19657:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19704:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19715:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19700:3:27"},"nodeType":"YulFunctionCall","src":"19700:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19723:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"19729:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19719:3:27"},"nodeType":"YulFunctionCall","src":"19719:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19693:6:27"},"nodeType":"YulFunctionCall","src":"19693:47:27"},"nodeType":"YulExpressionStatement","src":"19693:47:27"},{"nodeType":"YulAssignment","src":"19749:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19883:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19757:124:27"},"nodeType":"YulFunctionCall","src":"19757:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19749:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19627:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19642:4:27","type":""}],"src":"19476:419:27"},{"body":{"nodeType":"YulBlock","src":"20007:118:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20029:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"20037:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20025:3:27"},"nodeType":"YulFunctionCall","src":"20025:14:27"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"20041:34:27","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20018:6:27"},"nodeType":"YulFunctionCall","src":"20018:58:27"},"nodeType":"YulExpressionStatement","src":"20018:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20097:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"20105:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20093:3:27"},"nodeType":"YulFunctionCall","src":"20093:15:27"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"20110:7:27","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20086:6:27"},"nodeType":"YulFunctionCall","src":"20086:32:27"},"nodeType":"YulExpressionStatement","src":"20086:32:27"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19999:6:27","type":""}],"src":"19901:224:27"},{"body":{"nodeType":"YulBlock","src":"20277:220:27","statements":[{"nodeType":"YulAssignment","src":"20287:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20353:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"20358:2:27","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20294:58:27"},"nodeType":"YulFunctionCall","src":"20294:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20287:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20459:3:27"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"20370:88:27"},"nodeType":"YulFunctionCall","src":"20370:93:27"},"nodeType":"YulExpressionStatement","src":"20370:93:27"},{"nodeType":"YulAssignment","src":"20472:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20483:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"20488:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20479:3:27"},"nodeType":"YulFunctionCall","src":"20479:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20472:3:27"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20265:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20273:3:27","type":""}],"src":"20131:366:27"},{"body":{"nodeType":"YulBlock","src":"20674:248:27","statements":[{"nodeType":"YulAssignment","src":"20684:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20696:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20707:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20692:3:27"},"nodeType":"YulFunctionCall","src":"20692:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20684:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20731:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20742:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20727:3:27"},"nodeType":"YulFunctionCall","src":"20727:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20750:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"20756:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20746:3:27"},"nodeType":"YulFunctionCall","src":"20746:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20720:6:27"},"nodeType":"YulFunctionCall","src":"20720:47:27"},"nodeType":"YulExpressionStatement","src":"20720:47:27"},{"nodeType":"YulAssignment","src":"20776:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20910:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20784:124:27"},"nodeType":"YulFunctionCall","src":"20784:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20776:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20654:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20669:4:27","type":""}],"src":"20503:419:27"},{"body":{"nodeType":"YulBlock","src":"21034:117:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21056:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"21064:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21052:3:27"},"nodeType":"YulFunctionCall","src":"21052:14:27"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"21068:34:27","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21045:6:27"},"nodeType":"YulFunctionCall","src":"21045:58:27"},"nodeType":"YulExpressionStatement","src":"21045:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21124:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"21132:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21120:3:27"},"nodeType":"YulFunctionCall","src":"21120:15:27"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"21137:6:27","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21113:6:27"},"nodeType":"YulFunctionCall","src":"21113:31:27"},"nodeType":"YulExpressionStatement","src":"21113:31:27"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21026:6:27","type":""}],"src":"20928:223:27"},{"body":{"nodeType":"YulBlock","src":"21303:220:27","statements":[{"nodeType":"YulAssignment","src":"21313:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21379:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"21384:2:27","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21320:58:27"},"nodeType":"YulFunctionCall","src":"21320:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21313:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21485:3:27"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"21396:88:27"},"nodeType":"YulFunctionCall","src":"21396:93:27"},"nodeType":"YulExpressionStatement","src":"21396:93:27"},{"nodeType":"YulAssignment","src":"21498:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21509:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"21514:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21505:3:27"},"nodeType":"YulFunctionCall","src":"21505:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21498:3:27"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21291:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21299:3:27","type":""}],"src":"21157:366:27"},{"body":{"nodeType":"YulBlock","src":"21700:248:27","statements":[{"nodeType":"YulAssignment","src":"21710:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21722:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21733:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21718:3:27"},"nodeType":"YulFunctionCall","src":"21718:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21710:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21757:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21768:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21753:3:27"},"nodeType":"YulFunctionCall","src":"21753:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21776:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"21782:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21772:3:27"},"nodeType":"YulFunctionCall","src":"21772:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21746:6:27"},"nodeType":"YulFunctionCall","src":"21746:47:27"},"nodeType":"YulExpressionStatement","src":"21746:47:27"},{"nodeType":"YulAssignment","src":"21802:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21936:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21810:124:27"},"nodeType":"YulFunctionCall","src":"21810:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21802:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21680:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21695:4:27","type":""}],"src":"21529:419:27"},{"body":{"nodeType":"YulBlock","src":"22060:76:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22082:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"22090:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22078:3:27"},"nodeType":"YulFunctionCall","src":"22078:14:27"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"22094:34:27","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22071:6:27"},"nodeType":"YulFunctionCall","src":"22071:58:27"},"nodeType":"YulExpressionStatement","src":"22071:58:27"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22052:6:27","type":""}],"src":"21954:182:27"},{"body":{"nodeType":"YulBlock","src":"22288:220:27","statements":[{"nodeType":"YulAssignment","src":"22298:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22364:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"22369:2:27","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22305:58:27"},"nodeType":"YulFunctionCall","src":"22305:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22298:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22470:3:27"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"22381:88:27"},"nodeType":"YulFunctionCall","src":"22381:93:27"},"nodeType":"YulExpressionStatement","src":"22381:93:27"},{"nodeType":"YulAssignment","src":"22483:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22494:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"22499:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22490:3:27"},"nodeType":"YulFunctionCall","src":"22490:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22483:3:27"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22276:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22284:3:27","type":""}],"src":"22142:366:27"},{"body":{"nodeType":"YulBlock","src":"22685:248:27","statements":[{"nodeType":"YulAssignment","src":"22695:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22707:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22718:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22703:3:27"},"nodeType":"YulFunctionCall","src":"22703:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22695:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22742:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22753:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22738:3:27"},"nodeType":"YulFunctionCall","src":"22738:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22761:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"22767:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22757:3:27"},"nodeType":"YulFunctionCall","src":"22757:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22731:6:27"},"nodeType":"YulFunctionCall","src":"22731:47:27"},"nodeType":"YulExpressionStatement","src":"22731:47:27"},{"nodeType":"YulAssignment","src":"22787:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22921:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22795:124:27"},"nodeType":"YulFunctionCall","src":"22795:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22787:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22665:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22680:4:27","type":""}],"src":"22514:419:27"},{"body":{"nodeType":"YulBlock","src":"23045:69:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23067:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"23075:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23063:3:27"},"nodeType":"YulFunctionCall","src":"23063:14:27"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"23079:27:27","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23056:6:27"},"nodeType":"YulFunctionCall","src":"23056:51:27"},"nodeType":"YulExpressionStatement","src":"23056:51:27"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23037:6:27","type":""}],"src":"22939:175:27"},{"body":{"nodeType":"YulBlock","src":"23266:220:27","statements":[{"nodeType":"YulAssignment","src":"23276:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23342:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"23347:2:27","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23283:58:27"},"nodeType":"YulFunctionCall","src":"23283:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23276:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23448:3:27"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"23359:88:27"},"nodeType":"YulFunctionCall","src":"23359:93:27"},"nodeType":"YulExpressionStatement","src":"23359:93:27"},{"nodeType":"YulAssignment","src":"23461:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23472:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"23477:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23468:3:27"},"nodeType":"YulFunctionCall","src":"23468:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23461:3:27"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23254:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23262:3:27","type":""}],"src":"23120:366:27"},{"body":{"nodeType":"YulBlock","src":"23663:248:27","statements":[{"nodeType":"YulAssignment","src":"23673:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23685:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23696:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23681:3:27"},"nodeType":"YulFunctionCall","src":"23681:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23673:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23720:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23731:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23716:3:27"},"nodeType":"YulFunctionCall","src":"23716:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23739:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"23745:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23735:3:27"},"nodeType":"YulFunctionCall","src":"23735:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23709:6:27"},"nodeType":"YulFunctionCall","src":"23709:47:27"},"nodeType":"YulExpressionStatement","src":"23709:47:27"},{"nodeType":"YulAssignment","src":"23765:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23899:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23773:124:27"},"nodeType":"YulFunctionCall","src":"23773:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23765:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23643:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23658:4:27","type":""}],"src":"23492:419:27"},{"body":{"nodeType":"YulBlock","src":"24023:131:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24045:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"24053:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24041:3:27"},"nodeType":"YulFunctionCall","src":"24041:14:27"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"24057:34:27","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24034:6:27"},"nodeType":"YulFunctionCall","src":"24034:58:27"},"nodeType":"YulExpressionStatement","src":"24034:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24113:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"24121:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24109:3:27"},"nodeType":"YulFunctionCall","src":"24109:15:27"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"24126:20:27","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24102:6:27"},"nodeType":"YulFunctionCall","src":"24102:45:27"},"nodeType":"YulExpressionStatement","src":"24102:45:27"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24015:6:27","type":""}],"src":"23917:237:27"},{"body":{"nodeType":"YulBlock","src":"24306:220:27","statements":[{"nodeType":"YulAssignment","src":"24316:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24382:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"24387:2:27","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24323:58:27"},"nodeType":"YulFunctionCall","src":"24323:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24316:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24488:3:27"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"24399:88:27"},"nodeType":"YulFunctionCall","src":"24399:93:27"},"nodeType":"YulExpressionStatement","src":"24399:93:27"},{"nodeType":"YulAssignment","src":"24501:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24512:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"24517:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24508:3:27"},"nodeType":"YulFunctionCall","src":"24508:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24501:3:27"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24294:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24302:3:27","type":""}],"src":"24160:366:27"},{"body":{"nodeType":"YulBlock","src":"24703:248:27","statements":[{"nodeType":"YulAssignment","src":"24713:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24725:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"24736:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24721:3:27"},"nodeType":"YulFunctionCall","src":"24721:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24713:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24760:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"24771:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24756:3:27"},"nodeType":"YulFunctionCall","src":"24756:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24779:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"24785:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24775:3:27"},"nodeType":"YulFunctionCall","src":"24775:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24749:6:27"},"nodeType":"YulFunctionCall","src":"24749:47:27"},"nodeType":"YulExpressionStatement","src":"24749:47:27"},{"nodeType":"YulAssignment","src":"24805:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24939:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24813:124:27"},"nodeType":"YulFunctionCall","src":"24813:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24805:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24683:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24698:4:27","type":""}],"src":"24532:419:27"},{"body":{"nodeType":"YulBlock","src":"25063:76:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25085:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"25093:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25081:3:27"},"nodeType":"YulFunctionCall","src":"25081:14:27"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"25097:34:27","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25074:6:27"},"nodeType":"YulFunctionCall","src":"25074:58:27"},"nodeType":"YulExpressionStatement","src":"25074:58:27"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25055:6:27","type":""}],"src":"24957:182:27"},{"body":{"nodeType":"YulBlock","src":"25291:220:27","statements":[{"nodeType":"YulAssignment","src":"25301:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25367:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"25372:2:27","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25308:58:27"},"nodeType":"YulFunctionCall","src":"25308:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25301:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25473:3:27"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"25384:88:27"},"nodeType":"YulFunctionCall","src":"25384:93:27"},"nodeType":"YulExpressionStatement","src":"25384:93:27"},{"nodeType":"YulAssignment","src":"25486:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25497:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"25502:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25493:3:27"},"nodeType":"YulFunctionCall","src":"25493:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25486:3:27"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25279:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25287:3:27","type":""}],"src":"25145:366:27"},{"body":{"nodeType":"YulBlock","src":"25688:248:27","statements":[{"nodeType":"YulAssignment","src":"25698:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25710:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25721:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25706:3:27"},"nodeType":"YulFunctionCall","src":"25706:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25698:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25745:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25756:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25741:3:27"},"nodeType":"YulFunctionCall","src":"25741:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25764:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"25770:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25760:3:27"},"nodeType":"YulFunctionCall","src":"25760:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25734:6:27"},"nodeType":"YulFunctionCall","src":"25734:47:27"},"nodeType":"YulExpressionStatement","src":"25734:47:27"},{"nodeType":"YulAssignment","src":"25790:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25924:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25798:124:27"},"nodeType":"YulFunctionCall","src":"25798:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25790:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25668:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25683:4:27","type":""}],"src":"25517:419:27"},{"body":{"nodeType":"YulBlock","src":"26048:72:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26070:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"26078:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26066:3:27"},"nodeType":"YulFunctionCall","src":"26066:14:27"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"26082:30:27","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26059:6:27"},"nodeType":"YulFunctionCall","src":"26059:54:27"},"nodeType":"YulExpressionStatement","src":"26059:54:27"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26040:6:27","type":""}],"src":"25942:178:27"},{"body":{"nodeType":"YulBlock","src":"26272:220:27","statements":[{"nodeType":"YulAssignment","src":"26282:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26348:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"26353:2:27","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26289:58:27"},"nodeType":"YulFunctionCall","src":"26289:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26282:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26454:3:27"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"26365:88:27"},"nodeType":"YulFunctionCall","src":"26365:93:27"},"nodeType":"YulExpressionStatement","src":"26365:93:27"},{"nodeType":"YulAssignment","src":"26467:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26478:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"26483:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26474:3:27"},"nodeType":"YulFunctionCall","src":"26474:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26467:3:27"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26260:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26268:3:27","type":""}],"src":"26126:366:27"},{"body":{"nodeType":"YulBlock","src":"26669:248:27","statements":[{"nodeType":"YulAssignment","src":"26679:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26691:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"26702:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26687:3:27"},"nodeType":"YulFunctionCall","src":"26687:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26679:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26726:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"26737:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26722:3:27"},"nodeType":"YulFunctionCall","src":"26722:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26745:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"26751:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26741:3:27"},"nodeType":"YulFunctionCall","src":"26741:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26715:6:27"},"nodeType":"YulFunctionCall","src":"26715:47:27"},"nodeType":"YulExpressionStatement","src":"26715:47:27"},{"nodeType":"YulAssignment","src":"26771:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26905:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26779:124:27"},"nodeType":"YulFunctionCall","src":"26779:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26771:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26649:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26664:4:27","type":""}],"src":"26498:419:27"},{"body":{"nodeType":"YulBlock","src":"27029:127:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27051:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"27059:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27047:3:27"},"nodeType":"YulFunctionCall","src":"27047:14:27"},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e","kind":"string","nodeType":"YulLiteral","src":"27063:34:27","type":"","value":"ERC721URIStorage: URI set of non"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27040:6:27"},"nodeType":"YulFunctionCall","src":"27040:58:27"},"nodeType":"YulExpressionStatement","src":"27040:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27119:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"27127:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27115:3:27"},"nodeType":"YulFunctionCall","src":"27115:15:27"},{"hexValue":"6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"27132:16:27","type":"","value":"existent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27108:6:27"},"nodeType":"YulFunctionCall","src":"27108:41:27"},"nodeType":"YulExpressionStatement","src":"27108:41:27"}]},"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27021:6:27","type":""}],"src":"26923:233:27"},{"body":{"nodeType":"YulBlock","src":"27308:220:27","statements":[{"nodeType":"YulAssignment","src":"27318:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27384:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"27389:2:27","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27325:58:27"},"nodeType":"YulFunctionCall","src":"27325:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27318:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27490:3:27"}],"functionName":{"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulIdentifier","src":"27401:88:27"},"nodeType":"YulFunctionCall","src":"27401:93:27"},"nodeType":"YulExpressionStatement","src":"27401:93:27"},{"nodeType":"YulAssignment","src":"27503:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27514:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"27519:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27510:3:27"},"nodeType":"YulFunctionCall","src":"27510:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27503:3:27"}]}]},"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27296:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27304:3:27","type":""}],"src":"27162:366:27"},{"body":{"nodeType":"YulBlock","src":"27705:248:27","statements":[{"nodeType":"YulAssignment","src":"27715:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27727:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27738:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27723:3:27"},"nodeType":"YulFunctionCall","src":"27723:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27715:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27762:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27773:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27758:3:27"},"nodeType":"YulFunctionCall","src":"27758:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27781:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"27787:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27777:3:27"},"nodeType":"YulFunctionCall","src":"27777:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27751:6:27"},"nodeType":"YulFunctionCall","src":"27751:47:27"},"nodeType":"YulExpressionStatement","src":"27751:47:27"},{"nodeType":"YulAssignment","src":"27807:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27941:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27815:124:27"},"nodeType":"YulFunctionCall","src":"27815:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27807:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27685:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27700:4:27","type":""}],"src":"27534:419:27"},{"body":{"nodeType":"YulBlock","src":"27987:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28004:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28007:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27997:6:27"},"nodeType":"YulFunctionCall","src":"27997:88:27"},"nodeType":"YulExpressionStatement","src":"27997:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28101:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"28104:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28094:6:27"},"nodeType":"YulFunctionCall","src":"28094:15:27"},"nodeType":"YulExpressionStatement","src":"28094:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28125:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28128:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28118:6:27"},"nodeType":"YulFunctionCall","src":"28118:15:27"},"nodeType":"YulExpressionStatement","src":"28118:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"27959:180:27"},{"body":{"nodeType":"YulBlock","src":"28190:146:27","statements":[{"nodeType":"YulAssignment","src":"28200:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28223:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28205:17:27"},"nodeType":"YulFunctionCall","src":"28205:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"28200:1:27"}]},{"nodeType":"YulAssignment","src":"28234:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28257:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28239:17:27"},"nodeType":"YulFunctionCall","src":"28239:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"28234:1:27"}]},{"body":{"nodeType":"YulBlock","src":"28281:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"28283:16:27"},"nodeType":"YulFunctionCall","src":"28283:18:27"},"nodeType":"YulExpressionStatement","src":"28283:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28275:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"28278:1:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"28272:2:27"},"nodeType":"YulFunctionCall","src":"28272:8:27"},"nodeType":"YulIf","src":"28269:34:27"},{"nodeType":"YulAssignment","src":"28313:17:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28325:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"28328:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28321:3:27"},"nodeType":"YulFunctionCall","src":"28321:9:27"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"28313:4:27"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"28176:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"28179:1:27","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"28185:4:27","type":""}],"src":"28145:191:27"},{"body":{"nodeType":"YulBlock","src":"28386:261:27","statements":[{"nodeType":"YulAssignment","src":"28396:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28419:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28401:17:27"},"nodeType":"YulFunctionCall","src":"28401:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"28396:1:27"}]},{"nodeType":"YulAssignment","src":"28430:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28453:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28435:17:27"},"nodeType":"YulFunctionCall","src":"28435:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"28430:1:27"}]},{"body":{"nodeType":"YulBlock","src":"28593:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"28595:16:27"},"nodeType":"YulFunctionCall","src":"28595:18:27"},"nodeType":"YulExpressionStatement","src":"28595:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28514:1:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28521:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"28589:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28517:3:27"},"nodeType":"YulFunctionCall","src":"28517:74:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28511:2:27"},"nodeType":"YulFunctionCall","src":"28511:81:27"},"nodeType":"YulIf","src":"28508:107:27"},{"nodeType":"YulAssignment","src":"28625:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28636:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"28639:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28632:3:27"},"nodeType":"YulFunctionCall","src":"28632:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"28625:3:27"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"28373:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"28376:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"28382:3:27","type":""}],"src":"28342:305:27"},{"body":{"nodeType":"YulBlock","src":"28711:40:27","statements":[{"nodeType":"YulAssignment","src":"28722:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28738:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28732:5:27"},"nodeType":"YulFunctionCall","src":"28732:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"28722:6:27"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28694:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"28704:6:27","type":""}],"src":"28653:98:27"},{"body":{"nodeType":"YulBlock","src":"28852:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28869:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"28874:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28862:6:27"},"nodeType":"YulFunctionCall","src":"28862:19:27"},"nodeType":"YulExpressionStatement","src":"28862:19:27"},{"nodeType":"YulAssignment","src":"28890:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28909:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"28914:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28905:3:27"},"nodeType":"YulFunctionCall","src":"28905:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"28890:11:27"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28824:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"28829:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"28840:11:27","type":""}],"src":"28757:168:27"},{"body":{"nodeType":"YulBlock","src":"29021:270:27","statements":[{"nodeType":"YulVariableDeclaration","src":"29031:52:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29077:5:27"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"29045:31:27"},"nodeType":"YulFunctionCall","src":"29045:38:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"29035:6:27","type":""}]},{"nodeType":"YulAssignment","src":"29092:77:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29157:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"29162:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29099:57:27"},"nodeType":"YulFunctionCall","src":"29099:70:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29092:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29204:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"29211:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29200:3:27"},"nodeType":"YulFunctionCall","src":"29200:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"29218:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"29223:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"29178:21:27"},"nodeType":"YulFunctionCall","src":"29178:52:27"},"nodeType":"YulExpressionStatement","src":"29178:52:27"},{"nodeType":"YulAssignment","src":"29239:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29250:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"29277:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"29255:21:27"},"nodeType":"YulFunctionCall","src":"29255:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29246:3:27"},"nodeType":"YulFunctionCall","src":"29246:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29239:3:27"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29002:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29009:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29017:3:27","type":""}],"src":"28931:360:27"},{"body":{"nodeType":"YulBlock","src":"29497:440:27","statements":[{"nodeType":"YulAssignment","src":"29507:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29519:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"29530:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29515:3:27"},"nodeType":"YulFunctionCall","src":"29515:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29507:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"29588:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29601:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"29612:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29597:3:27"},"nodeType":"YulFunctionCall","src":"29597:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"29544:43:27"},"nodeType":"YulFunctionCall","src":"29544:71:27"},"nodeType":"YulExpressionStatement","src":"29544:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"29669:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29682:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"29693:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29678:3:27"},"nodeType":"YulFunctionCall","src":"29678:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"29625:43:27"},"nodeType":"YulFunctionCall","src":"29625:72:27"},"nodeType":"YulExpressionStatement","src":"29625:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"29751:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29764:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"29775:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29760:3:27"},"nodeType":"YulFunctionCall","src":"29760:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"29707:43:27"},"nodeType":"YulFunctionCall","src":"29707:72:27"},"nodeType":"YulExpressionStatement","src":"29707:72:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29800:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"29811:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29796:3:27"},"nodeType":"YulFunctionCall","src":"29796:18:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29820:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"29826:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29816:3:27"},"nodeType":"YulFunctionCall","src":"29816:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29789:6:27"},"nodeType":"YulFunctionCall","src":"29789:48:27"},"nodeType":"YulExpressionStatement","src":"29789:48:27"},{"nodeType":"YulAssignment","src":"29846:84:27","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"29916:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"29925:4:27"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29854:61:27"},"nodeType":"YulFunctionCall","src":"29854:76:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29846:4:27"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29445:9:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"29457:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"29465:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"29473:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"29481:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29492:4:27","type":""}],"src":"29297:640:27"},{"body":{"nodeType":"YulBlock","src":"30005:79:27","statements":[{"nodeType":"YulAssignment","src":"30015:22:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"30030:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30024:5:27"},"nodeType":"YulFunctionCall","src":"30024:13:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"30015:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30072:5:27"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"30046:25:27"},"nodeType":"YulFunctionCall","src":"30046:32:27"},"nodeType":"YulExpressionStatement","src":"30046:32:27"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"29983:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"29991:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"29999:5:27","type":""}],"src":"29943:141:27"},{"body":{"nodeType":"YulBlock","src":"30166:273:27","statements":[{"body":{"nodeType":"YulBlock","src":"30212:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"30214:77:27"},"nodeType":"YulFunctionCall","src":"30214:79:27"},"nodeType":"YulExpressionStatement","src":"30214:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"30187:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"30196:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30183:3:27"},"nodeType":"YulFunctionCall","src":"30183:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"30208:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"30179:3:27"},"nodeType":"YulFunctionCall","src":"30179:32:27"},"nodeType":"YulIf","src":"30176:119:27"},{"nodeType":"YulBlock","src":"30305:127:27","statements":[{"nodeType":"YulVariableDeclaration","src":"30320:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"30334:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"30324:6:27","type":""}]},{"nodeType":"YulAssignment","src":"30349:73:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30394:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"30405:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30390:3:27"},"nodeType":"YulFunctionCall","src":"30390:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"30414:7:27"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"30359:30:27"},"nodeType":"YulFunctionCall","src":"30359:63:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"30349:6:27"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30136:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"30147:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"30159:6:27","type":""}],"src":"30090:349:27"},{"body":{"nodeType":"YulBlock","src":"30473:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30490:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30493:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30483:6:27"},"nodeType":"YulFunctionCall","src":"30483:88:27"},"nodeType":"YulExpressionStatement","src":"30483:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30587:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"30590:4:27","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30580:6:27"},"nodeType":"YulFunctionCall","src":"30580:15:27"},"nodeType":"YulExpressionStatement","src":"30580:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"30611:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"30614:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"30604:6:27"},"nodeType":"YulFunctionCall","src":"30604:15:27"},"nodeType":"YulExpressionStatement","src":"30604:15:27"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"30445:180:27"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721URIStorage: URI set of non\")\n\n        mstore(add(memPtr, 32), \"existent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063b88d4fde11610071578063b88d4fde146102a4578063c87b56dd146102c0578063e985e9c5146102f0578063eacabe1414610320578063f2fde38b146103505761010b565b8063715018a6146102425780638da5cb5b1461024c57806395d89b411461026a578063a22cb465146102885761010b565b806323b872dd116100de57806323b872dd146101aa57806342842e0e146101c65780636352211e146101e257806370a08231146102125761010b565b806301ffc9a71461011057806306fdde0314610140578063081812fc1461015e578063095ea7b31461018e575b600080fd5b61012a60048036038101906101259190611d95565b61036c565b6040516101379190611ddd565b60405180910390f35b61014861044e565b6040516101559190611e91565b60405180910390f35b61017860048036038101906101739190611ee9565b6104e0565b6040516101859190611f57565b60405180910390f35b6101a860048036038101906101a39190611f9e565b610526565b005b6101c460048036038101906101bf9190611fde565b61063e565b005b6101e060048036038101906101db9190611fde565b61069e565b005b6101fc60048036038101906101f79190611ee9565b6106be565b6040516102099190611f57565b60405180910390f35b61022c60048036038101906102279190612031565b610745565b604051610239919061206d565b60405180910390f35b61024a6107fd565b005b610254610811565b6040516102619190611f57565b60405180910390f35b61027261083b565b60405161027f9190611e91565b60405180910390f35b6102a2600480360381019061029d91906120b4565b6108cd565b005b6102be60048036038101906102b99190612229565b6108e3565b005b6102da60048036038101906102d59190611ee9565b610945565b6040516102e79190611e91565b60405180910390f35b61030a600480360381019061030591906122ac565b610a58565b6040516103179190611ddd565b60405180910390f35b61033a6004803603810190610335919061238d565b610aec565b604051610347919061206d565b60405180910390f35b61036a60048036038101906103659190612031565b610b2c565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061043757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610447575061044682610bb0565b5b9050919050565b60606000805461045d90612418565b80601f016020809104026020016040519081016040528092919081815260200182805461048990612418565b80156104d65780601f106104ab576101008083540402835291602001916104d6565b820191906000526020600020905b8154815290600101906020018083116104b957829003601f168201915b5050505050905090565b60006104eb82610c1a565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610531826106be565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610599906124bc565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105c1610c65565b73ffffffffffffffffffffffffffffffffffffffff1614806105f057506105ef816105ea610c65565b610a58565b5b61062f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106269061254e565b60405180910390fd5b6106398383610c6d565b505050565b61064f610649610c65565b82610d26565b61068e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610685906125e0565b60405180910390fd5b610699838383610dbb565b505050565b6106b9838383604051806020016040528060008152506108e3565b505050565b6000806106ca836110b5565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561073c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107339061264c565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ad906126de565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6108056110f2565b61080f6000611170565b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461084a90612418565b80601f016020809104026020016040519081016040528092919081815260200182805461087690612418565b80156108c35780601f10610898576101008083540402835291602001916108c3565b820191906000526020600020905b8154815290600101906020018083116108a657829003601f168201915b5050505050905090565b6108df6108d8610c65565b8383611236565b5050565b6108f46108ee610c65565b83610d26565b610933576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092a906125e0565b60405180910390fd5b61093f848484846113a3565b50505050565b606061095082610c1a565b600060066000848152602001908152602001600020805461097090612418565b80601f016020809104026020016040519081016040528092919081815260200182805461099c90612418565b80156109e95780601f106109be576101008083540402835291602001916109e9565b820191906000526020600020905b8154815290600101906020018083116109cc57829003601f168201915b5050505050905060006109fa6113ff565b9050600081511415610a10578192505050610a53565b600082511115610a45578082604051602001610a2d92919061273a565b60405160208183030381529060405292505050610a53565b610a4e84611416565b925050505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000610af66110f2565b610b00600861147e565b6000610b0c6008611494565b9050610b1884826114a2565b610b2281846116c0565b8091505092915050565b610b346110f2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ba4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9b906127d0565b60405180910390fd5b610bad81611170565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610c2381611734565b610c62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c599061264c565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610ce0836106be565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610d32836106be565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610d745750610d738185610a58565b5b80610db257508373ffffffffffffffffffffffffffffffffffffffff16610d9a846104e0565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610ddb826106be565b73ffffffffffffffffffffffffffffffffffffffff1614610e31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2890612862565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ea1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e98906128f4565b60405180910390fd5b610eae8383836001611775565b8273ffffffffffffffffffffffffffffffffffffffff16610ece826106be565b73ffffffffffffffffffffffffffffffffffffffff1614610f24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1b90612862565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46110b0838383600161189b565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6110fa610c65565b73ffffffffffffffffffffffffffffffffffffffff16611118610811565b73ffffffffffffffffffffffffffffffffffffffff161461116e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116590612960565b60405180910390fd5b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156112a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129c906129cc565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516113969190611ddd565b60405180910390a3505050565b6113ae848484610dbb565b6113ba848484846118a1565b6113f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f090612a5e565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b606061142182610c1a565b600061142b6113ff565b9050600081511161144b5760405180602001604052806000815250611476565b8061145584611a38565b60405160200161146692919061273a565b6040516020818303038152906040525b915050919050565b6001816000016000828254019250508190555050565b600081600001549050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611512576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150990612aca565b60405180910390fd5b61151b81611734565b1561155b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155290612b36565b60405180910390fd5b611569600083836001611775565b61157281611734565b156115b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a990612b36565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46116bc60008383600161189b565b5050565b6116c982611734565b611708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ff90612bc8565b60405180910390fd5b8060066000848152602001908152602001600020908051906020019061172f929190611c86565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff16611756836110b5565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600181111561189557600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146118095780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118019190612c17565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146118945780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461188c9190612c4b565b925050819055505b5b50505050565b50505050565b60006118c28473ffffffffffffffffffffffffffffffffffffffff16611b10565b15611a2b578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026118eb610c65565b8786866040518563ffffffff1660e01b815260040161190d9493929190612cf6565b602060405180830381600087803b15801561192757600080fd5b505af192505050801561195857506040513d601f19601f820116820180604052508101906119559190612d57565b60015b6119db573d8060008114611988576040519150601f19603f3d011682016040523d82523d6000602084013e61198d565b606091505b506000815114156119d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119ca90612a5e565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611a30565b600190505b949350505050565b606060006001611a4784611b33565b01905060008167ffffffffffffffff811115611a6657611a656120fe565b5b6040519080825280601f01601f191660200182016040528015611a985781602001600182028036833780820191505090505b509050600082602001820190505b600115611b05578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611aef57611aee612d84565b5b0494506000851415611b0057611b05565b611aa6565b819350505050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611b91577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611b8757611b86612d84565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611bce576d04ee2d6d415b85acef81000000008381611bc457611bc3612d84565b5b0492506020810190505b662386f26fc100008310611bfd57662386f26fc100008381611bf357611bf2612d84565b5b0492506010810190505b6305f5e1008310611c26576305f5e1008381611c1c57611c1b612d84565b5b0492506008810190505b6127108310611c4b576127108381611c4157611c40612d84565b5b0492506004810190505b60648310611c6e5760648381611c6457611c63612d84565b5b0492506002810190505b600a8310611c7d576001810190505b80915050919050565b828054611c9290612418565b90600052602060002090601f016020900481019282611cb45760008555611cfb565b82601f10611ccd57805160ff1916838001178555611cfb565b82800160010185558215611cfb579182015b82811115611cfa578251825591602001919060010190611cdf565b5b509050611d089190611d0c565b5090565b5b80821115611d25576000816000905550600101611d0d565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611d7281611d3d565b8114611d7d57600080fd5b50565b600081359050611d8f81611d69565b92915050565b600060208284031215611dab57611daa611d33565b5b6000611db984828501611d80565b91505092915050565b60008115159050919050565b611dd781611dc2565b82525050565b6000602082019050611df26000830184611dce565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611e32578082015181840152602081019050611e17565b83811115611e41576000848401525b50505050565b6000601f19601f8301169050919050565b6000611e6382611df8565b611e6d8185611e03565b9350611e7d818560208601611e14565b611e8681611e47565b840191505092915050565b60006020820190508181036000830152611eab8184611e58565b905092915050565b6000819050919050565b611ec681611eb3565b8114611ed157600080fd5b50565b600081359050611ee381611ebd565b92915050565b600060208284031215611eff57611efe611d33565b5b6000611f0d84828501611ed4565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f4182611f16565b9050919050565b611f5181611f36565b82525050565b6000602082019050611f6c6000830184611f48565b92915050565b611f7b81611f36565b8114611f8657600080fd5b50565b600081359050611f9881611f72565b92915050565b60008060408385031215611fb557611fb4611d33565b5b6000611fc385828601611f89565b9250506020611fd485828601611ed4565b9150509250929050565b600080600060608486031215611ff757611ff6611d33565b5b600061200586828701611f89565b935050602061201686828701611f89565b925050604061202786828701611ed4565b9150509250925092565b60006020828403121561204757612046611d33565b5b600061205584828501611f89565b91505092915050565b61206781611eb3565b82525050565b6000602082019050612082600083018461205e565b92915050565b61209181611dc2565b811461209c57600080fd5b50565b6000813590506120ae81612088565b92915050565b600080604083850312156120cb576120ca611d33565b5b60006120d985828601611f89565b92505060206120ea8582860161209f565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61213682611e47565b810181811067ffffffffffffffff82111715612155576121546120fe565b5b80604052505050565b6000612168611d29565b9050612174828261212d565b919050565b600067ffffffffffffffff821115612194576121936120fe565b5b61219d82611e47565b9050602081019050919050565b82818337600083830152505050565b60006121cc6121c784612179565b61215e565b9050828152602081018484840111156121e8576121e76120f9565b5b6121f38482856121aa565b509392505050565b600082601f8301126122105761220f6120f4565b5b81356122208482602086016121b9565b91505092915050565b6000806000806080858703121561224357612242611d33565b5b600061225187828801611f89565b945050602061226287828801611f89565b935050604061227387828801611ed4565b925050606085013567ffffffffffffffff81111561229457612293611d38565b5b6122a0878288016121fb565b91505092959194509250565b600080604083850312156122c3576122c2611d33565b5b60006122d185828601611f89565b92505060206122e285828601611f89565b9150509250929050565b600067ffffffffffffffff821115612307576123066120fe565b5b61231082611e47565b9050602081019050919050565b600061233061232b846122ec565b61215e565b90508281526020810184848401111561234c5761234b6120f9565b5b6123578482856121aa565b509392505050565b600082601f830112612374576123736120f4565b5b813561238484826020860161231d565b91505092915050565b600080604083850312156123a4576123a3611d33565b5b60006123b285828601611f89565b925050602083013567ffffffffffffffff8111156123d3576123d2611d38565b5b6123df8582860161235f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061243057607f821691505b60208210811415612444576124436123e9565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b60006124a6602183611e03565b91506124b18261244a565b604082019050919050565b600060208201905081810360008301526124d581612499565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000612538603d83611e03565b9150612543826124dc565b604082019050919050565b600060208201905081810360008301526125678161252b565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b60006125ca602d83611e03565b91506125d58261256e565b604082019050919050565b600060208201905081810360008301526125f9816125bd565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000612636601883611e03565b915061264182612600565b602082019050919050565b6000602082019050818103600083015261266581612629565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b60006126c8602983611e03565b91506126d38261266c565b604082019050919050565b600060208201905081810360008301526126f7816126bb565b9050919050565b600081905092915050565b600061271482611df8565b61271e81856126fe565b935061272e818560208601611e14565b80840191505092915050565b60006127468285612709565b91506127528284612709565b91508190509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006127ba602683611e03565b91506127c58261275e565b604082019050919050565b600060208201905081810360008301526127e9816127ad565b9050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b600061284c602583611e03565b9150612857826127f0565b604082019050919050565b6000602082019050818103600083015261287b8161283f565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006128de602483611e03565b91506128e982612882565b604082019050919050565b6000602082019050818103600083015261290d816128d1565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061294a602083611e03565b915061295582612914565b602082019050919050565b600060208201905081810360008301526129798161293d565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b60006129b6601983611e03565b91506129c182612980565b602082019050919050565b600060208201905081810360008301526129e5816129a9565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000612a48603283611e03565b9150612a53826129ec565b604082019050919050565b60006020820190508181036000830152612a7781612a3b565b9050919050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000612ab4602083611e03565b9150612abf82612a7e565b602082019050919050565b60006020820190508181036000830152612ae381612aa7565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000612b20601c83611e03565b9150612b2b82612aea565b602082019050919050565b60006020820190508181036000830152612b4f81612b13565b9050919050565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b6000612bb2602e83611e03565b9150612bbd82612b56565b604082019050919050565b60006020820190508181036000830152612be181612ba5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612c2282611eb3565b9150612c2d83611eb3565b925082821015612c4057612c3f612be8565b5b828203905092915050565b6000612c5682611eb3565b9150612c6183611eb3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612c9657612c95612be8565b5b828201905092915050565b600081519050919050565b600082825260208201905092915050565b6000612cc882612ca1565b612cd28185612cac565b9350612ce2818560208601611e14565b612ceb81611e47565b840191505092915050565b6000608082019050612d0b6000830187611f48565b612d186020830186611f48565b612d25604083018561205e565b8181036060830152612d378184612cbd565b905095945050505050565b600081519050612d5181611d69565b92915050565b600060208284031215612d6d57612d6c611d33565b5b6000612d7b84828501612d42565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea264697066735822122042d191c8fe732900c3f99a5dec5524d0260227dfe6654dfb64289b7bf3ef5dad64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xEACABE14 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x350 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x288 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x212 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x1D95 JUMP JUMPDEST PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1EE9 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1F9E JUMP JUMPDEST PUSH2 0x526 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1FDE JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1FDE JUMP JUMPDEST PUSH2 0x69E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x1EE9 JUMP JUMPDEST PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x2031 JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x206D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH2 0x7FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x254 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH2 0x83B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x20B4 JUMP JUMPDEST PUSH2 0x8CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x2229 JUMP JUMPDEST PUSH2 0x8E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x1EE9 JUMP JUMPDEST PUSH2 0x945 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x22AC JUMP JUMPDEST PUSH2 0xA58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x238D JUMP JUMPDEST PUSH2 0xAEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x206D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x2031 JUMP JUMPDEST PUSH2 0xB2C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x437 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x447 JUMPI POP PUSH2 0x446 DUP3 PUSH2 0xBB0 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x45D SWAP1 PUSH2 0x2418 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x489 SWAP1 PUSH2 0x2418 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EB DUP3 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x531 DUP3 PUSH2 0x6BE JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x599 SWAP1 PUSH2 0x24BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5C1 PUSH2 0xC65 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5F0 JUMPI POP PUSH2 0x5EF DUP2 PUSH2 0x5EA PUSH2 0xC65 JUMP JUMPDEST PUSH2 0xA58 JUMP JUMPDEST JUMPDEST PUSH2 0x62F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x626 SWAP1 PUSH2 0x254E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x639 DUP4 DUP4 PUSH2 0xC6D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x64F PUSH2 0x649 PUSH2 0xC65 JUMP JUMPDEST DUP3 PUSH2 0xD26 JUMP JUMPDEST PUSH2 0x68E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x685 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x699 DUP4 DUP4 DUP4 PUSH2 0xDBB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6B9 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8E3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6CA DUP4 PUSH2 0x10B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x73C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x733 SWAP1 PUSH2 0x264C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AD SWAP1 PUSH2 0x26DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x805 PUSH2 0x10F2 JUMP JUMPDEST PUSH2 0x80F PUSH1 0x0 PUSH2 0x1170 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x84A SWAP1 PUSH2 0x2418 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x876 SWAP1 PUSH2 0x2418 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8C3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x898 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8C3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8A6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8DF PUSH2 0x8D8 PUSH2 0xC65 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1236 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8F4 PUSH2 0x8EE PUSH2 0xC65 JUMP JUMPDEST DUP4 PUSH2 0xD26 JUMP JUMPDEST PUSH2 0x933 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92A SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93F DUP5 DUP5 DUP5 DUP5 PUSH2 0x13A3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x950 DUP3 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x970 SWAP1 PUSH2 0x2418 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x99C SWAP1 PUSH2 0x2418 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9E9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9BE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9E9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9CC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x9FA PUSH2 0x13FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0xA10 JUMPI DUP2 SWAP3 POP POP POP PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0xA45 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA2D SWAP3 SWAP2 SWAP1 PUSH2 0x273A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0xA53 JUMP JUMPDEST PUSH2 0xA4E DUP5 PUSH2 0x1416 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF6 PUSH2 0x10F2 JUMP JUMPDEST PUSH2 0xB00 PUSH1 0x8 PUSH2 0x147E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0C PUSH1 0x8 PUSH2 0x1494 JUMP JUMPDEST SWAP1 POP PUSH2 0xB18 DUP5 DUP3 PUSH2 0x14A2 JUMP JUMPDEST PUSH2 0xB22 DUP2 DUP5 PUSH2 0x16C0 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB34 PUSH2 0x10F2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9B SWAP1 PUSH2 0x27D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBAD DUP2 PUSH2 0x1170 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC23 DUP2 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC59 SWAP1 PUSH2 0x264C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCE0 DUP4 PUSH2 0x6BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD32 DUP4 PUSH2 0x6BE JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD74 JUMPI POP PUSH2 0xD73 DUP2 DUP6 PUSH2 0xA58 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xDB2 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD9A DUP5 PUSH2 0x4E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDDB DUP3 PUSH2 0x6BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE28 SWAP1 PUSH2 0x2862 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xEA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE98 SWAP1 PUSH2 0x28F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEAE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1775 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xECE DUP3 PUSH2 0x6BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1B SWAP1 PUSH2 0x2862 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x10B0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x189B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10FA PUSH2 0xC65 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1118 PUSH2 0x811 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x116E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1165 SWAP1 PUSH2 0x2960 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129C SWAP1 PUSH2 0x29CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1396 SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x13AE DUP5 DUP5 DUP5 PUSH2 0xDBB JUMP JUMPDEST PUSH2 0x13BA DUP5 DUP5 DUP5 DUP5 PUSH2 0x18A1 JUMP JUMPDEST PUSH2 0x13F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F0 SWAP1 PUSH2 0x2A5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1421 DUP3 PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142B PUSH2 0x13FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x144B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1476 JUMP JUMPDEST DUP1 PUSH2 0x1455 DUP5 PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1466 SWAP3 SWAP2 SWAP1 PUSH2 0x273A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1512 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1509 SWAP1 PUSH2 0x2ACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x151B DUP2 PUSH2 0x1734 JUMP JUMPDEST ISZERO PUSH2 0x155B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1552 SWAP1 PUSH2 0x2B36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1569 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x1572 DUP2 PUSH2 0x1734 JUMP JUMPDEST ISZERO PUSH2 0x15B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A9 SWAP1 PUSH2 0x2B36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x16BC PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x189B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x16C9 DUP3 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x1708 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16FF SWAP1 PUSH2 0x2BC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x172F SWAP3 SWAP2 SWAP1 PUSH2 0x1C86 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1756 DUP4 PUSH2 0x10B5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1895 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1809 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1801 SWAP2 SWAP1 PUSH2 0x2C17 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1894 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x188C SWAP2 SWAP1 PUSH2 0x2C4B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18C2 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B10 JUMP JUMPDEST ISZERO PUSH2 0x1A2B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x18EB PUSH2 0xC65 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x190D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1927 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1958 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1955 SWAP2 SWAP1 PUSH2 0x2D57 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x19DB JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1988 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x198D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x19D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19CA SWAP1 PUSH2 0x2A5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1A30 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1A47 DUP5 PUSH2 0x1B33 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A66 JUMPI PUSH2 0x1A65 PUSH2 0x20FE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A98 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1B05 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1AEF JUMPI PUSH2 0x1AEE PUSH2 0x2D84 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x1B00 JUMPI PUSH2 0x1B05 JUMP JUMPDEST PUSH2 0x1AA6 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1B91 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1B87 JUMPI PUSH2 0x1B86 PUSH2 0x2D84 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1BCE JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1BC4 JUMPI PUSH2 0x1BC3 PUSH2 0x2D84 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1BFD JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1BF3 JUMPI PUSH2 0x1BF2 PUSH2 0x2D84 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1C26 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1C1C JUMPI PUSH2 0x1C1B PUSH2 0x2D84 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1C4B JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1C41 JUMPI PUSH2 0x1C40 PUSH2 0x2D84 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1C6E JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1C64 JUMPI PUSH2 0x1C63 PUSH2 0x2D84 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1C7D JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1C92 SWAP1 PUSH2 0x2418 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1CB4 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1CFB JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1CCD JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1CFB JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1CFB JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1CFA JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1CDF JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1D08 SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1D25 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1D0D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D72 DUP2 PUSH2 0x1D3D JUMP JUMPDEST DUP2 EQ PUSH2 0x1D7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D8F DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DAB JUMPI PUSH2 0x1DAA PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DB9 DUP5 DUP3 DUP6 ADD PUSH2 0x1D80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DD7 DUP2 PUSH2 0x1DC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DF2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E32 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E17 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1E41 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E63 DUP3 PUSH2 0x1DF8 JUMP JUMPDEST PUSH2 0x1E6D DUP2 DUP6 PUSH2 0x1E03 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E7D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E14 JUMP JUMPDEST PUSH2 0x1E86 DUP2 PUSH2 0x1E47 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EAB DUP2 DUP5 PUSH2 0x1E58 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EC6 DUP2 PUSH2 0x1EB3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1ED1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EE3 DUP2 PUSH2 0x1EBD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EFF JUMPI PUSH2 0x1EFE PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F0D DUP5 DUP3 DUP6 ADD PUSH2 0x1ED4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F41 DUP3 PUSH2 0x1F16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F51 DUP2 PUSH2 0x1F36 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F6C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F7B DUP2 PUSH2 0x1F36 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F98 DUP2 PUSH2 0x1F72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FB5 JUMPI PUSH2 0x1FB4 PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FC3 DUP6 DUP3 DUP7 ADD PUSH2 0x1F89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FD4 DUP6 DUP3 DUP7 ADD PUSH2 0x1ED4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FF7 JUMPI PUSH2 0x1FF6 PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2005 DUP7 DUP3 DUP8 ADD PUSH2 0x1F89 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2016 DUP7 DUP3 DUP8 ADD PUSH2 0x1F89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2027 DUP7 DUP3 DUP8 ADD PUSH2 0x1ED4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2047 JUMPI PUSH2 0x2046 PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2055 DUP5 DUP3 DUP6 ADD PUSH2 0x1F89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2067 DUP2 PUSH2 0x1EB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2082 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x205E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2091 DUP2 PUSH2 0x1DC2 JUMP JUMPDEST DUP2 EQ PUSH2 0x209C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20AE DUP2 PUSH2 0x2088 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20CB JUMPI PUSH2 0x20CA PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20D9 DUP6 DUP3 DUP7 ADD PUSH2 0x1F89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20EA DUP6 DUP3 DUP7 ADD PUSH2 0x209F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2136 DUP3 PUSH2 0x1E47 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2155 JUMPI PUSH2 0x2154 PUSH2 0x20FE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2168 PUSH2 0x1D29 JUMP JUMPDEST SWAP1 POP PUSH2 0x2174 DUP3 DUP3 PUSH2 0x212D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2194 JUMPI PUSH2 0x2193 PUSH2 0x20FE JUMP JUMPDEST JUMPDEST PUSH2 0x219D DUP3 PUSH2 0x1E47 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21CC PUSH2 0x21C7 DUP5 PUSH2 0x2179 JUMP JUMPDEST PUSH2 0x215E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x21E8 JUMPI PUSH2 0x21E7 PUSH2 0x20F9 JUMP JUMPDEST JUMPDEST PUSH2 0x21F3 DUP5 DUP3 DUP6 PUSH2 0x21AA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2210 JUMPI PUSH2 0x220F PUSH2 0x20F4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2220 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x21B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2243 JUMPI PUSH2 0x2242 PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2251 DUP8 DUP3 DUP9 ADD PUSH2 0x1F89 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2262 DUP8 DUP3 DUP9 ADD PUSH2 0x1F89 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2273 DUP8 DUP3 DUP9 ADD PUSH2 0x1ED4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2294 JUMPI PUSH2 0x2293 PUSH2 0x1D38 JUMP JUMPDEST JUMPDEST PUSH2 0x22A0 DUP8 DUP3 DUP9 ADD PUSH2 0x21FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22C3 JUMPI PUSH2 0x22C2 PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22D1 DUP6 DUP3 DUP7 ADD PUSH2 0x1F89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22E2 DUP6 DUP3 DUP7 ADD PUSH2 0x1F89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2307 JUMPI PUSH2 0x2306 PUSH2 0x20FE JUMP JUMPDEST JUMPDEST PUSH2 0x2310 DUP3 PUSH2 0x1E47 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2330 PUSH2 0x232B DUP5 PUSH2 0x22EC JUMP JUMPDEST PUSH2 0x215E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x234C JUMPI PUSH2 0x234B PUSH2 0x20F9 JUMP JUMPDEST JUMPDEST PUSH2 0x2357 DUP5 DUP3 DUP6 PUSH2 0x21AA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2374 JUMPI PUSH2 0x2373 PUSH2 0x20F4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2384 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x231D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23A4 JUMPI PUSH2 0x23A3 PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23B2 DUP6 DUP3 DUP7 ADD PUSH2 0x1F89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23D3 JUMPI PUSH2 0x23D2 PUSH2 0x1D38 JUMP JUMPDEST JUMPDEST PUSH2 0x23DF DUP6 DUP3 DUP7 ADD PUSH2 0x235F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2430 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2444 JUMPI PUSH2 0x2443 PUSH2 0x23E9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24A6 PUSH1 0x21 DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x24B1 DUP3 PUSH2 0x244A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24D5 DUP2 PUSH2 0x2499 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2538 PUSH1 0x3D DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x2543 DUP3 PUSH2 0x24DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2567 DUP2 PUSH2 0x252B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25CA PUSH1 0x2D DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x25D5 DUP3 PUSH2 0x256E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25F9 DUP2 PUSH2 0x25BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2636 PUSH1 0x18 DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x2641 DUP3 PUSH2 0x2600 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2665 DUP2 PUSH2 0x2629 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26C8 PUSH1 0x29 DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x26D3 DUP3 PUSH2 0x266C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26F7 DUP2 PUSH2 0x26BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2714 DUP3 PUSH2 0x1DF8 JUMP JUMPDEST PUSH2 0x271E DUP2 DUP6 PUSH2 0x26FE JUMP JUMPDEST SWAP4 POP PUSH2 0x272E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E14 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2746 DUP3 DUP6 PUSH2 0x2709 JUMP JUMPDEST SWAP2 POP PUSH2 0x2752 DUP3 DUP5 PUSH2 0x2709 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27BA PUSH1 0x26 DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x27C5 DUP3 PUSH2 0x275E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27E9 DUP2 PUSH2 0x27AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x284C PUSH1 0x25 DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x2857 DUP3 PUSH2 0x27F0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x287B DUP2 PUSH2 0x283F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28DE PUSH1 0x24 DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x28E9 DUP3 PUSH2 0x2882 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x290D DUP2 PUSH2 0x28D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x294A PUSH1 0x20 DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x2955 DUP3 PUSH2 0x2914 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2979 DUP2 PUSH2 0x293D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29B6 PUSH1 0x19 DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x29C1 DUP3 PUSH2 0x2980 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29E5 DUP2 PUSH2 0x29A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A48 PUSH1 0x32 DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A53 DUP3 PUSH2 0x29EC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A77 DUP2 PUSH2 0x2A3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AB4 PUSH1 0x20 DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ABF DUP3 PUSH2 0x2A7E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AE3 DUP2 PUSH2 0x2AA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B20 PUSH1 0x1C DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B2B DUP3 PUSH2 0x2AEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B4F DUP2 PUSH2 0x2B13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BB2 PUSH1 0x2E DUP4 PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BBD DUP3 PUSH2 0x2B56 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BE1 DUP2 PUSH2 0x2BA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C22 DUP3 PUSH2 0x1EB3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C2D DUP4 PUSH2 0x1EB3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2C40 JUMPI PUSH2 0x2C3F PUSH2 0x2BE8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C56 DUP3 PUSH2 0x1EB3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C61 DUP4 PUSH2 0x1EB3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2C96 JUMPI PUSH2 0x2C95 PUSH2 0x2BE8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CC8 DUP3 PUSH2 0x2CA1 JUMP JUMPDEST PUSH2 0x2CD2 DUP2 DUP6 PUSH2 0x2CAC JUMP JUMPDEST SWAP4 POP PUSH2 0x2CE2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E14 JUMP JUMPDEST PUSH2 0x2CEB DUP2 PUSH2 0x1E47 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2D0B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1F48 JUMP JUMPDEST PUSH2 0x2D18 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1F48 JUMP JUMPDEST PUSH2 0x2D25 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x205E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2D37 DUP2 DUP5 PUSH2 0x2CBD JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2D51 DUP2 PUSH2 0x1D69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D6D JUMPI PUSH2 0x2D6C PUSH2 0x1D33 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D7B DUP5 DUP3 DUP6 ADD PUSH2 0x2D42 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xD1 SWAP2 0xC8 INVALID PUSH20 0x2900C3F99A5DEC5524D0260227DFE6654DFB6428 SWAP12 PUSH28 0xF3EF5DAD64736F6C6343000809003300000000000000000000000000 ","sourceMap":"435:521:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5004:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5249:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;482:608:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;632:321:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1570:300:10;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2633:102:10:-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;482:608:13:-;555:13;580:23;595:7;580:14;:23::i;:::-;614;640:10;:19;651:7;640:19;;;;;;;;;;;614:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:18;690:10;:8;:10::i;:::-;669:31;;795:1;779:4;773:18;:23;769:70;;;819:9;812:16;;;;;;769:70;967:1;947:9;941:23;:27;937:106;;;1015:4;1021:9;998:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;984:48;;;;;;937:106;1060:23;1075:7;1060:14;:23::i;:::-;1053:30;;;;482:608;;;;:::o;4388:162:10:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;632:321:25:-;736:7;1094:13:0;:11;:13::i;:::-;761:21:25::1;:9;:19;:21::i;:::-;795:17;815:19;:9;:17;:19::i;:::-;795:39;;845:27;851:9;862;845:5;:27::i;:::-;883:33;896:9;907:8;883:12;:33::i;:::-;936:9;929:16;;;632:321:::0;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;829:155:21:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13466:133:10:-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:16:-;693:7;719:10;712:17;;640:96;:::o;12768:171:10:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;6838:115::-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;13075:307:10:-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;945:123:17:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;827:112::-;892:7;918;:14;;;911:21;;827:112;;;:::o;9091:920:10:-;9184:1;9170:16;;:2;:16;;;;9162:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9242:16;9250:7;9242;:16::i;:::-;9241:17;9233:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9302:48;9331:1;9335:2;9339:7;9348:1;9302:20;:48::i;:::-;9446:16;9454:7;9446;:16::i;:::-;9445:17;9437:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9854:1;9837:9;:13;9847:2;9837:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9895:2;9876:7;:16;9884:7;9876:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9938:7;9934:2;9913:33;;9930:1;9913:33;;;;;;;;;;;;9957:47;9985:1;9989:2;9993:7;10002:1;9957:19;:47::i;:::-;9091:920;;:::o;1237:214:13:-;1336:16;1344:7;1336;:16::i;:::-;1328:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1435:9;1413:10;:19;1424:7;1413:19;;;;;;;;;;;:31;;;;;;;;;;;;:::i;:::-;;1237:214;;:::o;7256:126:10:-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;15698:396::-;15882:1;15870:9;:13;15866:222;;;15919:1;15903:18;;:4;:18;;;15899:85;;15960:9;15941;:15;15951:4;15941:15;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;15899:85;16015:1;16001:16;;:2;:16;;;15997:81;;16054:9;16037;:13;16047:2;16037:13;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;15997:81;15866:222;15698:396;;;;:::o;16800:153::-;;;;;:::o;14151:831::-;14300:4;14320:15;:2;:13;;;:15::i;:::-;14316:660;;;14371:2;14355:36;;;14392:12;:10;:12::i;:::-;14406:4;14412:7;14421:4;14355:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14610:1;14593:6;:13;:18;14589:321;;;14635:60;;;;;;;;;;:::i;:::-;;;;;;;;14589:321;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;14486:41;;;14476:51;;;:6;:51;;;;14469:58;;;;;14316:660;14961:4;14954:11;;14151:831;;;;;;;:::o;415:696:18:-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;1032:21;;;1048:5;;1032:21;788:280;;;1088:6;1081:13;;;;;415:696;;;:::o;1175:320:15:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;9889:890:23:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:27:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:619::-;5015:6;5023;5031;5080:2;5068:9;5059:7;5055:23;5051:32;5048:119;;;5086:79;;:::i;:::-;5048:119;5206:1;5231:53;5276:7;5267:6;5256:9;5252:22;5231:53;:::i;:::-;5221:63;;5177:117;5333:2;5359:53;5404:7;5395:6;5384:9;5380:22;5359:53;:::i;:::-;5349:63;;5304:118;5461:2;5487:53;5532:7;5523:6;5512:9;5508:22;5487:53;:::i;:::-;5477:63;;5432:118;4938:619;;;;;:::o;5563:329::-;5622:6;5671:2;5659:9;5650:7;5646:23;5642:32;5639:119;;;5677:79;;:::i;:::-;5639:119;5797:1;5822:53;5867:7;5858:6;5847:9;5843:22;5822:53;:::i;:::-;5812:63;;5768:117;5563:329;;;;:::o;5898:118::-;5985:24;6003:5;5985:24;:::i;:::-;5980:3;5973:37;5898:118;;:::o;6022:222::-;6115:4;6153:2;6142:9;6138:18;6130:26;;6166:71;6234:1;6223:9;6219:17;6210:6;6166:71;:::i;:::-;6022:222;;;;:::o;6250:116::-;6320:21;6335:5;6320:21;:::i;:::-;6313:5;6310:32;6300:60;;6356:1;6353;6346:12;6300:60;6250:116;:::o;6372:133::-;6415:5;6453:6;6440:20;6431:29;;6469:30;6493:5;6469:30;:::i;:::-;6372:133;;;;:::o;6511:468::-;6576:6;6584;6633:2;6621:9;6612:7;6608:23;6604:32;6601:119;;;6639:79;;:::i;:::-;6601:119;6759:1;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6730:117;6886:2;6912:50;6954:7;6945:6;6934:9;6930:22;6912:50;:::i;:::-;6902:60;;6857:115;6511:468;;;;;:::o;6985:117::-;7094:1;7091;7084:12;7108:117;7217:1;7214;7207:12;7231:180;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:281;7500:27;7522:4;7500:27;:::i;:::-;7492:6;7488:40;7630:6;7618:10;7615:22;7594:18;7582:10;7579:34;7576:62;7573:88;;;7641:18;;:::i;:::-;7573:88;7681:10;7677:2;7670:22;7460:238;7417:281;;:::o;7704:129::-;7738:6;7765:20;;:::i;:::-;7755:30;;7794:33;7822:4;7814:6;7794:33;:::i;:::-;7704:129;;;:::o;7839:307::-;7900:4;7990:18;7982:6;7979:30;7976:56;;;8012:18;;:::i;:::-;7976:56;8050:29;8072:6;8050:29;:::i;:::-;8042:37;;8134:4;8128;8124:15;8116:23;;7839:307;;;:::o;8152:154::-;8236:6;8231:3;8226;8213:30;8298:1;8289:6;8284:3;8280:16;8273:27;8152:154;;;:::o;8312:410::-;8389:5;8414:65;8430:48;8471:6;8430:48;:::i;:::-;8414:65;:::i;:::-;8405:74;;8502:6;8495:5;8488:21;8540:4;8533:5;8529:16;8578:3;8569:6;8564:3;8560:16;8557:25;8554:112;;;8585:79;;:::i;:::-;8554:112;8675:41;8709:6;8704:3;8699;8675:41;:::i;:::-;8395:327;8312:410;;;;;:::o;8741:338::-;8796:5;8845:3;8838:4;8830:6;8826:17;8822:27;8812:122;;8853:79;;:::i;:::-;8812:122;8970:6;8957:20;8995:78;9069:3;9061:6;9054:4;9046:6;9042:17;8995:78;:::i;:::-;8986:87;;8802:277;8741:338;;;;:::o;9085:943::-;9180:6;9188;9196;9204;9253:3;9241:9;9232:7;9228:23;9224:33;9221:120;;;9260:79;;:::i;:::-;9221:120;9380:1;9405:53;9450:7;9441:6;9430:9;9426:22;9405:53;:::i;:::-;9395:63;;9351:117;9507:2;9533:53;9578:7;9569:6;9558:9;9554:22;9533:53;:::i;:::-;9523:63;;9478:118;9635:2;9661:53;9706:7;9697:6;9686:9;9682:22;9661:53;:::i;:::-;9651:63;;9606:118;9791:2;9780:9;9776:18;9763:32;9822:18;9814:6;9811:30;9808:117;;;9844:79;;:::i;:::-;9808:117;9949:62;10003:7;9994:6;9983:9;9979:22;9949:62;:::i;:::-;9939:72;;9734:287;9085:943;;;;;;;:::o;10034:474::-;10102:6;10110;10159:2;10147:9;10138:7;10134:23;10130:32;10127:119;;;10165:79;;:::i;:::-;10127:119;10285:1;10310:53;10355:7;10346:6;10335:9;10331:22;10310:53;:::i;:::-;10300:63;;10256:117;10412:2;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10383:118;10034:474;;;;;:::o;10514:308::-;10576:4;10666:18;10658:6;10655:30;10652:56;;;10688:18;;:::i;:::-;10652:56;10726:29;10748:6;10726:29;:::i;:::-;10718:37;;10810:4;10804;10800:15;10792:23;;10514:308;;;:::o;10828:412::-;10906:5;10931:66;10947:49;10989:6;10947:49;:::i;:::-;10931:66;:::i;:::-;10922:75;;11020:6;11013:5;11006:21;11058:4;11051:5;11047:16;11096:3;11087:6;11082:3;11078:16;11075:25;11072:112;;;11103:79;;:::i;:::-;11072:112;11193:41;11227:6;11222:3;11217;11193:41;:::i;:::-;10912:328;10828:412;;;;;:::o;11260:340::-;11316:5;11365:3;11358:4;11350:6;11346:17;11342:27;11332:122;;11373:79;;:::i;:::-;11332:122;11490:6;11477:20;11515:79;11590:3;11582:6;11575:4;11567:6;11563:17;11515:79;:::i;:::-;11506:88;;11322:278;11260:340;;;;:::o;11606:654::-;11684:6;11692;11741:2;11729:9;11720:7;11716:23;11712:32;11709:119;;;11747:79;;:::i;:::-;11709:119;11867:1;11892:53;11937:7;11928:6;11917:9;11913:22;11892:53;:::i;:::-;11882:63;;11838:117;12022:2;12011:9;12007:18;11994:32;12053:18;12045:6;12042:30;12039:117;;;12075:79;;:::i;:::-;12039:117;12180:63;12235:7;12226:6;12215:9;12211:22;12180:63;:::i;:::-;12170:73;;11965:288;11606:654;;;;;:::o;12266:180::-;12314:77;12311:1;12304:88;12411:4;12408:1;12401:15;12435:4;12432:1;12425:15;12452:320;12496:6;12533:1;12527:4;12523:12;12513:22;;12580:1;12574:4;12570:12;12601:18;12591:81;;12657:4;12649:6;12645:17;12635:27;;12591:81;12719:2;12711:6;12708:14;12688:18;12685:38;12682:84;;;12738:18;;:::i;:::-;12682:84;12503:269;12452:320;;;:::o;12778:220::-;12918:34;12914:1;12906:6;12902:14;12895:58;12987:3;12982:2;12974:6;12970:15;12963:28;12778:220;:::o;13004:366::-;13146:3;13167:67;13231:2;13226:3;13167:67;:::i;:::-;13160:74;;13243:93;13332:3;13243:93;:::i;:::-;13361:2;13356:3;13352:12;13345:19;;13004:366;;;:::o;13376:419::-;13542:4;13580:2;13569:9;13565:18;13557:26;;13629:9;13623:4;13619:20;13615:1;13604:9;13600:17;13593:47;13657:131;13783:4;13657:131;:::i;:::-;13649:139;;13376:419;;;:::o;13801:248::-;13941:34;13937:1;13929:6;13925:14;13918:58;14010:31;14005:2;13997:6;13993:15;13986:56;13801:248;:::o;14055:366::-;14197:3;14218:67;14282:2;14277:3;14218:67;:::i;:::-;14211:74;;14294:93;14383:3;14294:93;:::i;:::-;14412:2;14407:3;14403:12;14396:19;;14055:366;;;:::o;14427:419::-;14593:4;14631:2;14620:9;14616:18;14608:26;;14680:9;14674:4;14670:20;14666:1;14655:9;14651:17;14644:47;14708:131;14834:4;14708:131;:::i;:::-;14700:139;;14427:419;;;:::o;14852:232::-;14992:34;14988:1;14980:6;14976:14;14969:58;15061:15;15056:2;15048:6;15044:15;15037:40;14852:232;:::o;15090:366::-;15232:3;15253:67;15317:2;15312:3;15253:67;:::i;:::-;15246:74;;15329:93;15418:3;15329:93;:::i;:::-;15447:2;15442:3;15438:12;15431:19;;15090:366;;;:::o;15462:419::-;15628:4;15666:2;15655:9;15651:18;15643:26;;15715:9;15709:4;15705:20;15701:1;15690:9;15686:17;15679:47;15743:131;15869:4;15743:131;:::i;:::-;15735:139;;15462:419;;;:::o;15887:174::-;16027:26;16023:1;16015:6;16011:14;16004:50;15887:174;:::o;16067:366::-;16209:3;16230:67;16294:2;16289:3;16230:67;:::i;:::-;16223:74;;16306:93;16395:3;16306:93;:::i;:::-;16424:2;16419:3;16415:12;16408:19;;16067:366;;;:::o;16439:419::-;16605:4;16643:2;16632:9;16628:18;16620:26;;16692:9;16686:4;16682:20;16678:1;16667:9;16663:17;16656:47;16720:131;16846:4;16720:131;:::i;:::-;16712:139;;16439:419;;;:::o;16864:228::-;17004:34;17000:1;16992:6;16988:14;16981:58;17073:11;17068:2;17060:6;17056:15;17049:36;16864:228;:::o;17098:366::-;17240:3;17261:67;17325:2;17320:3;17261:67;:::i;:::-;17254:74;;17337:93;17426:3;17337:93;:::i;:::-;17455:2;17450:3;17446:12;17439:19;;17098:366;;;:::o;17470:419::-;17636:4;17674:2;17663:9;17659:18;17651:26;;17723:9;17717:4;17713:20;17709:1;17698:9;17694:17;17687:47;17751:131;17877:4;17751:131;:::i;:::-;17743:139;;17470:419;;;:::o;17895:148::-;17997:11;18034:3;18019:18;;17895:148;;;;:::o;18049:377::-;18155:3;18183:39;18216:5;18183:39;:::i;:::-;18238:89;18320:6;18315:3;18238:89;:::i;:::-;18231:96;;18336:52;18381:6;18376:3;18369:4;18362:5;18358:16;18336:52;:::i;:::-;18413:6;18408:3;18404:16;18397:23;;18159:267;18049:377;;;;:::o;18432:435::-;18612:3;18634:95;18725:3;18716:6;18634:95;:::i;:::-;18627:102;;18746:95;18837:3;18828:6;18746:95;:::i;:::-;18739:102;;18858:3;18851:10;;18432:435;;;;;:::o;18873:225::-;19013:34;19009:1;19001:6;18997:14;18990:58;19082:8;19077:2;19069:6;19065:15;19058:33;18873:225;:::o;19104:366::-;19246:3;19267:67;19331:2;19326:3;19267:67;:::i;:::-;19260:74;;19343:93;19432:3;19343:93;:::i;:::-;19461:2;19456:3;19452:12;19445:19;;19104:366;;;:::o;19476:419::-;19642:4;19680:2;19669:9;19665:18;19657:26;;19729:9;19723:4;19719:20;19715:1;19704:9;19700:17;19693:47;19757:131;19883:4;19757:131;:::i;:::-;19749:139;;19476:419;;;:::o;19901:224::-;20041:34;20037:1;20029:6;20025:14;20018:58;20110:7;20105:2;20097:6;20093:15;20086:32;19901:224;:::o;20131:366::-;20273:3;20294:67;20358:2;20353:3;20294:67;:::i;:::-;20287:74;;20370:93;20459:3;20370:93;:::i;:::-;20488:2;20483:3;20479:12;20472:19;;20131:366;;;:::o;20503:419::-;20669:4;20707:2;20696:9;20692:18;20684:26;;20756:9;20750:4;20746:20;20742:1;20731:9;20727:17;20720:47;20784:131;20910:4;20784:131;:::i;:::-;20776:139;;20503:419;;;:::o;20928:223::-;21068:34;21064:1;21056:6;21052:14;21045:58;21137:6;21132:2;21124:6;21120:15;21113:31;20928:223;:::o;21157:366::-;21299:3;21320:67;21384:2;21379:3;21320:67;:::i;:::-;21313:74;;21396:93;21485:3;21396:93;:::i;:::-;21514:2;21509:3;21505:12;21498:19;;21157:366;;;:::o;21529:419::-;21695:4;21733:2;21722:9;21718:18;21710:26;;21782:9;21776:4;21772:20;21768:1;21757:9;21753:17;21746:47;21810:131;21936:4;21810:131;:::i;:::-;21802:139;;21529:419;;;:::o;21954:182::-;22094:34;22090:1;22082:6;22078:14;22071:58;21954:182;:::o;22142:366::-;22284:3;22305:67;22369:2;22364:3;22305:67;:::i;:::-;22298:74;;22381:93;22470:3;22381:93;:::i;:::-;22499:2;22494:3;22490:12;22483:19;;22142:366;;;:::o;22514:419::-;22680:4;22718:2;22707:9;22703:18;22695:26;;22767:9;22761:4;22757:20;22753:1;22742:9;22738:17;22731:47;22795:131;22921:4;22795:131;:::i;:::-;22787:139;;22514:419;;;:::o;22939:175::-;23079:27;23075:1;23067:6;23063:14;23056:51;22939:175;:::o;23120:366::-;23262:3;23283:67;23347:2;23342:3;23283:67;:::i;:::-;23276:74;;23359:93;23448:3;23359:93;:::i;:::-;23477:2;23472:3;23468:12;23461:19;;23120:366;;;:::o;23492:419::-;23658:4;23696:2;23685:9;23681:18;23673:26;;23745:9;23739:4;23735:20;23731:1;23720:9;23716:17;23709:47;23773:131;23899:4;23773:131;:::i;:::-;23765:139;;23492:419;;;:::o;23917:237::-;24057:34;24053:1;24045:6;24041:14;24034:58;24126:20;24121:2;24113:6;24109:15;24102:45;23917:237;:::o;24160:366::-;24302:3;24323:67;24387:2;24382:3;24323:67;:::i;:::-;24316:74;;24399:93;24488:3;24399:93;:::i;:::-;24517:2;24512:3;24508:12;24501:19;;24160:366;;;:::o;24532:419::-;24698:4;24736:2;24725:9;24721:18;24713:26;;24785:9;24779:4;24775:20;24771:1;24760:9;24756:17;24749:47;24813:131;24939:4;24813:131;:::i;:::-;24805:139;;24532:419;;;:::o;24957:182::-;25097:34;25093:1;25085:6;25081:14;25074:58;24957:182;:::o;25145:366::-;25287:3;25308:67;25372:2;25367:3;25308:67;:::i;:::-;25301:74;;25384:93;25473:3;25384:93;:::i;:::-;25502:2;25497:3;25493:12;25486:19;;25145:366;;;:::o;25517:419::-;25683:4;25721:2;25710:9;25706:18;25698:26;;25770:9;25764:4;25760:20;25756:1;25745:9;25741:17;25734:47;25798:131;25924:4;25798:131;:::i;:::-;25790:139;;25517:419;;;:::o;25942:178::-;26082:30;26078:1;26070:6;26066:14;26059:54;25942:178;:::o;26126:366::-;26268:3;26289:67;26353:2;26348:3;26289:67;:::i;:::-;26282:74;;26365:93;26454:3;26365:93;:::i;:::-;26483:2;26478:3;26474:12;26467:19;;26126:366;;;:::o;26498:419::-;26664:4;26702:2;26691:9;26687:18;26679:26;;26751:9;26745:4;26741:20;26737:1;26726:9;26722:17;26715:47;26779:131;26905:4;26779:131;:::i;:::-;26771:139;;26498:419;;;:::o;26923:233::-;27063:34;27059:1;27051:6;27047:14;27040:58;27132:16;27127:2;27119:6;27115:15;27108:41;26923:233;:::o;27162:366::-;27304:3;27325:67;27389:2;27384:3;27325:67;:::i;:::-;27318:74;;27401:93;27490:3;27401:93;:::i;:::-;27519:2;27514:3;27510:12;27503:19;;27162:366;;;:::o;27534:419::-;27700:4;27738:2;27727:9;27723:18;27715:26;;27787:9;27781:4;27777:20;27773:1;27762:9;27758:17;27751:47;27815:131;27941:4;27815:131;:::i;:::-;27807:139;;27534:419;;;:::o;27959:180::-;28007:77;28004:1;27997:88;28104:4;28101:1;28094:15;28128:4;28125:1;28118:15;28145:191;28185:4;28205:20;28223:1;28205:20;:::i;:::-;28200:25;;28239:20;28257:1;28239:20;:::i;:::-;28234:25;;28278:1;28275;28272:8;28269:34;;;28283:18;;:::i;:::-;28269:34;28328:1;28325;28321:9;28313:17;;28145:191;;;;:::o;28342:305::-;28382:3;28401:20;28419:1;28401:20;:::i;:::-;28396:25;;28435:20;28453:1;28435:20;:::i;:::-;28430:25;;28589:1;28521:66;28517:74;28514:1;28511:81;28508:107;;;28595:18;;:::i;:::-;28508:107;28639:1;28636;28632:9;28625:16;;28342:305;;;;:::o;28653:98::-;28704:6;28738:5;28732:12;28722:22;;28653:98;;;:::o;28757:168::-;28840:11;28874:6;28869:3;28862:19;28914:4;28909:3;28905:14;28890:29;;28757:168;;;;:::o;28931:360::-;29017:3;29045:38;29077:5;29045:38;:::i;:::-;29099:70;29162:6;29157:3;29099:70;:::i;:::-;29092:77;;29178:52;29223:6;29218:3;29211:4;29204:5;29200:16;29178:52;:::i;:::-;29255:29;29277:6;29255:29;:::i;:::-;29250:3;29246:39;29239:46;;29021:270;28931:360;;;;:::o;29297:640::-;29492:4;29530:3;29519:9;29515:19;29507:27;;29544:71;29612:1;29601:9;29597:17;29588:6;29544:71;:::i;:::-;29625:72;29693:2;29682:9;29678:18;29669:6;29625:72;:::i;:::-;29707;29775:2;29764:9;29760:18;29751:6;29707:72;:::i;:::-;29826:9;29820:4;29816:20;29811:2;29800:9;29796:18;29789:48;29854:76;29925:4;29916:6;29854:76;:::i;:::-;29846:84;;29297:640;;;;;;;:::o;29943:141::-;29999:5;30030:6;30024:13;30015:22;;30046:32;30072:5;30046:32;:::i;:::-;29943:141;;;;:::o;30090:349::-;30159:6;30208:2;30196:9;30187:7;30183:23;30179:32;30176:119;;;30214:79;;:::i;:::-;30176:119;30334:1;30359:63;30414:7;30405:6;30394:9;30390:22;30359:63;:::i;:::-;30349:73;;30305:127;30090:349;;;;:::o;30445:180::-;30493:77;30490:1;30483:88;30590:4;30587:1;30580:15;30614:4;30611:1;30604:15"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","mintNFT(address,string)":"eacabe14","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SbfNFT.sol\":\"SbfNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899c87a849a94c848818d0afede6961d2c87665af1dd23a5c983e78981a65691\",\"dweb:/ipfs/QmUeFDffQRDmX87FX3MRxN3bmpUxDTWpWLwPJzeAJ3yF6H\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"contracts/SbfNFT.sol\":{\"keccak256\":\"0x153cb8cf2937512de31e71b90b7a20ceee819aeffee2faef4f692bbfef005404\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c1d38c8200102e83cee4efb52e0ed3352e944d2dc801a171cecd98b48206c34\",\"dweb:/ipfs/QmXEHsN3yMGGnnFLNsCqGkutN28WPBPw5uz4xR3oUu8NpZ\"]}},\"version\":1}"}},"contracts/SbfToken.sol":{"SBFToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20Votes.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1771":{"entryPoint":null,"id":1771,"parameterSlots":1,"returnSlots":0},"@_217":{"entryPoint":null,"id":217,"parameterSlots":0,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_343":{"entryPoint":null,"id":343,"parameterSlots":2,"returnSlots":0},"@_4211":{"entryPoint":null,"id":4211,"parameterSlots":2,"returnSlots":0},"@_6829":{"entryPoint":null,"id":6829,"parameterSlots":0,"returnSlots":0},"@_add_1675":{"entryPoint":1500,"id":1675,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_1451":{"entryPoint":2686,"id":1451,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_6904":{"entryPoint":2350,"id":6904,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_884":{"entryPoint":2789,"id":884,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_6883":{"entryPoint":2305,"id":6883,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_873":{"entryPoint":2681,"id":873,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_4267":{"entryPoint":802,"id":4267,"parameterSlots":3,"returnSlots":1},"@_maxSupply_1366":{"entryPoint":1454,"id":1366,"parameterSlots":0,"returnSlots":1},"@_mint_1398":{"entryPoint":898,"id":1398,"parameterSlots":2,"returnSlots":0},"@_mint_6922":{"entryPoint":871,"id":6922,"parameterSlots":2,"returnSlots":0},"@_mint_702":{"entryPoint":1088,"id":702,"parameterSlots":2,"returnSlots":0},"@_moveVotingPower_1561":{"entryPoint":2899,"id":1561,"parameterSlots":3,"returnSlots":0},"@_msgSender_3510":{"entryPoint":596,"id":3510,"parameterSlots":0,"returnSlots":1},"@_requireNotPaused_254":{"entryPoint":2596,"id":254,"parameterSlots":0,"returnSlots":0},"@_subtract_1689":{"entryPoint":3446,"id":1689,"parameterSlots":2,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":604,"id":111,"parameterSlots":1,"returnSlots":0},"@_unsafeAccess_1703":{"entryPoint":2379,"id":1703,"parameterSlots":2,"returnSlots":1},"@_writeCheckpoint_1661":{"entryPoint":1524,"id":1661,"parameterSlots":3,"returnSlots":2},"@decimals_373":{"entryPoint":862,"id":373,"parameterSlots":0,"returnSlots":1},"@delegates_1092":{"entryPoint":2794,"id":1092,"parameterSlots":1,"returnSlots":1},"@paused_242":{"entryPoint":2766,"id":242,"parameterSlots":0,"returnSlots":1},"@toUint224_5288":{"entryPoint":2400,"id":5288,"parameterSlots":1,"returnSlots":1},"@toUint32_5888":{"entryPoint":2510,"id":5888,"parameterSlots":1,"returnSlots":1},"@totalSupply_383":{"entryPoint":1490,"id":383,"parameterSlots":0,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4330,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":4244,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack":{"entryPoint":5249,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack":{"entryPoint":4536,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack":{"entryPoint":4983,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack":{"entryPoint":5135,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":4650,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4261,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":4347,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5288,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4575,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5022,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5174,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4689,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4816,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":5322,"id":null,"parameterSlots":3,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4440,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4723,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":3706,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":4056,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":3797,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":4137,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4845,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":4310,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":4234,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4278,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4033,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":4043,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":5414,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3646,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":5367,"id":null,"parameterSlots":0,"returnSlots":0},"shift_right_1_unsigned":{"entryPoint":3693,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a":{"entryPoint":5208,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699":{"entryPoint":4457,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79":{"entryPoint":4904,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19":{"entryPoint":5056,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":4609,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11215:27","statements":[{"body":{"nodeType":"YulBlock","src":"35:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"52:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"55:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45:6:27"},"nodeType":"YulFunctionCall","src":"45:88:27"},"nodeType":"YulExpressionStatement","src":"45:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"149:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"152:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"142:6:27"},"nodeType":"YulFunctionCall","src":"142:15:27"},"nodeType":"YulExpressionStatement","src":"142:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"173:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"176:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"166:6:27"},"nodeType":"YulFunctionCall","src":"166:15:27"},"nodeType":"YulExpressionStatement","src":"166:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7:180:27"},{"body":{"nodeType":"YulBlock","src":"244:51:27","statements":[{"nodeType":"YulAssignment","src":"254:34:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"279:1:27","type":"","value":"1"},{"name":"value","nodeType":"YulIdentifier","src":"282:5:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"275:3:27"},"nodeType":"YulFunctionCall","src":"275:13:27"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"254:8:27"}]}]},"name":"shift_right_1_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"225:5:27","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"235:8:27","type":""}],"src":"193:102:27"},{"body":{"nodeType":"YulBlock","src":"374:775:27","statements":[{"nodeType":"YulAssignment","src":"384:15:27","value":{"name":"_power","nodeType":"YulIdentifier","src":"393:6:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"384:5:27"}]},{"nodeType":"YulAssignment","src":"408:14:27","value":{"name":"_base","nodeType":"YulIdentifier","src":"417:5:27"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"408:4:27"}]},{"body":{"nodeType":"YulBlock","src":"466:677:27","statements":[{"body":{"nodeType":"YulBlock","src":"554:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"556:16:27"},"nodeType":"YulFunctionCall","src":"556:18:27"},"nodeType":"YulExpressionStatement","src":"556:18:27"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"532:4:27"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"542:3:27"},{"name":"base","nodeType":"YulIdentifier","src":"547:4:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"538:3:27"},"nodeType":"YulFunctionCall","src":"538:14:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"529:2:27"},"nodeType":"YulFunctionCall","src":"529:24:27"},"nodeType":"YulIf","src":"526:50:27"},{"body":{"nodeType":"YulBlock","src":"621:419:27","statements":[{"nodeType":"YulAssignment","src":"1001:25:27","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"1014:5:27"},{"name":"base","nodeType":"YulIdentifier","src":"1021:4:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1010:3:27"},"nodeType":"YulFunctionCall","src":"1010:16:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"1001:5:27"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"596:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"606:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"592:3:27"},"nodeType":"YulFunctionCall","src":"592:16:27"},"nodeType":"YulIf","src":"589:451:27"},{"nodeType":"YulAssignment","src":"1053:23:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"1065:4:27"},{"name":"base","nodeType":"YulIdentifier","src":"1071:4:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1061:3:27"},"nodeType":"YulFunctionCall","src":"1061:15:27"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"1053:4:27"}]},{"nodeType":"YulAssignment","src":"1089:44:27","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"1124:8:27"}],"functionName":{"name":"shift_right_1_unsigned","nodeType":"YulIdentifier","src":"1101:22:27"},"nodeType":"YulFunctionCall","src":"1101:32:27"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"1089:8:27"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"442:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"452:1:27","type":"","value":"1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"439:2:27"},"nodeType":"YulFunctionCall","src":"439:15:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"455:2:27","statements":[]},"pre":{"nodeType":"YulBlock","src":"435:3:27","statements":[]},"src":"431:712:27"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nodeType":"YulTypedName","src":"329:6:27","type":""},{"name":"_base","nodeType":"YulTypedName","src":"337:5:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"344:8:27","type":""},{"name":"max","nodeType":"YulTypedName","src":"354:3:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"362:5:27","type":""},{"name":"base","nodeType":"YulTypedName","src":"369:4:27","type":""}],"src":"301:848:27"},{"body":{"nodeType":"YulBlock","src":"1215:1013:27","statements":[{"body":{"nodeType":"YulBlock","src":"1410:20:27","statements":[{"nodeType":"YulAssignment","src":"1412:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1421:1:27","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"1412:5:27"}]},{"nodeType":"YulLeave","src":"1423:5:27"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"1400:8:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1393:6:27"},"nodeType":"YulFunctionCall","src":"1393:16:27"},"nodeType":"YulIf","src":"1390:40:27"},{"body":{"nodeType":"YulBlock","src":"1455:20:27","statements":[{"nodeType":"YulAssignment","src":"1457:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1466:1:27","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"1457:5:27"}]},{"nodeType":"YulLeave","src":"1468:5:27"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"1449:4:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1442:6:27"},"nodeType":"YulFunctionCall","src":"1442:12:27"},"nodeType":"YulIf","src":"1439:36:27"},{"cases":[{"body":{"nodeType":"YulBlock","src":"1585:20:27","statements":[{"nodeType":"YulAssignment","src":"1587:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1596:1:27","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"1587:5:27"}]},{"nodeType":"YulLeave","src":"1598:5:27"}]},"nodeType":"YulCase","src":"1578:27:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1583:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"1629:176:27","statements":[{"body":{"nodeType":"YulBlock","src":"1664:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"1666:16:27"},"nodeType":"YulFunctionCall","src":"1666:18:27"},"nodeType":"YulExpressionStatement","src":"1666:18:27"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"1649:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"1659:3:27","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1646:2:27"},"nodeType":"YulFunctionCall","src":"1646:17:27"},"nodeType":"YulIf","src":"1643:43:27"},{"nodeType":"YulAssignment","src":"1699:25:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1712:1:27","type":"","value":"2"},{"name":"exponent","nodeType":"YulIdentifier","src":"1715:8:27"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"1708:3:27"},"nodeType":"YulFunctionCall","src":"1708:16:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"1699:5:27"}]},{"body":{"nodeType":"YulBlock","src":"1755:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"1757:16:27"},"nodeType":"YulFunctionCall","src":"1757:18:27"},"nodeType":"YulExpressionStatement","src":"1757:18:27"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"1743:5:27"},{"name":"max","nodeType":"YulIdentifier","src":"1750:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1740:2:27"},"nodeType":"YulFunctionCall","src":"1740:14:27"},"nodeType":"YulIf","src":"1737:40:27"},{"nodeType":"YulLeave","src":"1790:5:27"}]},"nodeType":"YulCase","src":"1614:191:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1619:1:27","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"1535:4:27"},"nodeType":"YulSwitch","src":"1528:277:27"},{"body":{"nodeType":"YulBlock","src":"1937:123:27","statements":[{"nodeType":"YulAssignment","src":"1951:28:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"1964:4:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"1970:8:27"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"1960:3:27"},"nodeType":"YulFunctionCall","src":"1960:19:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"1951:5:27"}]},{"body":{"nodeType":"YulBlock","src":"2010:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2012:16:27"},"nodeType":"YulFunctionCall","src":"2012:18:27"},"nodeType":"YulExpressionStatement","src":"2012:18:27"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"1998:5:27"},{"name":"max","nodeType":"YulIdentifier","src":"2005:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1995:2:27"},"nodeType":"YulFunctionCall","src":"1995:14:27"},"nodeType":"YulIf","src":"1992:40:27"},{"nodeType":"YulLeave","src":"2045:5:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"1840:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"1846:2:27","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1837:2:27"},"nodeType":"YulFunctionCall","src":"1837:12:27"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"1854:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"1864:2:27","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1851:2:27"},"nodeType":"YulFunctionCall","src":"1851:16:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1833:3:27"},"nodeType":"YulFunctionCall","src":"1833:35:27"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"1889:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"1895:3:27","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1886:2:27"},"nodeType":"YulFunctionCall","src":"1886:13:27"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"1904:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"1914:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1901:2:27"},"nodeType":"YulFunctionCall","src":"1901:16:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1882:3:27"},"nodeType":"YulFunctionCall","src":"1882:36:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1817:2:27"},"nodeType":"YulFunctionCall","src":"1817:111:27"},"nodeType":"YulIf","src":"1814:246:27"},{"nodeType":"YulAssignment","src":"2070:57:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2104:1:27","type":"","value":"1"},{"name":"base","nodeType":"YulIdentifier","src":"2107:4:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"2113:8:27"},{"name":"max","nodeType":"YulIdentifier","src":"2123:3:27"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"2085:18:27"},"nodeType":"YulFunctionCall","src":"2085:42:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2070:5:27"},{"name":"base","nodeType":"YulIdentifier","src":"2077:4:27"}]},{"body":{"nodeType":"YulBlock","src":"2166:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2168:16:27"},"nodeType":"YulFunctionCall","src":"2168:18:27"},"nodeType":"YulExpressionStatement","src":"2168:18:27"}]},"condition":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"2143:5:27"},{"arguments":[{"name":"max","nodeType":"YulIdentifier","src":"2154:3:27"},{"name":"base","nodeType":"YulIdentifier","src":"2159:4:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2150:3:27"},"nodeType":"YulFunctionCall","src":"2150:14:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2140:2:27"},"nodeType":"YulFunctionCall","src":"2140:25:27"},"nodeType":"YulIf","src":"2137:51:27"},{"nodeType":"YulAssignment","src":"2197:25:27","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"2210:5:27"},{"name":"base","nodeType":"YulIdentifier","src":"2217:4:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2206:3:27"},"nodeType":"YulFunctionCall","src":"2206:16:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2197:5:27"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"1185:4:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"1191:8:27","type":""},{"name":"max","nodeType":"YulTypedName","src":"1201:3:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"1209:5:27","type":""}],"src":"1155:1073:27"},{"body":{"nodeType":"YulBlock","src":"2279:32:27","statements":[{"nodeType":"YulAssignment","src":"2289:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"2300:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2289:7:27"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2261:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2271:7:27","type":""}],"src":"2234:77:27"},{"body":{"nodeType":"YulBlock","src":"2360:43:27","statements":[{"nodeType":"YulAssignment","src":"2370:27:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2385:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2392:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2381:3:27"},"nodeType":"YulFunctionCall","src":"2381:16:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2370:7:27"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2342:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2352:7:27","type":""}],"src":"2317:86:27"},{"body":{"nodeType":"YulBlock","src":"2473:217:27","statements":[{"nodeType":"YulAssignment","src":"2483:31:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"2509:4:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2491:17:27"},"nodeType":"YulFunctionCall","src":"2491:23:27"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"2483:4:27"}]},{"nodeType":"YulAssignment","src":"2523:37:27","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"2551:8:27"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"2535:15:27"},"nodeType":"YulFunctionCall","src":"2535:25:27"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"2523:8:27"}]},{"nodeType":"YulAssignment","src":"2570:113:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"2600:4:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"2606:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"2616:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"2579:20:27"},"nodeType":"YulFunctionCall","src":"2579:104:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2570:5:27"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"2448:4:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"2454:8:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"2467:5:27","type":""}],"src":"2409:281:27"},{"body":{"nodeType":"YulBlock","src":"2744:300:27","statements":[{"nodeType":"YulAssignment","src":"2754:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2777:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2759:17:27"},"nodeType":"YulFunctionCall","src":"2759:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"2754:1:27"}]},{"nodeType":"YulAssignment","src":"2788:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2811:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2793:17:27"},"nodeType":"YulFunctionCall","src":"2793:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"2788:1:27"}]},{"body":{"nodeType":"YulBlock","src":"2986:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2988:16:27"},"nodeType":"YulFunctionCall","src":"2988:18:27"},"nodeType":"YulExpressionStatement","src":"2988:18:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2898:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2891:6:27"},"nodeType":"YulFunctionCall","src":"2891:9:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2884:6:27"},"nodeType":"YulFunctionCall","src":"2884:17:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2906:1:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2913:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"2981:1:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2909:3:27"},"nodeType":"YulFunctionCall","src":"2909:74:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2903:2:27"},"nodeType":"YulFunctionCall","src":"2903:81:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2880:3:27"},"nodeType":"YulFunctionCall","src":"2880:105:27"},"nodeType":"YulIf","src":"2877:131:27"},{"nodeType":"YulAssignment","src":"3018:20:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3033:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"3036:1:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3029:3:27"},"nodeType":"YulFunctionCall","src":"3029:9:27"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"3018:7:27"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2727:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"2730:1:27","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"2736:7:27","type":""}],"src":"2696:348:27"},{"body":{"nodeType":"YulBlock","src":"3095:32:27","statements":[{"nodeType":"YulAssignment","src":"3105:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"3116:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3105:7:27"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3077:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3087:7:27","type":""}],"src":"3050:77:27"},{"body":{"nodeType":"YulBlock","src":"3198:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3215:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3238:5:27"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"3220:17:27"},"nodeType":"YulFunctionCall","src":"3220:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3208:6:27"},"nodeType":"YulFunctionCall","src":"3208:37:27"},"nodeType":"YulExpressionStatement","src":"3208:37:27"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3186:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3193:3:27","type":""}],"src":"3133:118:27"},{"body":{"nodeType":"YulBlock","src":"3322:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3339:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3362:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3344:17:27"},"nodeType":"YulFunctionCall","src":"3344:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3332:6:27"},"nodeType":"YulFunctionCall","src":"3332:37:27"},"nodeType":"YulExpressionStatement","src":"3332:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3310:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3317:3:27","type":""}],"src":"3257:118:27"},{"body":{"nodeType":"YulBlock","src":"3426:81:27","statements":[{"nodeType":"YulAssignment","src":"3436:65:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3451:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"3458:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3447:3:27"},"nodeType":"YulFunctionCall","src":"3447:54:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3436:7:27"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3408:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3418:7:27","type":""}],"src":"3381:126:27"},{"body":{"nodeType":"YulBlock","src":"3558:51:27","statements":[{"nodeType":"YulAssignment","src":"3568:35:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3597:5:27"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3579:17:27"},"nodeType":"YulFunctionCall","src":"3579:24:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3568:7:27"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3540:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3550:7:27","type":""}],"src":"3513:96:27"},{"body":{"nodeType":"YulBlock","src":"3680:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3697:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3720:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3702:17:27"},"nodeType":"YulFunctionCall","src":"3702:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3690:6:27"},"nodeType":"YulFunctionCall","src":"3690:37:27"},"nodeType":"YulExpressionStatement","src":"3690:37:27"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3668:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3675:3:27","type":""}],"src":"3615:118:27"},{"body":{"nodeType":"YulBlock","src":"3949:454:27","statements":[{"nodeType":"YulAssignment","src":"3959:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3971:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3982:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3967:3:27"},"nodeType":"YulFunctionCall","src":"3967:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3959:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4040:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4053:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4064:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4049:3:27"},"nodeType":"YulFunctionCall","src":"4049:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"3996:43:27"},"nodeType":"YulFunctionCall","src":"3996:71:27"},"nodeType":"YulExpressionStatement","src":"3996:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4121:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4134:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4145:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4130:3:27"},"nodeType":"YulFunctionCall","src":"4130:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"4077:43:27"},"nodeType":"YulFunctionCall","src":"4077:72:27"},"nodeType":"YulExpressionStatement","src":"4077:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4203:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4216:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4227:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4212:3:27"},"nodeType":"YulFunctionCall","src":"4212:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"4159:43:27"},"nodeType":"YulFunctionCall","src":"4159:72:27"},"nodeType":"YulExpressionStatement","src":"4159:72:27"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"4285:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4298:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4309:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4294:3:27"},"nodeType":"YulFunctionCall","src":"4294:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4241:43:27"},"nodeType":"YulFunctionCall","src":"4241:72:27"},"nodeType":"YulExpressionStatement","src":"4241:72:27"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"4367:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4380:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4391:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4376:3:27"},"nodeType":"YulFunctionCall","src":"4376:19:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4323:43:27"},"nodeType":"YulFunctionCall","src":"4323:73:27"},"nodeType":"YulExpressionStatement","src":"4323:73:27"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3889:9:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3901:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3909:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3917:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3925:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3933:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3944:4:27","type":""}],"src":"3739:664:27"},{"body":{"nodeType":"YulBlock","src":"4505:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4522:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"4527:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4515:6:27"},"nodeType":"YulFunctionCall","src":"4515:19:27"},"nodeType":"YulExpressionStatement","src":"4515:19:27"},{"nodeType":"YulAssignment","src":"4543:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4562:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"4567:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4558:3:27"},"nodeType":"YulFunctionCall","src":"4558:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4543:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4477:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"4482:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4493:11:27","type":""}],"src":"4409:169:27"},{"body":{"nodeType":"YulBlock","src":"4690:129:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4712:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4720:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4708:3:27"},"nodeType":"YulFunctionCall","src":"4708:14:27"},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f","kind":"string","nodeType":"YulLiteral","src":"4724:34:27","type":"","value":"ERC20Votes: total supply risks o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4701:6:27"},"nodeType":"YulFunctionCall","src":"4701:58:27"},"nodeType":"YulExpressionStatement","src":"4701:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4780:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4788:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4776:3:27"},"nodeType":"YulFunctionCall","src":"4776:15:27"},{"hexValue":"766572666c6f77696e6720766f746573","kind":"string","nodeType":"YulLiteral","src":"4793:18:27","type":"","value":"verflowing votes"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4769:6:27"},"nodeType":"YulFunctionCall","src":"4769:43:27"},"nodeType":"YulExpressionStatement","src":"4769:43:27"}]},"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4682:6:27","type":""}],"src":"4584:235:27"},{"body":{"nodeType":"YulBlock","src":"4971:220:27","statements":[{"nodeType":"YulAssignment","src":"4981:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5047:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"5052:2:27","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4988:58:27"},"nodeType":"YulFunctionCall","src":"4988:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4981:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5153:3:27"}],"functionName":{"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulIdentifier","src":"5064:88:27"},"nodeType":"YulFunctionCall","src":"5064:93:27"},"nodeType":"YulExpressionStatement","src":"5064:93:27"},{"nodeType":"YulAssignment","src":"5166:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5177:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"5182:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5173:3:27"},"nodeType":"YulFunctionCall","src":"5173:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5166:3:27"}]}]},"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4959:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4967:3:27","type":""}],"src":"4825:366:27"},{"body":{"nodeType":"YulBlock","src":"5368:248:27","statements":[{"nodeType":"YulAssignment","src":"5378:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5390:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5401:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5386:3:27"},"nodeType":"YulFunctionCall","src":"5386:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5378:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5425:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5436:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5421:3:27"},"nodeType":"YulFunctionCall","src":"5421:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5444:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5450:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5440:3:27"},"nodeType":"YulFunctionCall","src":"5440:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5414:6:27"},"nodeType":"YulFunctionCall","src":"5414:47:27"},"nodeType":"YulExpressionStatement","src":"5414:47:27"},{"nodeType":"YulAssignment","src":"5470:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5604:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5478:124:27"},"nodeType":"YulFunctionCall","src":"5478:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5470:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5348:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5363:4:27","type":""}],"src":"5197:419:27"},{"body":{"nodeType":"YulBlock","src":"5728:75:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5750:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"5758:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5746:3:27"},"nodeType":"YulFunctionCall","src":"5746:14:27"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"5762:33:27","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5739:6:27"},"nodeType":"YulFunctionCall","src":"5739:57:27"},"nodeType":"YulExpressionStatement","src":"5739:57:27"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5720:6:27","type":""}],"src":"5622:181:27"},{"body":{"nodeType":"YulBlock","src":"5955:220:27","statements":[{"nodeType":"YulAssignment","src":"5965:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6031:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"6036:2:27","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5972:58:27"},"nodeType":"YulFunctionCall","src":"5972:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5965:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6137:3:27"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"6048:88:27"},"nodeType":"YulFunctionCall","src":"6048:93:27"},"nodeType":"YulExpressionStatement","src":"6048:93:27"},{"nodeType":"YulAssignment","src":"6150:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6161:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"6166:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6157:3:27"},"nodeType":"YulFunctionCall","src":"6157:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6150:3:27"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5943:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5951:3:27","type":""}],"src":"5809:366:27"},{"body":{"nodeType":"YulBlock","src":"6352:248:27","statements":[{"nodeType":"YulAssignment","src":"6362:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6374:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6385:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6370:3:27"},"nodeType":"YulFunctionCall","src":"6370:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6362:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6409:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6420:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6405:3:27"},"nodeType":"YulFunctionCall","src":"6405:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6428:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"6434:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6424:3:27"},"nodeType":"YulFunctionCall","src":"6424:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6398:6:27"},"nodeType":"YulFunctionCall","src":"6398:47:27"},"nodeType":"YulExpressionStatement","src":"6398:47:27"},{"nodeType":"YulAssignment","src":"6454:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6588:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6462:124:27"},"nodeType":"YulFunctionCall","src":"6462:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6454:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6332:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6347:4:27","type":""}],"src":"6181:419:27"},{"body":{"nodeType":"YulBlock","src":"6650:261:27","statements":[{"nodeType":"YulAssignment","src":"6660:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6683:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6665:17:27"},"nodeType":"YulFunctionCall","src":"6665:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6660:1:27"}]},{"nodeType":"YulAssignment","src":"6694:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6717:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6699:17:27"},"nodeType":"YulFunctionCall","src":"6699:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6694:1:27"}]},{"body":{"nodeType":"YulBlock","src":"6857:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6859:16:27"},"nodeType":"YulFunctionCall","src":"6859:18:27"},"nodeType":"YulExpressionStatement","src":"6859:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6778:1:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6785:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"6853:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6781:3:27"},"nodeType":"YulFunctionCall","src":"6781:74:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6775:2:27"},"nodeType":"YulFunctionCall","src":"6775:81:27"},"nodeType":"YulIf","src":"6772:107:27"},{"nodeType":"YulAssignment","src":"6889:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6900:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"6903:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6896:3:27"},"nodeType":"YulFunctionCall","src":"6896:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6889:3:27"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6637:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"6640:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6646:3:27","type":""}],"src":"6606:305:27"},{"body":{"nodeType":"YulBlock","src":"7015:124:27","statements":[{"nodeType":"YulAssignment","src":"7025:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7037:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7048:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7033:3:27"},"nodeType":"YulFunctionCall","src":"7033:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7025:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7105:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7118:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7129:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7114:3:27"},"nodeType":"YulFunctionCall","src":"7114:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7061:43:27"},"nodeType":"YulFunctionCall","src":"7061:71:27"},"nodeType":"YulExpressionStatement","src":"7061:71:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6987:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6999:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7010:4:27","type":""}],"src":"6917:222:27"},{"body":{"nodeType":"YulBlock","src":"7190:146:27","statements":[{"nodeType":"YulAssignment","src":"7200:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7223:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7205:17:27"},"nodeType":"YulFunctionCall","src":"7205:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"7200:1:27"}]},{"nodeType":"YulAssignment","src":"7234:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7257:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7239:17:27"},"nodeType":"YulFunctionCall","src":"7239:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"7234:1:27"}]},{"body":{"nodeType":"YulBlock","src":"7281:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7283:16:27"},"nodeType":"YulFunctionCall","src":"7283:18:27"},"nodeType":"YulExpressionStatement","src":"7283:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7275:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"7278:1:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7272:2:27"},"nodeType":"YulFunctionCall","src":"7272:8:27"},"nodeType":"YulIf","src":"7269:34:27"},{"nodeType":"YulAssignment","src":"7313:17:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7325:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"7328:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7321:3:27"},"nodeType":"YulFunctionCall","src":"7321:9:27"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"7313:4:27"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7176:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"7179:1:27","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"7185:4:27","type":""}],"src":"7145:191:27"},{"body":{"nodeType":"YulBlock","src":"7448:120:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7470:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7478:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7466:3:27"},"nodeType":"YulFunctionCall","src":"7466:14:27"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032","kind":"string","nodeType":"YulLiteral","src":"7482:34:27","type":"","value":"SafeCast: value doesn't fit in 2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7459:6:27"},"nodeType":"YulFunctionCall","src":"7459:58:27"},"nodeType":"YulExpressionStatement","src":"7459:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7538:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"7546:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7534:3:27"},"nodeType":"YulFunctionCall","src":"7534:15:27"},{"hexValue":"32342062697473","kind":"string","nodeType":"YulLiteral","src":"7551:9:27","type":"","value":"24 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7527:6:27"},"nodeType":"YulFunctionCall","src":"7527:34:27"},"nodeType":"YulExpressionStatement","src":"7527:34:27"}]},"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7440:6:27","type":""}],"src":"7342:226:27"},{"body":{"nodeType":"YulBlock","src":"7720:220:27","statements":[{"nodeType":"YulAssignment","src":"7730:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7796:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"7801:2:27","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7737:58:27"},"nodeType":"YulFunctionCall","src":"7737:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7730:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7902:3:27"}],"functionName":{"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulIdentifier","src":"7813:88:27"},"nodeType":"YulFunctionCall","src":"7813:93:27"},"nodeType":"YulExpressionStatement","src":"7813:93:27"},{"nodeType":"YulAssignment","src":"7915:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7926:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"7931:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7922:3:27"},"nodeType":"YulFunctionCall","src":"7922:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7915:3:27"}]}]},"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7708:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7716:3:27","type":""}],"src":"7574:366:27"},{"body":{"nodeType":"YulBlock","src":"8117:248:27","statements":[{"nodeType":"YulAssignment","src":"8127:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8139:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8150:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8135:3:27"},"nodeType":"YulFunctionCall","src":"8135:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8127:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8174:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8185:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8170:3:27"},"nodeType":"YulFunctionCall","src":"8170:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8193:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"8199:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8189:3:27"},"nodeType":"YulFunctionCall","src":"8189:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8163:6:27"},"nodeType":"YulFunctionCall","src":"8163:47:27"},"nodeType":"YulExpressionStatement","src":"8163:47:27"},{"nodeType":"YulAssignment","src":"8219:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8353:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8227:124:27"},"nodeType":"YulFunctionCall","src":"8227:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8219:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8097:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8112:4:27","type":""}],"src":"7946:419:27"},{"body":{"nodeType":"YulBlock","src":"8477:119:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8499:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8507:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8495:3:27"},"nodeType":"YulFunctionCall","src":"8495:14:27"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033","kind":"string","nodeType":"YulLiteral","src":"8511:34:27","type":"","value":"SafeCast: value doesn't fit in 3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8488:6:27"},"nodeType":"YulFunctionCall","src":"8488:58:27"},"nodeType":"YulExpressionStatement","src":"8488:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8567:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"8575:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8563:3:27"},"nodeType":"YulFunctionCall","src":"8563:15:27"},{"hexValue":"322062697473","kind":"string","nodeType":"YulLiteral","src":"8580:8:27","type":"","value":"2 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8556:6:27"},"nodeType":"YulFunctionCall","src":"8556:33:27"},"nodeType":"YulExpressionStatement","src":"8556:33:27"}]},"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8469:6:27","type":""}],"src":"8371:225:27"},{"body":{"nodeType":"YulBlock","src":"8748:220:27","statements":[{"nodeType":"YulAssignment","src":"8758:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8824:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"8829:2:27","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8765:58:27"},"nodeType":"YulFunctionCall","src":"8765:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8758:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8930:3:27"}],"functionName":{"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulIdentifier","src":"8841:88:27"},"nodeType":"YulFunctionCall","src":"8841:93:27"},"nodeType":"YulExpressionStatement","src":"8841:93:27"},{"nodeType":"YulAssignment","src":"8943:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8954:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"8959:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8950:3:27"},"nodeType":"YulFunctionCall","src":"8950:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8943:3:27"}]}]},"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8736:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8744:3:27","type":""}],"src":"8602:366:27"},{"body":{"nodeType":"YulBlock","src":"9145:248:27","statements":[{"nodeType":"YulAssignment","src":"9155:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9167:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9178:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9163:3:27"},"nodeType":"YulFunctionCall","src":"9163:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9155:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9202:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9213:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9198:3:27"},"nodeType":"YulFunctionCall","src":"9198:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9221:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"9227:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9217:3:27"},"nodeType":"YulFunctionCall","src":"9217:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9191:6:27"},"nodeType":"YulFunctionCall","src":"9191:47:27"},"nodeType":"YulExpressionStatement","src":"9191:47:27"},{"nodeType":"YulAssignment","src":"9247:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9381:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9255:124:27"},"nodeType":"YulFunctionCall","src":"9255:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9247:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9125:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9140:4:27","type":""}],"src":"8974:419:27"},{"body":{"nodeType":"YulBlock","src":"9505:60:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9527:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"9535:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9523:3:27"},"nodeType":"YulFunctionCall","src":"9523:14:27"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"9539:18:27","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9516:6:27"},"nodeType":"YulFunctionCall","src":"9516:42:27"},"nodeType":"YulExpressionStatement","src":"9516:42:27"}]},"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9497:6:27","type":""}],"src":"9399:166:27"},{"body":{"nodeType":"YulBlock","src":"9717:220:27","statements":[{"nodeType":"YulAssignment","src":"9727:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9793:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9798:2:27","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9734:58:27"},"nodeType":"YulFunctionCall","src":"9734:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9727:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9899:3:27"}],"functionName":{"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulIdentifier","src":"9810:88:27"},"nodeType":"YulFunctionCall","src":"9810:93:27"},"nodeType":"YulExpressionStatement","src":"9810:93:27"},{"nodeType":"YulAssignment","src":"9912:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9923:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"9928:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9919:3:27"},"nodeType":"YulFunctionCall","src":"9919:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9912:3:27"}]}]},"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9705:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9713:3:27","type":""}],"src":"9571:366:27"},{"body":{"nodeType":"YulBlock","src":"10114:248:27","statements":[{"nodeType":"YulAssignment","src":"10124:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10136:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10147:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10132:3:27"},"nodeType":"YulFunctionCall","src":"10132:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10124:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10171:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10182:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10167:3:27"},"nodeType":"YulFunctionCall","src":"10167:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10190:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"10196:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10186:3:27"},"nodeType":"YulFunctionCall","src":"10186:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10160:6:27"},"nodeType":"YulFunctionCall","src":"10160:47:27"},"nodeType":"YulExpressionStatement","src":"10160:47:27"},{"nodeType":"YulAssignment","src":"10216:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10350:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10224:124:27"},"nodeType":"YulFunctionCall","src":"10224:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10216:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10094:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10109:4:27","type":""}],"src":"9943:419:27"},{"body":{"nodeType":"YulBlock","src":"10494:206:27","statements":[{"nodeType":"YulAssignment","src":"10504:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10516:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10527:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10512:3:27"},"nodeType":"YulFunctionCall","src":"10512:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10504:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10584:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10597:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10608:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10593:3:27"},"nodeType":"YulFunctionCall","src":"10593:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10540:43:27"},"nodeType":"YulFunctionCall","src":"10540:71:27"},"nodeType":"YulExpressionStatement","src":"10540:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10665:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10678:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10689:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10674:3:27"},"nodeType":"YulFunctionCall","src":"10674:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10621:43:27"},"nodeType":"YulFunctionCall","src":"10621:72:27"},"nodeType":"YulExpressionStatement","src":"10621:72:27"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10458:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10470:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10478:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10489:4:27","type":""}],"src":"10368:332:27"},{"body":{"nodeType":"YulBlock","src":"10734:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10751:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10754:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10744:6:27"},"nodeType":"YulFunctionCall","src":"10744:88:27"},"nodeType":"YulExpressionStatement","src":"10744:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10848:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10851:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10841:6:27"},"nodeType":"YulFunctionCall","src":"10841:15:27"},"nodeType":"YulExpressionStatement","src":"10841:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10872:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10875:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10865:6:27"},"nodeType":"YulFunctionCall","src":"10865:15:27"},"nodeType":"YulExpressionStatement","src":"10865:15:27"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10706:180:27"},{"body":{"nodeType":"YulBlock","src":"10943:269:27","statements":[{"nodeType":"YulAssignment","src":"10953:22:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10967:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"10973:1:27","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10963:3:27"},"nodeType":"YulFunctionCall","src":"10963:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10953:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"10984:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11014:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"11020:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11010:3:27"},"nodeType":"YulFunctionCall","src":"11010:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10988:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"11061:51:27","statements":[{"nodeType":"YulAssignment","src":"11075:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11089:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"11097:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11085:3:27"},"nodeType":"YulFunctionCall","src":"11085:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11075:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11041:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11034:6:27"},"nodeType":"YulFunctionCall","src":"11034:26:27"},"nodeType":"YulIf","src":"11031:81:27"},{"body":{"nodeType":"YulBlock","src":"11164:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"11178:16:27"},"nodeType":"YulFunctionCall","src":"11178:18:27"},"nodeType":"YulExpressionStatement","src":"11178:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11128:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11151:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"11159:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11148:2:27"},"nodeType":"YulFunctionCall","src":"11148:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11125:2:27"},"nodeType":"YulFunctionCall","src":"11125:38:27"},"nodeType":"YulIf","src":"11122:84:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10927:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10936:6:27","type":""}],"src":"10892:320:27"}]},"contents":"{\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: total supply risks o\")\n\n        mstore(add(memPtr, 32), \"verflowing votes\")\n\n    }\n\n    function abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 2\")\n\n        mstore(add(memPtr, 32), \"24 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 3\")\n\n        mstore(add(memPtr, 32), \"2 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x140 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x534246546F6B656E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x534246546F6B656E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5342460000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x104 SWAP3 SWAP2 SWAP1 PUSH3 0xD8E JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x11D SWAP3 SWAP2 SWAP1 PUSH3 0xD8E JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x15B PUSH3 0x14F PUSH3 0x254 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x25C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F SWAP1 POP DUP3 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP2 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x1C4 DUP2 DUP5 DUP5 PUSH3 0x322 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH2 0x120 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP POP PUSH3 0x24E CALLER PUSH3 0x223 PUSH3 0x35E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH3 0x231 SWAP2 SWAP1 PUSH3 0xFD8 JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH3 0x242 SWAP2 SWAP1 PUSH3 0x1029 JUMP JUMPDEST PUSH3 0x367 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x155C JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x33F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x10FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x37E DUP3 DUP3 PUSH3 0x382 PUSH1 0x20 SHL PUSH3 0x112F OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x399 DUP3 DUP3 PUSH3 0x440 PUSH1 0x20 SHL PUSH3 0x11BC OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x3A9 PUSH3 0x5AE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x3D7 PUSH3 0x5D2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST GT ISZERO PUSH3 0x41B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x412 SWAP1 PUSH3 0x11DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x43A PUSH1 0xA PUSH3 0x5DC PUSH1 0x20 SHL PUSH3 0x1313 OR DUP4 PUSH3 0x5F4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x4B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4AA SWAP1 PUSH3 0x1251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x4C7 PUSH1 0x0 DUP4 DUP4 PUSH3 0x901 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x4DB SWAP2 SWAP1 PUSH3 0x1273 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x58E SWAP2 SWAP1 PUSH3 0x12D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x5AA PUSH1 0x0 DUP4 DUP4 PUSH3 0x92E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0x5EC SWAP2 SWAP1 PUSH3 0x1273 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 EQ PUSH3 0x6CF JUMPI PUSH3 0x62A DUP8 PUSH1 0x1 DUP5 PUSH3 0x61E SWAP2 SWAP1 PUSH3 0x12ED JUMP JUMPDEST PUSH3 0x94B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH3 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH3 0x73E DUP5 DUP7 DUP9 PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH3 0x75A JUMPI POP NUMBER DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH3 0x7ED JUMPI PUSH3 0x776 DUP4 PUSH3 0x960 PUSH1 0x20 SHL PUSH3 0x1329 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x796 DUP9 PUSH1 0x1 DUP6 PUSH3 0x78A SWAP2 SWAP1 PUSH3 0x12ED JUMP JUMPDEST PUSH3 0x94B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x8F7 JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH3 0x80F NUMBER PUSH3 0x9CE PUSH1 0x20 SHL PUSH3 0x1394 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x830 DUP7 PUSH3 0x960 PUSH1 0x20 SHL PUSH3 0x1329 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x911 PUSH3 0xA24 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x929 DUP4 DUP4 DUP4 PUSH3 0xA79 PUSH1 0x20 SHL PUSH3 0x13E7 OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x946 DUP4 DUP4 DUP4 PUSH3 0xA7E PUSH1 0x20 SHL PUSH3 0x13EC OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH3 0x9C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x9BD SWAP1 PUSH3 0x139E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH3 0xA1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA13 SWAP1 PUSH3 0x1436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xA34 PUSH3 0xACE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0xA77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA6E SWAP1 PUSH3 0x14A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0xA96 DUP4 DUP4 DUP4 PUSH3 0xAE5 PUSH1 0x20 SHL PUSH3 0x1417 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAC9 PUSH3 0xAAB DUP5 PUSH3 0xAEA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xABC DUP5 PUSH3 0xAEA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH3 0xB53 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0xB90 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH3 0xD71 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0xC83 JUMPI PUSH1 0x0 DUP1 PUSH3 0xC2A PUSH1 0x9 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0xD76 PUSH1 0x20 SHL PUSH3 0x141C OR DUP6 PUSH3 0x5F4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH3 0xC78 SWAP3 SWAP2 SWAP1 PUSH3 0x14CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0xD70 JUMPI PUSH1 0x0 DUP1 PUSH3 0xD17 PUSH1 0x9 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH3 0x5DC PUSH1 0x20 SHL PUSH3 0x1313 OR DUP6 PUSH3 0x5F4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH3 0xD65 SWAP3 SWAP2 SWAP1 PUSH3 0x14CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH3 0xD86 SWAP2 SWAP1 PUSH3 0x12ED JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xD9C SWAP1 PUSH3 0x1526 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xDC0 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE0C JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xDDB JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE0C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE0C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE0B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xDEE JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xE1B SWAP2 SWAP1 PUSH3 0xE1F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xE3A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0xE20 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0xECC JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0xEA4 JUMPI PUSH3 0xEA3 PUSH3 0xE3E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0xEB4 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0xEC4 DUP6 PUSH3 0xE6D JUMP JUMPDEST SWAP5 POP PUSH3 0xE84 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0xEE7 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0xFBA JUMP JUMPDEST DUP2 PUSH3 0xEF7 JUMPI PUSH1 0x0 SWAP1 POP PUSH3 0xFBA JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0xF10 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0xF1B JUMPI PUSH3 0xF51 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0xFBA JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0xF30 JUMPI PUSH3 0xF2F PUSH3 0xE3E JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0xF4A JUMPI PUSH3 0xF49 PUSH3 0xE3E JUMP JUMPDEST JUMPDEST POP PUSH3 0xFBA JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0xF8B JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0xF85 JUMPI PUSH3 0xF84 PUSH3 0xE3E JUMP JUMPDEST JUMPDEST PUSH3 0xFBA JUMP JUMPDEST PUSH3 0xF9A DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0xE7A JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0xFB4 JUMPI PUSH3 0xFB3 PUSH3 0xE3E JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFE5 DUP3 PUSH3 0xFC1 JUMP JUMPDEST SWAP2 POP PUSH3 0xFF2 DUP4 PUSH3 0xFCB JUMP JUMPDEST SWAP3 POP PUSH3 0x1021 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0xED5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1036 DUP3 PUSH3 0xFC1 JUMP JUMPDEST SWAP2 POP PUSH3 0x1043 DUP4 PUSH3 0xFC1 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x107F JUMPI PUSH3 0x107E PUSH3 0xE3E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x109F DUP2 PUSH3 0x108A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x10B0 DUP2 PUSH3 0xFC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x10E3 DUP3 PUSH3 0x10B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x10F5 DUP2 PUSH3 0x10D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x1112 PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x1094 JUMP JUMPDEST PUSH3 0x1121 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x1094 JUMP JUMPDEST PUSH3 0x1130 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x1094 JUMP JUMPDEST PUSH3 0x113F PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x10A5 JUMP JUMPDEST PUSH3 0x114E PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x10EA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x766572666C6F77696E6720766F74657300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x11C7 PUSH1 0x30 DUP4 PUSH3 0x1158 JUMP JUMPDEST SWAP2 POP PUSH3 0x11D4 DUP3 PUSH3 0x1169 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x11FA DUP2 PUSH3 0x11B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1239 PUSH1 0x1F DUP4 PUSH3 0x1158 JUMP JUMPDEST SWAP2 POP PUSH3 0x1246 DUP3 PUSH3 0x1201 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x126C DUP2 PUSH3 0x122A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1280 DUP3 PUSH3 0xFC1 JUMP JUMPDEST SWAP2 POP PUSH3 0x128D DUP4 PUSH3 0xFC1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH3 0x12C5 JUMPI PUSH3 0x12C4 PUSH3 0xE3E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x12E7 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x10A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x12FA DUP3 PUSH3 0xFC1 JUMP JUMPDEST SWAP2 POP PUSH3 0x1307 DUP4 PUSH3 0xFC1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH3 0x131D JUMPI PUSH3 0x131C PUSH3 0xE3E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1386 PUSH1 0x27 DUP4 PUSH3 0x1158 JUMP JUMPDEST SWAP2 POP PUSH3 0x1393 DUP3 PUSH3 0x1328 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x13B9 DUP2 PUSH3 0x1377 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x141E PUSH1 0x26 DUP4 PUSH3 0x1158 JUMP JUMPDEST SWAP2 POP PUSH3 0x142B DUP3 PUSH3 0x13C0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x1451 DUP2 PUSH3 0x140F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1490 PUSH1 0x10 DUP4 PUSH3 0x1158 JUMP JUMPDEST SWAP2 POP PUSH3 0x149D DUP3 PUSH3 0x1458 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x14C3 DUP2 PUSH3 0x1481 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x14E1 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x10A5 JUMP JUMPDEST PUSH3 0x14F0 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x10A5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x153F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1556 JUMPI PUSH3 0x1555 PUSH3 0x14F7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x430A PUSH3 0x15AC PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x19B7 ADD MSTORE PUSH1 0x0 PUSH2 0x19F9 ADD MSTORE PUSH1 0x0 PUSH2 0x19D8 ADD MSTORE PUSH1 0x0 PUSH2 0x190D ADD MSTORE PUSH1 0x0 PUSH2 0x1963 ADD MSTORE PUSH1 0x0 PUSH2 0x198C ADD MSTORE PUSH2 0x430A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0x9AB24EB0 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x5F2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x622 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x58A JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4DC JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x454 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x3A46B1A8 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x587CDE1E GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x3CE JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x348 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2C2 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x238 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F2 PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x2CD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x2DE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x2E2D JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x2DE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0x72C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x2ED0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x2DE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH2 0x77B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32A PUSH2 0x80F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH2 0x821 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x362 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x2EEB JUMP JUMPDEST PUSH2 0x837 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x2F18 JUMP JUMPDEST PUSH2 0x84B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x2F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x2F18 JUMP JUMPDEST PUSH2 0x8B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B8 PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x2DE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x2F18 JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x2F8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x418 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x2F18 JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x425 SWAP2 SWAP1 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x436 PUSH2 0x97B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x452 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH2 0x98F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x469 SWAP2 SWAP1 PUSH2 0x2F18 JUMP JUMPDEST PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47B SWAP2 SWAP1 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48C PUSH2 0x9FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x496 PUSH2 0xA11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x2F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x2EEB JUMP JUMPDEST PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E4 PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0x2CD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x514 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x2F18 JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x544 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53F SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x2DE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x574 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH2 0xCAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x581 SWAP2 SWAP1 PUSH2 0x2DE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x3001 JUMP JUMPDEST PUSH2 0xCCE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0x308E JUMP JUMPDEST PUSH2 0xDD2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x3130 JUMP JUMPDEST PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x619 SWAP2 SWAP1 PUSH2 0x3251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x63C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x637 SWAP2 SWAP1 PUSH2 0x2F18 JUMP JUMPDEST PUSH2 0x10AB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x64D SWAP1 PUSH2 0x329B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x679 SWAP1 PUSH2 0x329B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6C6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x69B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6C6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6A9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6DB PUSH2 0x1432 JUMP JUMPDEST SWAP1 POP PUSH2 0x6E8 DUP2 DUP6 DUP6 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x708 PUSH2 0x1432 JUMP JUMPDEST SWAP1 POP PUSH2 0x715 DUP6 DUP3 DUP6 PUSH2 0x1605 JUMP JUMPDEST PUSH2 0x720 DUP6 DUP6 DUP6 PUSH2 0x1691 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73F PUSH2 0x1909 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x74F PUSH2 0x1432 JUMP JUMPDEST SWAP1 POP PUSH2 0x770 DUP2 DUP6 DUP6 PUSH2 0x761 DUP6 DUP10 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x76B SWAP2 SWAP1 PUSH2 0x32FC JUMP JUMPDEST PUSH2 0x143A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x339E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x807 PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH2 0x1A23 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x817 PUSH2 0x1B74 JUMP JUMPDEST PUSH2 0x81F PUSH2 0x1BF2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x829 PUSH2 0x1B74 JUMP JUMPDEST PUSH2 0x833 DUP3 DUP3 PUSH2 0x1C55 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x848 PUSH2 0x842 PUSH2 0x1432 JUMP JUMPDEST DUP3 PUSH2 0x1C63 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C5 PUSH2 0x8BF PUSH2 0x1432 JUMP JUMPDEST DUP3 PUSH2 0x1C71 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92C PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x1394 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x983 PUSH2 0x1B74 JUMP JUMPDEST PUSH2 0x98D PUSH1 0x0 PUSH2 0x1D8B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9A1 DUP3 PUSH2 0x99B PUSH2 0x1432 JUMP JUMPDEST DUP4 PUSH2 0x1605 JUMP JUMPDEST PUSH2 0x9AB DUP3 DUP3 PUSH2 0x1C63 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F8 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1E51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA07 PUSH2 0x1B74 JUMP JUMPDEST PUSH2 0xA0F PUSH2 0x1E5F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xA7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA76 SWAP1 PUSH2 0x339E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA8A PUSH1 0xA DUP4 PUSH2 0x1A23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xAA0 SWAP1 PUSH2 0x329B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xACC SWAP1 PUSH2 0x329B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB19 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAEE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB19 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAFC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0xC0B JUMPI PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP3 PUSH2 0xBBF SWAP2 SWAP1 PUSH2 0x33BE JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xBD0 JUMPI PUSH2 0xBCF PUSH2 0x33F2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC3F PUSH2 0x1432 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC4D DUP3 DUP7 PUSH2 0xF14 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xC92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC89 SWAP1 PUSH2 0x3493 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC9F DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x143A JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCB6 PUSH2 0x1432 JUMP JUMPDEST SWAP1 POP PUSH2 0xCC3 DUP2 DUP6 DUP6 PUSH2 0x1691 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xD11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD08 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD73 PUSH2 0xD6B PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD50 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x351F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1EC2 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x1EDC JUMP JUMPDEST SWAP1 POP PUSH2 0xD7E DUP2 PUSH2 0x1F07 JUMP JUMPDEST DUP7 EQ PUSH2 0xDBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB6 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC9 DUP2 DUP9 PUSH2 0x1C71 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xE15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0C SWAP1 PUSH2 0x361C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xE44 DUP13 PUSH2 0x1F07 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE5A SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x363C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xE7D DUP3 PUSH2 0x1EC2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE8D DUP3 DUP8 DUP8 DUP8 PUSH2 0x1EDC JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF4 SWAP1 PUSH2 0x36E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF08 DUP11 DUP11 DUP11 PUSH2 0x143A JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFA3 PUSH2 0x2BFB JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0xFFA JUMPI PUSH2 0xFF9 PUSH2 0x33F2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10B3 PUSH2 0x1B74 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1123 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111A SWAP1 PUSH2 0x377B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x112C DUP2 PUSH2 0x1D8B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1139 DUP3 DUP3 PUSH2 0x11BC JUMP JUMPDEST PUSH2 0x1141 PUSH2 0x1F65 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1167 PUSH2 0x6F3 JUMP JUMPDEST GT ISZERO PUSH2 0x11A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119F SWAP1 PUSH2 0x380D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11B6 PUSH1 0xA PUSH2 0x1313 DUP4 PUSH2 0x1F89 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x122C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1223 SWAP1 PUSH2 0x3879 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1238 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2258 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x124A SWAP2 SWAP1 PUSH2 0x32FC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x12FB SWAP2 SWAP1 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x130F PUSH1 0x0 DUP4 DUP4 PUSH2 0x2270 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1321 SWAP2 SWAP1 PUSH2 0x32FC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x138C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1383 SWAP1 PUSH2 0x390B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x13DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D6 SWAP1 PUSH2 0x399D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x13F7 DUP4 DUP4 DUP4 PUSH2 0x1417 JUMP JUMPDEST PUSH2 0x1412 PUSH2 0x1403 DUP5 PUSH2 0x84B JUMP JUMPDEST PUSH2 0x140C DUP5 PUSH2 0x84B JUMP JUMPDEST DUP4 PUSH2 0x2280 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x142A SWAP2 SWAP1 PUSH2 0x33BE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x14AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A1 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x151A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1511 SWAP1 PUSH2 0x3AC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x15F8 SWAP2 SWAP1 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1611 DUP5 DUP5 PUSH2 0xF14 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x168B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x167D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1674 SWAP1 PUSH2 0x3B2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x168A DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x143A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1701 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F8 SWAP1 PUSH2 0x3BBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1771 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1768 SWAP1 PUSH2 0x3C51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x177C DUP4 DUP4 DUP4 PUSH2 0x2258 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1802 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17F9 SWAP1 PUSH2 0x3CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x18F0 SWAP2 SWAP1 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1903 DUP5 DUP5 DUP5 PUSH2 0x2270 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1985 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x19B2 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1A20 JUMP JUMPDEST PUSH2 0x1A1D PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x2479 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x1A99 JUMPI PUSH1 0x0 PUSH2 0x1A47 DUP5 PUSH2 0x24B3 JUMP JUMPDEST DUP5 PUSH2 0x1A52 SWAP2 SWAP1 PUSH2 0x33BE JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x1A5F DUP9 DUP4 PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1A87 JUMPI DUP1 SWAP2 POP PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1A94 SWAP2 SWAP1 PUSH2 0x32FC JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1AF9 JUMPI PUSH1 0x0 PUSH2 0x1AAE DUP4 DUP4 PUSH2 0x25C2 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x1ABB DUP9 DUP4 PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1AE3 JUMPI DUP1 SWAP2 POP PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1AF0 SWAP2 SWAP1 PUSH2 0x32FC JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x1A9A JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x1B48 JUMPI PUSH2 0x1B17 DUP7 PUSH1 0x1 DUP4 PUSH2 0x1B12 SWAP2 SWAP1 PUSH2 0x33BE JUMP JUMPDEST PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B7C PUSH2 0x1432 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B9A PUSH2 0xA11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BE7 SWAP1 PUSH2 0x3D4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1BFA PUSH2 0x25E8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1C3E PUSH2 0x1432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4B SWAP2 SWAP1 PUSH2 0x2F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1C5F DUP3 DUP3 PUSH2 0x112F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1C6D DUP3 DUP3 PUSH2 0x2631 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7C DUP4 PUSH2 0x84B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C89 DUP5 PUSH2 0x933 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1D85 DUP3 DUP5 DUP4 PUSH2 0x2280 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E67 PUSH2 0x264F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1EAB PUSH2 0x1432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB8 SWAP2 SWAP1 PUSH2 0x2F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED5 PUSH2 0x1ECF PUSH2 0x1909 JUMP JUMPDEST DUP4 PUSH2 0x2699 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1EED DUP8 DUP8 DUP8 DUP8 PUSH2 0x26CC JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1EFA DUP2 PUSH2 0x27AF JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1F54 DUP2 PUSH2 0x1E51 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F5F DUP2 PUSH2 0x291D JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 EQ PUSH2 0x2058 JUMPI PUSH2 0x1FB4 DUP8 PUSH1 0x1 DUP5 PUSH2 0x1FAF SWAP2 SWAP1 PUSH2 0x33BE JUMP JUMPDEST PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x2094 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH2 0x20C9 DUP5 DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x20E4 JUMPI POP NUMBER DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x215E JUMPI PUSH2 0x20F2 DUP4 PUSH2 0x1329 JUMP JUMPDEST PUSH2 0x2108 DUP9 PUSH1 0x1 DUP6 PUSH2 0x2103 SWAP2 SWAP1 PUSH2 0x33BE JUMP JUMPDEST PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x224E JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2173 NUMBER PUSH2 0x1394 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2187 DUP7 PUSH2 0x1329 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2260 PUSH2 0x264F JUMP JUMPDEST PUSH2 0x226B DUP4 DUP4 DUP4 PUSH2 0x13E7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x227B DUP4 DUP4 DUP4 PUSH2 0x13EC JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x22BC JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x2474 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x239A JUMPI PUSH1 0x0 DUP1 PUSH2 0x2343 PUSH1 0x9 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x141C DUP6 PUSH2 0x1F89 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x238F SWAP3 SWAP2 SWAP1 PUSH2 0x3D6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2473 JUMPI PUSH1 0x0 DUP1 PUSH2 0x241C PUSH1 0x9 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1313 DUP6 PUSH2 0x1F89 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2468 SWAP3 SWAP2 SWAP1 PUSH2 0x3D6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2494 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ ISZERO PUSH2 0x24C6 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x25A8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x24D3 DUP5 PUSH2 0x2933 JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x24ED JUMPI PUSH2 0x24EC PUSH2 0x3DEB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2506 JUMPI PUSH2 0x2505 PUSH2 0x3DEB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x251F JUMPI PUSH2 0x251E PUSH2 0x3DEB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2538 JUMPI PUSH2 0x2537 PUSH2 0x3DEB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2551 JUMPI PUSH2 0x2550 PUSH2 0x3DEB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x256A JUMPI PUSH2 0x2569 PUSH2 0x3DEB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2583 JUMPI PUSH2 0x2582 PUSH2 0x3DEB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x25A4 DUP2 DUP3 DUP6 DUP2 PUSH2 0x259E JUMPI PUSH2 0x259D PUSH2 0x3DEB JUMP JUMPDEST JUMPDEST DIV PUSH2 0x2A14 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x25D3 SWAP2 SWAP1 PUSH2 0x3E1A JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x25E0 SWAP2 SWAP1 PUSH2 0x32FC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25F0 PUSH2 0x8C8 JUMP JUMPDEST PUSH2 0x262F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2626 SWAP1 PUSH2 0x3E97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x263B DUP3 DUP3 PUSH2 0x2A2D JUMP JUMPDEST PUSH2 0x2649 PUSH1 0xA PUSH2 0x141C DUP4 PUSH2 0x1F89 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2657 PUSH2 0x8C8 JUMP JUMPDEST ISZERO PUSH2 0x2697 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268E SWAP1 PUSH2 0x3F03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x26AE SWAP3 SWAP2 SWAP1 PUSH2 0x3F9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x2707 JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x27A6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x272C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3FD2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x274E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x279D JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x27A6 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x27C3 JUMPI PUSH2 0x27C2 PUSH2 0x4017 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x27D6 JUMPI PUSH2 0x27D5 PUSH2 0x4017 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x27E1 JUMPI PUSH2 0x291A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x27F5 JUMPI PUSH2 0x27F4 PUSH2 0x4017 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2808 JUMPI PUSH2 0x2807 PUSH2 0x4017 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2849 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2840 SWAP1 PUSH2 0x4092 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x285D JUMPI PUSH2 0x285C PUSH2 0x4017 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2870 JUMPI PUSH2 0x286F PUSH2 0x4017 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x28B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28A8 SWAP1 PUSH2 0x40FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x28C5 JUMPI PUSH2 0x28C4 PUSH2 0x4017 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x28D8 JUMPI PUSH2 0x28D7 PUSH2 0x4017 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2919 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2910 SWAP1 PUSH2 0x4190 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2955 JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x80 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2970 JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x298B JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x29A6 JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x29C1 JUMPI PUSH1 0x8 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x29DC JUMPI PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x29F7 JUMPI PUSH1 0x2 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2A0B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2A23 JUMPI DUP2 PUSH2 0x2A25 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2A9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A94 SWAP1 PUSH2 0x4222 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2AA9 DUP3 PUSH1 0x0 DUP4 PUSH2 0x2258 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2B2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B26 SWAP1 PUSH2 0x42B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2BE2 SWAP2 SWAP1 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x2BF6 DUP4 PUSH1 0x0 DUP5 PUSH2 0x2270 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C73 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C58 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2C82 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CA4 DUP3 PUSH2 0x2C39 JUMP JUMPDEST PUSH2 0x2CAE DUP2 DUP6 PUSH2 0x2C44 JUMP JUMPDEST SWAP4 POP PUSH2 0x2CBE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2C55 JUMP JUMPDEST PUSH2 0x2CC7 DUP2 PUSH2 0x2C88 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CEC DUP2 DUP5 PUSH2 0x2C99 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D24 DUP3 PUSH2 0x2CF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D34 DUP2 PUSH2 0x2D19 JUMP JUMPDEST DUP2 EQ PUSH2 0x2D3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D51 DUP2 PUSH2 0x2D2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D6A DUP2 PUSH2 0x2D57 JUMP JUMPDEST DUP2 EQ PUSH2 0x2D75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D87 DUP2 PUSH2 0x2D61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DA4 JUMPI PUSH2 0x2DA3 PUSH2 0x2CF4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DB2 DUP6 DUP3 DUP7 ADD PUSH2 0x2D42 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DC3 DUP6 DUP3 DUP7 ADD PUSH2 0x2D78 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DE2 DUP2 PUSH2 0x2DCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DFD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2DD9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E0C DUP2 PUSH2 0x2D57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E27 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2E46 JUMPI PUSH2 0x2E45 PUSH2 0x2CF4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E54 DUP7 DUP3 DUP8 ADD PUSH2 0x2D42 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2E65 DUP7 DUP3 DUP8 ADD PUSH2 0x2D42 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2E76 DUP7 DUP3 DUP8 ADD PUSH2 0x2D78 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E96 DUP2 PUSH2 0x2E80 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EB1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2ECA DUP2 PUSH2 0x2EB7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EE5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2EC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F01 JUMPI PUSH2 0x2F00 PUSH2 0x2CF4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F0F DUP5 DUP3 DUP6 ADD PUSH2 0x2D78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F2E JUMPI PUSH2 0x2F2D PUSH2 0x2CF4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F3C DUP5 DUP3 DUP6 ADD PUSH2 0x2D42 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F4E DUP2 PUSH2 0x2D19 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F69 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F88 DUP2 PUSH2 0x2F6F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FA3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2FB2 DUP2 PUSH2 0x2E80 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FCF DUP2 PUSH2 0x2FA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2FDE DUP2 PUSH2 0x2EB7 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FFB DUP2 PUSH2 0x2FD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x301E JUMPI PUSH2 0x301D PUSH2 0x2CF4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x302C DUP10 DUP3 DUP11 ADD PUSH2 0x2D42 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x303D DUP10 DUP3 DUP11 ADD PUSH2 0x2D78 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x304E DUP10 DUP3 DUP11 ADD PUSH2 0x2D78 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x305F DUP10 DUP3 DUP11 ADD PUSH2 0x2FC0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x3070 DUP10 DUP3 DUP11 ADD PUSH2 0x2FEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x3081 DUP10 DUP3 DUP11 ADD PUSH2 0x2FEC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x30AD JUMPI PUSH2 0x30AC PUSH2 0x2CF4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x30BB DUP11 DUP3 DUP12 ADD PUSH2 0x2D42 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x30CC DUP11 DUP3 DUP12 ADD PUSH2 0x2D42 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x30DD DUP11 DUP3 DUP12 ADD PUSH2 0x2D78 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x30EE DUP11 DUP3 DUP12 ADD PUSH2 0x2D78 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x30FF DUP11 DUP3 DUP12 ADD PUSH2 0x2FC0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x3110 DUP11 DUP3 DUP12 ADD PUSH2 0x2FEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x3121 DUP11 DUP3 DUP12 ADD PUSH2 0x2FEC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3147 JUMPI PUSH2 0x3146 PUSH2 0x2CF4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3155 DUP6 DUP3 DUP7 ADD PUSH2 0x2D42 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3166 DUP6 DUP3 DUP7 ADD PUSH2 0x2D42 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3179 DUP2 PUSH2 0x2F6F JUMP JUMPDEST DUP2 EQ PUSH2 0x3184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3196 DUP2 PUSH2 0x3170 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x31B3 JUMPI PUSH2 0x31B2 PUSH2 0x2CF4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31C1 DUP6 DUP3 DUP7 ADD PUSH2 0x2D42 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x31D2 DUP6 DUP3 DUP7 ADD PUSH2 0x3187 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x31E5 DUP2 PUSH2 0x2F6F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x321C DUP2 PUSH2 0x31EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3238 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x31DC JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x324B PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3213 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3266 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3222 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x32B3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x32C7 JUMPI PUSH2 0x32C6 PUSH2 0x326C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3307 DUP3 PUSH2 0x2D57 JUMP JUMPDEST SWAP2 POP PUSH2 0x3312 DUP4 PUSH2 0x2D57 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3347 JUMPI PUSH2 0x3346 PUSH2 0x32CD JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20626C6F636B206E6F7420796574206D696E656400 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3388 PUSH1 0x1F DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3393 DUP3 PUSH2 0x3352 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33B7 DUP2 PUSH2 0x337B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33C9 DUP3 PUSH2 0x2D57 JUMP JUMPDEST SWAP2 POP PUSH2 0x33D4 DUP4 PUSH2 0x2D57 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x33E7 JUMPI PUSH2 0x33E6 PUSH2 0x32CD JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x347D PUSH1 0x25 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3488 DUP3 PUSH2 0x3421 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34AC DUP2 PUSH2 0x3470 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E9 PUSH1 0x1D DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x34F4 DUP3 PUSH2 0x34B3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3518 DUP2 PUSH2 0x34DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3534 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2EC1 JUMP JUMPDEST PUSH2 0x3541 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2F45 JUMP JUMPDEST PUSH2 0x354E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2E03 JUMP JUMPDEST PUSH2 0x355B PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2E03 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x359A PUSH1 0x19 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x35A5 DUP3 PUSH2 0x3564 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35C9 DUP2 PUSH2 0x358D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3606 PUSH1 0x1D DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3611 DUP3 PUSH2 0x35D0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3635 DUP2 PUSH2 0x35F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x3651 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2EC1 JUMP JUMPDEST PUSH2 0x365E PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x2F45 JUMP JUMPDEST PUSH2 0x366B PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x2F45 JUMP JUMPDEST PUSH2 0x3678 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2E03 JUMP JUMPDEST PUSH2 0x3685 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2E03 JUMP JUMPDEST PUSH2 0x3692 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2E03 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36D3 PUSH1 0x1E DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x36DE DUP3 PUSH2 0x369D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3702 DUP2 PUSH2 0x36C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3765 PUSH1 0x26 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3770 DUP3 PUSH2 0x3709 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3794 DUP2 PUSH2 0x3758 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x766572666C6F77696E6720766F74657300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F7 PUSH1 0x30 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3802 DUP3 PUSH2 0x379B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3826 DUP2 PUSH2 0x37EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3863 PUSH1 0x1F DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x386E DUP3 PUSH2 0x382D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3892 DUP2 PUSH2 0x3856 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38F5 PUSH1 0x27 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3900 DUP3 PUSH2 0x3899 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3924 DUP2 PUSH2 0x38E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3987 PUSH1 0x26 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3992 DUP3 PUSH2 0x392B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x39B6 DUP2 PUSH2 0x397A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A19 PUSH1 0x24 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A24 DUP3 PUSH2 0x39BD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A48 DUP2 PUSH2 0x3A0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AAB PUSH1 0x22 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AB6 DUP3 PUSH2 0x3A4F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3ADA DUP2 PUSH2 0x3A9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B17 PUSH1 0x1D DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B22 DUP3 PUSH2 0x3AE1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B46 DUP2 PUSH2 0x3B0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BA9 PUSH1 0x25 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BB4 DUP3 PUSH2 0x3B4D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BD8 DUP2 PUSH2 0x3B9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C3B PUSH1 0x23 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C46 DUP3 PUSH2 0x3BDF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C6A DUP2 PUSH2 0x3C2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CCD PUSH1 0x26 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CD8 DUP3 PUSH2 0x3C71 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CFC DUP2 PUSH2 0x3CC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D39 PUSH1 0x20 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D44 DUP3 PUSH2 0x3D03 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D68 DUP2 PUSH2 0x3D2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D84 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2E03 JUMP JUMPDEST PUSH2 0x3D91 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E03 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3DAD PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2EC1 JUMP JUMPDEST PUSH2 0x3DBA PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2EC1 JUMP JUMPDEST PUSH2 0x3DC7 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2EC1 JUMP JUMPDEST PUSH2 0x3DD4 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2E03 JUMP JUMPDEST PUSH2 0x3DE1 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2F45 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E25 DUP3 PUSH2 0x2D57 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E30 DUP4 PUSH2 0x2D57 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3E40 JUMPI PUSH2 0x3E3F PUSH2 0x3DEB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E81 PUSH1 0x14 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E8C DUP3 PUSH2 0x3E4B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EB0 DUP2 PUSH2 0x3E74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EED PUSH1 0x10 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EF8 DUP3 PUSH2 0x3EB7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F1C DUP2 PUSH2 0x3EE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F64 PUSH1 0x2 DUP4 PUSH2 0x3F23 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F6F DUP3 PUSH2 0x3F2E JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F95 PUSH2 0x3F90 DUP3 PUSH2 0x2EB7 JUMP JUMPDEST PUSH2 0x3F7A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FA6 DUP3 PUSH2 0x3F57 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FB2 DUP3 DUP6 PUSH2 0x3F84 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x3FC2 DUP3 DUP5 PUSH2 0x3F84 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3FE7 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2EC1 JUMP JUMPDEST PUSH2 0x3FF4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2E8D JUMP JUMPDEST PUSH2 0x4001 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2EC1 JUMP JUMPDEST PUSH2 0x400E PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2EC1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x407C PUSH1 0x18 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x4087 DUP3 PUSH2 0x4046 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x40AB DUP2 PUSH2 0x406F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40E8 PUSH1 0x1F DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x40F3 DUP3 PUSH2 0x40B2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4117 DUP2 PUSH2 0x40DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x417A PUSH1 0x22 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x4185 DUP3 PUSH2 0x411E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x41A9 DUP2 PUSH2 0x416D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x420C PUSH1 0x21 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x4217 DUP3 PUSH2 0x41B0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x423B DUP2 PUSH2 0x41FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x429E PUSH1 0x22 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x42A9 DUP3 PUSH2 0x4242 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x42CD DUP2 PUSH2 0x4291 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x85C53E20303FAD35952FF3E2F713FA5A90E0A8FDADB48F 0xAD DUP16 ORIGIN CREATE 0xED PUSH18 0x91DD64736F6C634300080900330000000000 ","sourceMap":"459:1265:26:-:0;;;552:130;;;;;;;;;;1829:52:8;;;;;;;;;;;;;;;;;1868:4;2464:602:20;;;;;;;;;;;;;;;;;1976:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2050:5;2042;:13;;;;;;;;;;;;:::i;:::-;;2075:7;2065;:17;;;;;;;;;;;;:::i;:::-;;1976:113;;1006:5:2;996:7;;:15;;;;;;;;;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;2529:18:20;2566:4;2550:22;;;;;;2529:43;;2582:21;2622:7;2606:25;;;;;;2582:49;;2641:16;2660:117;2641:136;;2802:10;2787:25;;;;;;2840:13;2822:31;;;;;;2882:13;2863:32;;;;;;2932:58;2954:8;2964:10;2976:13;2932:21;;;:58;;:::i;:::-;2905:85;;;;;;3023:4;3000:28;;;;;;;;;;3051:8;3038:21;;;;;;2519:547;;;2464:602;;1829:52:8;626:48:26::2;632:10;663;:8;;;:10;;:::i;:::-;657:2;:16;;;;:::i;:::-;644:10;:29;;;;:::i;:::-;626:5;;;:48;;:::i;:::-;459:1265:::0;;640:96:16;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;3466:257:20:-;3606:7;3653:8;3663;3673:11;3686:13;3709:4;3642:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3632:84;;;;;;3625:91;;3466:257;;;;;:::o;3091:91:3:-;3149:5;3173:2;3166:9;;3091:91;:::o;1413:145:26:-;1527:23;1539:2;1543:6;1527:11;;;;;:23;;:::i;:::-;1413:145;;:::o;6705:285:6:-;6789:28;6801:7;6810:6;6789:11;;;;;:28;;:::i;:::-;6852:12;:10;;;:12;;:::i;:::-;6835:29;;:13;:11;;;:13;;:::i;:::-;:29;;6827:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;6928:55;6945:23;6970:4;;;;;6976:6;6928:16;;;:55;;:::i;:::-;;;6705:285;;:::o;8567:535:3:-;8669:1;8650:21;;:7;:21;;;;8642:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8718:49;8747:1;8751:7;8760:6;8718:20;;;:49;;:::i;:::-;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;;;;;8968:6;8946:9;:18;8956:7;8946:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;9020:7;8999:37;;9016:1;8999:37;;;9029:6;8999:37;;;;;;:::i;:::-;;;;;;;;9047:48;9075:1;9079:7;9088:6;9047:19;;;:48;;:::i;:::-;8567:535;;:::o;6513:103:6:-;6566:7;6592:17;6585:24;;6513:103;:::o;3242:106:3:-;3303:7;3329:12;;3322:19;;3242:106;:::o;9575:96:6:-;9633:7;9663:1;9659;:5;;;;:::i;:::-;9652:12;;9575:96;;;;:::o;8853:716::-;9023:17;9042;9071:11;9085:5;:12;;;;9071:26;;9108:25;9143:1;9136:3;:8;:59;;9166:29;9180:5;9193:1;9187:3;:7;;;;:::i;:::-;9166:13;;;:29;;:::i;:::-;9136:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9147:16;;;;;;;;9158:1;9147:16;;;;;;9161:1;9147:16;;;;;9136:59;9108:87;;9218:7;:13;;;9206:25;;;;9253:20;9256:9;9267:5;9253:2;:20;;:::i;:::-;9241:32;;9294:1;9288:3;:7;:44;;;;;9320:12;9299:7;:17;;;:33;;;9288:44;9284:279;;;9386:29;9405:9;9386:18;;;;;:29;;:::i;:::-;9348;9362:5;9375:1;9369:3;:7;;;;:::i;:::-;9348:13;;;:29;;:::i;:::-;:35;;;:67;;;;;;;;;;;;;;;;;;9284:279;;;9446:5;9457:94;;;;;;;;9480:31;9498:12;9480:17;;;;;:31;;:::i;:::-;9457:94;;;;;;9520:29;9539:9;9520:18;;;;;:29;;:::i;:::-;9457:94;;;;;9446:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9284:279;9061:508;;8853:716;;;;;;:::o;935:199:26:-;1239:19:2;:17;;;:19;;:::i;:::-;1082:44:26::1;1109:4;1115:2;1119:6;1082:26;;;;;:44;;:::i;:::-;935:199:::0;;;:::o;1212:193::-;1354:43;1380:4;1386:2;1390:6;1354:25;;;;;:43;;:::i;:::-;1212:193;;;:::o;9784:239:6:-;9870:25;9940:10;9937:1;9930:21;10003:3;9996:4;9993:1;9983:18;9979:28;9964:43;;9784:239;;;;:::o;2836:192:24:-;2893:7;2929:17;2920:26;;:5;:26;;2912:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3015:5;3000:21;;2836:192;;;:::o;15264:187::-;15320:6;15355:16;15346:25;;:5;:25;;15338:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;15438:5;15424:20;;15264:187;;;:::o;1767:106:2:-;1837:8;:6;;;:8;;:::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;12180:121:3:-;;;;:::o;7409:254:6:-;7546:43;7572:4;7578:2;7582:6;7546:25;;;;;:43;;:::i;:::-;7600:56;7617:15;7627:4;7617:9;;;:15;;:::i;:::-;7634:13;7644:2;7634:9;;;:13;;:::i;:::-;7649:6;7600:16;;;:56;;:::i;:::-;7409:254;;;:::o;1615:84:2:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;12889:120:3:-;;;;:::o;2218:126:6:-;2292:7;2318:10;:19;2329:7;2318:19;;;;;;;;;;;;;;;;;;;;;;;;;2311:26;;2218:126;;;:::o;8220:627::-;8347:3;8340:10;;:3;:10;;;;:24;;;;;8363:1;8354:6;:10;8340:24;8336:505;;;8399:1;8384:17;;:3;:17;;;8380:221;;8422:17;8441;8462:54;8479:12;:17;8492:3;8479:17;;;;;;;;;;;;;;;8498:9;;;;;8509:6;8462:16;;;:54;;:::i;:::-;8421:95;;;;8560:3;8539:47;;;8565:9;8576;8539:47;;;;;;;:::i;:::-;;;;;;;;8403:198;;8380:221;8634:1;8619:17;;:3;:17;;;8615:216;;8657:17;8676;8697:49;8714:12;:17;8727:3;8714:17;;;;;;;;;;;;;;;8733:4;;;;;8739:6;8697:16;;;:49;;:::i;:::-;8656:90;;;;8790:3;8769:47;;;8795:9;8806;8769:47;;;;;;;:::i;:::-;;;;;;;;8638:193;;8615:216;8336:505;8220:627;;;:::o;9677:101::-;9740:7;9770:1;9766;:5;;;;:::i;:::-;9759:12;;9677:101;;;;:::o;459:1265:26:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:180:27:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:102;235:8;282:5;279:1;275:13;254:34;;193:102;;;:::o;301:848::-;362:5;369:4;393:6;384:15;;417:5;408:14;;431:712;452:1;442:8;439:15;431:712;;;547:4;542:3;538:14;532:4;529:24;526:50;;;556:18;;:::i;:::-;526:50;606:1;596:8;592:16;589:451;;;1021:4;1014:5;1010:16;1001:25;;589:451;1071:4;1065;1061:15;1053:23;;1101:32;1124:8;1101:32;:::i;:::-;1089:44;;431:712;;;301:848;;;;;;;:::o;1155:1073::-;1209:5;1400:8;1390:40;;1421:1;1412:10;;1423:5;;1390:40;1449:4;1439:36;;1466:1;1457:10;;1468:5;;1439:36;1535:4;1583:1;1578:27;;;;1619:1;1614:191;;;;1528:277;;1578:27;1596:1;1587:10;;1598:5;;;1614:191;1659:3;1649:8;1646:17;1643:43;;;1666:18;;:::i;:::-;1643:43;1715:8;1712:1;1708:16;1699:25;;1750:3;1743:5;1740:14;1737:40;;;1757:18;;:::i;:::-;1737:40;1790:5;;;1528:277;;1914:2;1904:8;1901:16;1895:3;1889:4;1886:13;1882:36;1864:2;1854:8;1851:16;1846:2;1840:4;1837:12;1833:35;1817:111;1814:246;;;1970:8;1964:4;1960:19;1951:28;;2005:3;1998:5;1995:14;1992:40;;;2012:18;;:::i;:::-;1992:40;2045:5;;1814:246;2085:42;2123:3;2113:8;2107:4;2104:1;2085:42;:::i;:::-;2070:57;;;;2159:4;2154:3;2150:14;2143:5;2140:25;2137:51;;;2168:18;;:::i;:::-;2137:51;2217:4;2210:5;2206:16;2197:25;;1155:1073;;;;;;:::o;2234:77::-;2271:7;2300:5;2289:16;;2234:77;;;:::o;2317:86::-;2352:7;2392:4;2385:5;2381:16;2370:27;;2317:86;;;:::o;2409:281::-;2467:5;2491:23;2509:4;2491:23;:::i;:::-;2483:31;;2535:25;2551:8;2535:25;:::i;:::-;2523:37;;2579:104;2616:66;2606:8;2600:4;2579:104;:::i;:::-;2570:113;;2409:281;;;;:::o;2696:348::-;2736:7;2759:20;2777:1;2759:20;:::i;:::-;2754:25;;2793:20;2811:1;2793:20;:::i;:::-;2788:25;;2981:1;2913:66;2909:74;2906:1;2903:81;2898:1;2891:9;2884:17;2880:105;2877:131;;;2988:18;;:::i;:::-;2877:131;3036:1;3033;3029:9;3018:20;;2696:348;;;;:::o;3050:77::-;3087:7;3116:5;3105:16;;3050:77;;;:::o;3133:118::-;3220:24;3238:5;3220:24;:::i;:::-;3215:3;3208:37;3133:118;;:::o;3257:::-;3344:24;3362:5;3344:24;:::i;:::-;3339:3;3332:37;3257:118;;:::o;3381:126::-;3418:7;3458:42;3451:5;3447:54;3436:65;;3381:126;;;:::o;3513:96::-;3550:7;3579:24;3597:5;3579:24;:::i;:::-;3568:35;;3513:96;;;:::o;3615:118::-;3702:24;3720:5;3702:24;:::i;:::-;3697:3;3690:37;3615:118;;:::o;3739:664::-;3944:4;3982:3;3971:9;3967:19;3959:27;;3996:71;4064:1;4053:9;4049:17;4040:6;3996:71;:::i;:::-;4077:72;4145:2;4134:9;4130:18;4121:6;4077:72;:::i;:::-;4159;4227:2;4216:9;4212:18;4203:6;4159:72;:::i;:::-;4241;4309:2;4298:9;4294:18;4285:6;4241:72;:::i;:::-;4323:73;4391:3;4380:9;4376:19;4367:6;4323:73;:::i;:::-;3739:664;;;;;;;;:::o;4409:169::-;4493:11;4527:6;4522:3;4515:19;4567:4;4562:3;4558:14;4543:29;;4409:169;;;;:::o;4584:235::-;4724:34;4720:1;4712:6;4708:14;4701:58;4793:18;4788:2;4780:6;4776:15;4769:43;4584:235;:::o;4825:366::-;4967:3;4988:67;5052:2;5047:3;4988:67;:::i;:::-;4981:74;;5064:93;5153:3;5064:93;:::i;:::-;5182:2;5177:3;5173:12;5166:19;;4825:366;;;:::o;5197:419::-;5363:4;5401:2;5390:9;5386:18;5378:26;;5450:9;5444:4;5440:20;5436:1;5425:9;5421:17;5414:47;5478:131;5604:4;5478:131;:::i;:::-;5470:139;;5197:419;;;:::o;5622:181::-;5762:33;5758:1;5750:6;5746:14;5739:57;5622:181;:::o;5809:366::-;5951:3;5972:67;6036:2;6031:3;5972:67;:::i;:::-;5965:74;;6048:93;6137:3;6048:93;:::i;:::-;6166:2;6161:3;6157:12;6150:19;;5809:366;;;:::o;6181:419::-;6347:4;6385:2;6374:9;6370:18;6362:26;;6434:9;6428:4;6424:20;6420:1;6409:9;6405:17;6398:47;6462:131;6588:4;6462:131;:::i;:::-;6454:139;;6181:419;;;:::o;6606:305::-;6646:3;6665:20;6683:1;6665:20;:::i;:::-;6660:25;;6699:20;6717:1;6699:20;:::i;:::-;6694:25;;6853:1;6785:66;6781:74;6778:1;6775:81;6772:107;;;6859:18;;:::i;:::-;6772:107;6903:1;6900;6896:9;6889:16;;6606:305;;;;:::o;6917:222::-;7010:4;7048:2;7037:9;7033:18;7025:26;;7061:71;7129:1;7118:9;7114:17;7105:6;7061:71;:::i;:::-;6917:222;;;;:::o;7145:191::-;7185:4;7205:20;7223:1;7205:20;:::i;:::-;7200:25;;7239:20;7257:1;7239:20;:::i;:::-;7234:25;;7278:1;7275;7272:8;7269:34;;;7283:18;;:::i;:::-;7269:34;7328:1;7325;7321:9;7313:17;;7145:191;;;;:::o;7342:226::-;7482:34;7478:1;7470:6;7466:14;7459:58;7551:9;7546:2;7538:6;7534:15;7527:34;7342:226;:::o;7574:366::-;7716:3;7737:67;7801:2;7796:3;7737:67;:::i;:::-;7730:74;;7813:93;7902:3;7813:93;:::i;:::-;7931:2;7926:3;7922:12;7915:19;;7574:366;;;:::o;7946:419::-;8112:4;8150:2;8139:9;8135:18;8127:26;;8199:9;8193:4;8189:20;8185:1;8174:9;8170:17;8163:47;8227:131;8353:4;8227:131;:::i;:::-;8219:139;;7946:419;;;:::o;8371:225::-;8511:34;8507:1;8499:6;8495:14;8488:58;8580:8;8575:2;8567:6;8563:15;8556:33;8371:225;:::o;8602:366::-;8744:3;8765:67;8829:2;8824:3;8765:67;:::i;:::-;8758:74;;8841:93;8930:3;8841:93;:::i;:::-;8959:2;8954:3;8950:12;8943:19;;8602:366;;;:::o;8974:419::-;9140:4;9178:2;9167:9;9163:18;9155:26;;9227:9;9221:4;9217:20;9213:1;9202:9;9198:17;9191:47;9255:131;9381:4;9255:131;:::i;:::-;9247:139;;8974:419;;;:::o;9399:166::-;9539:18;9535:1;9527:6;9523:14;9516:42;9399:166;:::o;9571:366::-;9713:3;9734:67;9798:2;9793:3;9734:67;:::i;:::-;9727:74;;9810:93;9899:3;9810:93;:::i;:::-;9928:2;9923:3;9919:12;9912:19;;9571:366;;;:::o;9943:419::-;10109:4;10147:2;10136:9;10132:18;10124:26;;10196:9;10190:4;10186:20;10182:1;10171:9;10167:17;10160:47;10224:131;10350:4;10224:131;:::i;:::-;10216:139;;9943:419;;;:::o;10368:332::-;10489:4;10527:2;10516:9;10512:18;10504:26;;10540:71;10608:1;10597:9;10593:17;10584:6;10540:71;:::i;:::-;10621:72;10689:2;10678:9;10674:18;10665:6;10621:72;:::i;:::-;10368:332;;;;;:::o;10706:180::-;10754:77;10751:1;10744:88;10851:4;10848:1;10841:15;10875:4;10872:1;10865:15;10892:320;10936:6;10973:1;10967:4;10963:12;10953:22;;11020:1;11014:4;11010:12;11041:18;11031:81;;11097:4;11089:6;11085:17;11075:27;;11031:81;11159:2;11151:6;11148:14;11128:18;11125:38;11122:84;;;11178:18;;:::i;:::-;11122:84;10943:269;10892:320;;;:::o;459:1265:26:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_1871":{"entryPoint":1845,"id":1871,"parameterSlots":0,"returnSlots":1},"@_add_1675":{"entryPoint":4883,"id":1675,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_1451":{"entryPoint":5100,"id":1451,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_6904":{"entryPoint":8816,"id":6904,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_884":{"entryPoint":5143,"id":884,"parameterSlots":3,"returnSlots":0},"@_approve_819":{"entryPoint":5178,"id":819,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_6883":{"entryPoint":8792,"id":6883,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_873":{"entryPoint":5095,"id":873,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_4267":{"entryPoint":9337,"id":4267,"parameterSlots":3,"returnSlots":1},"@_burn_1421":{"entryPoint":9777,"id":1421,"parameterSlots":2,"returnSlots":0},"@_burn_6940":{"entryPoint":7267,"id":6940,"parameterSlots":2,"returnSlots":0},"@_burn_774":{"entryPoint":10797,"id":774,"parameterSlots":2,"returnSlots":0},"@_checkOwner_54":{"entryPoint":7028,"id":54,"parameterSlots":0,"returnSlots":0},"@_checkpointsLookup_1279":{"entryPoint":6691,"id":1279,"parameterSlots":2,"returnSlots":1},"@_delegate_1490":{"entryPoint":7281,"id":1490,"parameterSlots":2,"returnSlots":0},"@_domainSeparatorV4_4240":{"entryPoint":6409,"id":4240,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_4283":{"entryPoint":7874,"id":4283,"parameterSlots":1,"returnSlots":1},"@_maxSupply_1366":{"entryPoint":8037,"id":1366,"parameterSlots":0,"returnSlots":1},"@_mint_1398":{"entryPoint":4399,"id":1398,"parameterSlots":2,"returnSlots":0},"@_mint_6922":{"entryPoint":7253,"id":6922,"parameterSlots":2,"returnSlots":0},"@_mint_702":{"entryPoint":4540,"id":702,"parameterSlots":2,"returnSlots":0},"@_moveVotingPower_1561":{"entryPoint":8832,"id":1561,"parameterSlots":3,"returnSlots":0},"@_msgSender_3510":{"entryPoint":5170,"id":3510,"parameterSlots":0,"returnSlots":1},"@_pause_281":{"entryPoint":7775,"id":281,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_254":{"entryPoint":9807,"id":254,"parameterSlots":0,"returnSlots":0},"@_requirePaused_265":{"entryPoint":9704,"id":265,"parameterSlots":0,"returnSlots":0},"@_spendAllowance_862":{"entryPoint":5637,"id":862,"parameterSlots":3,"returnSlots":0},"@_subtract_1689":{"entryPoint":5148,"id":1689,"parameterSlots":2,"returnSlots":1},"@_throwError_3823":{"entryPoint":10159,"id":3823,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":7563,"id":111,"parameterSlots":1,"returnSlots":0},"@_transfer_645":{"entryPoint":5777,"id":645,"parameterSlots":3,"returnSlots":0},"@_unpause_297":{"entryPoint":7154,"id":297,"parameterSlots":0,"returnSlots":0},"@_unsafeAccess_1703":{"entryPoint":9645,"id":1703,"parameterSlots":2,"returnSlots":1},"@_useNonce_1900":{"entryPoint":7943,"id":1900,"parameterSlots":1,"returnSlots":1},"@_writeCheckpoint_1661":{"entryPoint":8073,"id":1661,"parameterSlots":3,"returnSlots":2},"@allowance_440":{"entryPoint":3860,"id":440,"parameterSlots":2,"returnSlots":1},"@approve_465":{"entryPoint":1744,"id":465,"parameterSlots":2,"returnSlots":1},"@average_4386":{"entryPoint":9666,"id":4386,"parameterSlots":2,"returnSlots":1},"@balanceOf_397":{"entryPoint":2355,"id":397,"parameterSlots":1,"returnSlots":1},"@burnFrom_1006":{"entryPoint":2447,"id":1006,"parameterSlots":2,"returnSlots":0},"@burn_985":{"entryPoint":2103,"id":985,"parameterSlots":1,"returnSlots":0},"@checkpoints_1061":{"entryPoint":3995,"id":1061,"parameterSlots":2,"returnSlots":1},"@current_3538":{"entryPoint":7761,"id":3538,"parameterSlots":1,"returnSlots":1},"@decimals_373":{"entryPoint":1836,"id":373,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_568":{"entryPoint":3124,"id":568,"parameterSlots":2,"returnSlots":1},"@delegateBySig_1353":{"entryPoint":3278,"id":1353,"parameterSlots":6,"returnSlots":0},"@delegate_1293":{"entryPoint":2228,"id":1293,"parameterSlots":1,"returnSlots":0},"@delegates_1092":{"entryPoint":2123,"id":1092,"parameterSlots":1,"returnSlots":1},"@getPastTotalSupply_1173":{"entryPoint":2619,"id":1173,"parameterSlots":1,"returnSlots":1},"@getPastVotes_1150":{"entryPoint":1915,"id":1150,"parameterSlots":2,"returnSlots":1},"@getVotes_1123":{"entryPoint":2851,"id":1123,"parameterSlots":1,"returnSlots":1},"@increaseAllowance_527":{"entryPoint":1860,"id":527,"parameterSlots":2,"returnSlots":1},"@increment_3552":{"entryPoint":10525,"id":3552,"parameterSlots":1,"returnSlots":0},"@log2_4857":{"entryPoint":10547,"id":4857,"parameterSlots":1,"returnSlots":1},"@min_4363":{"entryPoint":10772,"id":4363,"parameterSlots":2,"returnSlots":1},"@mint_6862":{"entryPoint":2081,"id":6862,"parameterSlots":2,"returnSlots":0},"@name_353":{"entryPoint":1598,"id":353,"parameterSlots":0,"returnSlots":1},"@nonces_1860":{"entryPoint":2479,"id":1860,"parameterSlots":1,"returnSlots":1},"@numCheckpoints_1078":{"entryPoint":2271,"id":1078,"parameterSlots":1,"returnSlots":1},"@owner_40":{"entryPoint":2577,"id":40,"parameterSlots":0,"returnSlots":1},"@pause_6838":{"entryPoint":2559,"id":6838,"parameterSlots":0,"returnSlots":0},"@paused_242":{"entryPoint":2248,"id":242,"parameterSlots":0,"returnSlots":1},"@permit_1844":{"entryPoint":3538,"id":1844,"parameterSlots":7,"returnSlots":0},"@recover_4070":{"entryPoint":7900,"id":4070,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":2427,"id":68,"parameterSlots":0,"returnSlots":0},"@sqrt_4689":{"entryPoint":9395,"id":4689,"parameterSlots":1,"returnSlots":1},"@symbol_363":{"entryPoint":2705,"id":363,"parameterSlots":0,"returnSlots":1},"@toTypedDataHash_4129":{"entryPoint":9881,"id":4129,"parameterSlots":2,"returnSlots":1},"@toUint224_5288":{"entryPoint":4905,"id":5288,"parameterSlots":1,"returnSlots":1},"@toUint32_5888":{"entryPoint":5012,"id":5888,"parameterSlots":1,"returnSlots":1},"@totalSupply_383":{"entryPoint":1779,"id":383,"parameterSlots":0,"returnSlots":1},"@transferFrom_498":{"entryPoint":1789,"id":498,"parameterSlots":3,"returnSlots":1},"@transferOwnership_91":{"entryPoint":4267,"id":91,"parameterSlots":1,"returnSlots":0},"@transfer_422":{"entryPoint":3243,"id":422,"parameterSlots":2,"returnSlots":1},"@tryRecover_4037":{"entryPoint":9932,"id":4037,"parameterSlots":4,"returnSlots":2},"@unpause_6847":{"entryPoint":2063,"id":6847,"parameterSlots":0,"returnSlots":0},"abi_decode_t_address":{"entryPoint":11586,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":12268,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":11640,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":12679,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":12224,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":12056,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":12592,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":11821,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":12430,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":11661,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":12289,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint32":{"entryPoint":12700,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":12011,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":12101,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":11737,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":11969,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":16260,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":11417,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack":{"entryPoint":16495,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":15406,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d_to_t_string_memory_ptr_fromStack":{"entryPoint":13179,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack":{"entryPoint":15988,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack":{"entryPoint":13532,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack":{"entryPoint":17041,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack":{"entryPoint":16603,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack":{"entryPoint":13709,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":14168,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":15006,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16215,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":15114,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack":{"entryPoint":13817,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":15552,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack":{"entryPoint":16749,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack":{"entryPoint":16096,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack":{"entryPoint":14022,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack":{"entryPoint":14314,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":15660,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack":{"entryPoint":14568,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack":{"entryPoint":16895,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":15260,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack":{"entryPoint":14714,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":14860,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":13424,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":14422,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Checkpoint_$1024_memory_ptr_to_t_struct$_Checkpoint_$1024_memory_ptr_fromStack":{"entryPoint":12834,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint224_to_t_uint224":{"entryPoint":12819,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":11779,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32":{"entryPoint":12764,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":12159,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":11917,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":16283,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":12116,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":11752,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":11984,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":13884,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":13599,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":15768,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":16338,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11474,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16530,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15441,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13214,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16023,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13567,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17076,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16638,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13744,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14203,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15041,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15149,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13852,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15587,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16784,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16131,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14057,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14349,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15695,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14603,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16930,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15295,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14749,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14895,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13459,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14457,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Checkpoint_$1024_memory_ptr__to_t_struct$_Checkpoint_$1024_memory_ptr__fromStack_reversed":{"entryPoint":12881,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":11794,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":15727,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":12174,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":11932,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":11321,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":11332,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16163,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":13052,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":15898,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":13246,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":11545,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":11725,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":11959,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":11513,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint224":{"entryPoint":12779,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":11607,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":12143,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":11904,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":11349,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":12955,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":16250,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":13005,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":15851,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":16407,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":12908,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":13298,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":11508,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":11400,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be":{"entryPoint":16454,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":15327,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d":{"entryPoint":13138,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a":{"entryPoint":15947,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257":{"entryPoint":13491,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd":{"entryPoint":16962,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77":{"entryPoint":16562,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872":{"entryPoint":13668,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":14089,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":14927,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541":{"entryPoint":16174,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":15073,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd":{"entryPoint":13776,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":15473,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd":{"entryPoint":16670,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a":{"entryPoint":16055,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124":{"entryPoint":13981,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699":{"entryPoint":14235,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":15619,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79":{"entryPoint":14489,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f":{"entryPoint":16816,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":15181,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19":{"entryPoint":14635,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":14781,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":13345,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":14381,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":11563,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":12245,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":11617,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":12656,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":12201,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:43797:27","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:27","statements":[{"nodeType":"YulAssignment","src":"77:22:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:27"},"nodeType":"YulFunctionCall","src":"87:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:27"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:27","type":""}],"src":"7:99:27"},{"body":{"nodeType":"YulBlock","src":"208:73:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:27"},"nodeType":"YulFunctionCall","src":"218:19:27"},"nodeType":"YulExpressionStatement","src":"218:19:27"},{"nodeType":"YulAssignment","src":"246:29:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:27"},"nodeType":"YulFunctionCall","src":"261:14:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:27","type":""}],"src":"112:169:27"},{"body":{"nodeType":"YulBlock","src":"336:258:27","statements":[{"nodeType":"YulVariableDeclaration","src":"346:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"355:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"350:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"415:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"440:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"445:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"436:3:27"},"nodeType":"YulFunctionCall","src":"436:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"459:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"464:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"455:3:27"},"nodeType":"YulFunctionCall","src":"455:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"449:5:27"},"nodeType":"YulFunctionCall","src":"449:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"429:6:27"},"nodeType":"YulFunctionCall","src":"429:39:27"},"nodeType":"YulExpressionStatement","src":"429:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"376:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"379:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"373:2:27"},"nodeType":"YulFunctionCall","src":"373:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"387:19:27","statements":[{"nodeType":"YulAssignment","src":"389:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"398:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"401:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"394:3:27"},"nodeType":"YulFunctionCall","src":"394:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"369:3:27","statements":[]},"src":"365:113:27"},{"body":{"nodeType":"YulBlock","src":"512:76:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"562:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"567:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"558:3:27"},"nodeType":"YulFunctionCall","src":"558:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"576:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"551:6:27"},"nodeType":"YulFunctionCall","src":"551:27:27"},"nodeType":"YulExpressionStatement","src":"551:27:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"493:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"496:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"490:2:27"},"nodeType":"YulFunctionCall","src":"490:13:27"},"nodeType":"YulIf","src":"487:101:27"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"318:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"323:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"328:6:27","type":""}],"src":"287:307:27"},{"body":{"nodeType":"YulBlock","src":"648:54:27","statements":[{"nodeType":"YulAssignment","src":"658:38:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"683:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"672:3:27"},"nodeType":"YulFunctionCall","src":"672:14:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"692:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"688:3:27"},"nodeType":"YulFunctionCall","src":"688:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"668:3:27"},"nodeType":"YulFunctionCall","src":"668:28:27"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"658:6:27"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"631:5:27","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"641:6:27","type":""}],"src":"600:102:27"},{"body":{"nodeType":"YulBlock","src":"800:272:27","statements":[{"nodeType":"YulVariableDeclaration","src":"810:53:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"857:5:27"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"824:32:27"},"nodeType":"YulFunctionCall","src":"824:39:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"814:6:27","type":""}]},{"nodeType":"YulAssignment","src":"872:78:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"938:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"943:6:27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"879:58:27"},"nodeType":"YulFunctionCall","src":"879:71:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"872:3:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"985:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"992:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"981:3:27"},"nodeType":"YulFunctionCall","src":"981:16:27"},{"name":"pos","nodeType":"YulIdentifier","src":"999:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"1004:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"959:21:27"},"nodeType":"YulFunctionCall","src":"959:52:27"},"nodeType":"YulExpressionStatement","src":"959:52:27"},{"nodeType":"YulAssignment","src":"1020:46:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1031:3:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1058:6:27"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1036:21:27"},"nodeType":"YulFunctionCall","src":"1036:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1027:3:27"},"nodeType":"YulFunctionCall","src":"1027:39:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1020:3:27"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"781:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"788:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"796:3:27","type":""}],"src":"708:364:27"},{"body":{"nodeType":"YulBlock","src":"1196:195:27","statements":[{"nodeType":"YulAssignment","src":"1206:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1218:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1229:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1214:3:27"},"nodeType":"YulFunctionCall","src":"1214:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1206:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1253:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1264:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1249:3:27"},"nodeType":"YulFunctionCall","src":"1249:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1272:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1278:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1268:3:27"},"nodeType":"YulFunctionCall","src":"1268:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1242:6:27"},"nodeType":"YulFunctionCall","src":"1242:47:27"},"nodeType":"YulExpressionStatement","src":"1242:47:27"},{"nodeType":"YulAssignment","src":"1298:86:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1370:6:27"},{"name":"tail","nodeType":"YulIdentifier","src":"1379:4:27"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1306:63:27"},"nodeType":"YulFunctionCall","src":"1306:78:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1298:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1168:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1180:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1191:4:27","type":""}],"src":"1078:313:27"},{"body":{"nodeType":"YulBlock","src":"1437:35:27","statements":[{"nodeType":"YulAssignment","src":"1447:19:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1463:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1457:5:27"},"nodeType":"YulFunctionCall","src":"1457:9:27"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1447:6:27"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1430:6:27","type":""}],"src":"1397:75:27"},{"body":{"nodeType":"YulBlock","src":"1567:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1584:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1587:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1577:6:27"},"nodeType":"YulFunctionCall","src":"1577:12:27"},"nodeType":"YulExpressionStatement","src":"1577:12:27"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1478:117:27"},{"body":{"nodeType":"YulBlock","src":"1690:28:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1707:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1710:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1700:6:27"},"nodeType":"YulFunctionCall","src":"1700:12:27"},"nodeType":"YulExpressionStatement","src":"1700:12:27"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1601:117:27"},{"body":{"nodeType":"YulBlock","src":"1769:81:27","statements":[{"nodeType":"YulAssignment","src":"1779:65:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1794:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"1801:42:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1790:3:27"},"nodeType":"YulFunctionCall","src":"1790:54:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1779:7:27"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1751:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1761:7:27","type":""}],"src":"1724:126:27"},{"body":{"nodeType":"YulBlock","src":"1901:51:27","statements":[{"nodeType":"YulAssignment","src":"1911:35:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1940:5:27"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1922:17:27"},"nodeType":"YulFunctionCall","src":"1922:24:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1911:7:27"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1883:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1893:7:27","type":""}],"src":"1856:96:27"},{"body":{"nodeType":"YulBlock","src":"2001:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"2058:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2067:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2070:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2060:6:27"},"nodeType":"YulFunctionCall","src":"2060:12:27"},"nodeType":"YulExpressionStatement","src":"2060:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2024:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2049:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2031:17:27"},"nodeType":"YulFunctionCall","src":"2031:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2021:2:27"},"nodeType":"YulFunctionCall","src":"2021:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2014:6:27"},"nodeType":"YulFunctionCall","src":"2014:43:27"},"nodeType":"YulIf","src":"2011:63:27"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1994:5:27","type":""}],"src":"1958:122:27"},{"body":{"nodeType":"YulBlock","src":"2138:87:27","statements":[{"nodeType":"YulAssignment","src":"2148:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2170:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2157:12:27"},"nodeType":"YulFunctionCall","src":"2157:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2148:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2213:5:27"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2186:26:27"},"nodeType":"YulFunctionCall","src":"2186:33:27"},"nodeType":"YulExpressionStatement","src":"2186:33:27"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2116:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"2124:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2132:5:27","type":""}],"src":"2086:139:27"},{"body":{"nodeType":"YulBlock","src":"2276:32:27","statements":[{"nodeType":"YulAssignment","src":"2286:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"2297:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2286:7:27"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2258:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2268:7:27","type":""}],"src":"2231:77:27"},{"body":{"nodeType":"YulBlock","src":"2357:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"2414:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2423:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2426:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2416:6:27"},"nodeType":"YulFunctionCall","src":"2416:12:27"},"nodeType":"YulExpressionStatement","src":"2416:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2380:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2405:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2387:17:27"},"nodeType":"YulFunctionCall","src":"2387:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2377:2:27"},"nodeType":"YulFunctionCall","src":"2377:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2370:6:27"},"nodeType":"YulFunctionCall","src":"2370:43:27"},"nodeType":"YulIf","src":"2367:63:27"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2350:5:27","type":""}],"src":"2314:122:27"},{"body":{"nodeType":"YulBlock","src":"2494:87:27","statements":[{"nodeType":"YulAssignment","src":"2504:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2526:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2513:12:27"},"nodeType":"YulFunctionCall","src":"2513:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2504:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2569:5:27"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2542:26:27"},"nodeType":"YulFunctionCall","src":"2542:33:27"},"nodeType":"YulExpressionStatement","src":"2542:33:27"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2472:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"2480:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2488:5:27","type":""}],"src":"2442:139:27"},{"body":{"nodeType":"YulBlock","src":"2670:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"2716:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2718:77:27"},"nodeType":"YulFunctionCall","src":"2718:79:27"},"nodeType":"YulExpressionStatement","src":"2718:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2691:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2700:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2687:3:27"},"nodeType":"YulFunctionCall","src":"2687:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2712:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2683:3:27"},"nodeType":"YulFunctionCall","src":"2683:32:27"},"nodeType":"YulIf","src":"2680:119:27"},{"nodeType":"YulBlock","src":"2809:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2824:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2838:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2828:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2853:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"2899:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:27"},"nodeType":"YulFunctionCall","src":"2884:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2908:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2863:20:27"},"nodeType":"YulFunctionCall","src":"2863:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2853:6:27"}]}]},{"nodeType":"YulBlock","src":"2936:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2951:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2965:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2955:6:27","type":""}]},{"nodeType":"YulAssignment","src":"2981:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3016:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"3027:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3012:3:27"},"nodeType":"YulFunctionCall","src":"3012:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3036:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2991:20:27"},"nodeType":"YulFunctionCall","src":"2991:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2981:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2632:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2643:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2655:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2663:6:27","type":""}],"src":"2587:474:27"},{"body":{"nodeType":"YulBlock","src":"3109:48:27","statements":[{"nodeType":"YulAssignment","src":"3119:32:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3144:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3137:6:27"},"nodeType":"YulFunctionCall","src":"3137:13:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3130:6:27"},"nodeType":"YulFunctionCall","src":"3130:21:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3119:7:27"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3091:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3101:7:27","type":""}],"src":"3067:90:27"},{"body":{"nodeType":"YulBlock","src":"3222:50:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3239:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3259:5:27"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3244:14:27"},"nodeType":"YulFunctionCall","src":"3244:21:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3232:6:27"},"nodeType":"YulFunctionCall","src":"3232:34:27"},"nodeType":"YulExpressionStatement","src":"3232:34:27"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3210:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3217:3:27","type":""}],"src":"3163:109:27"},{"body":{"nodeType":"YulBlock","src":"3370:118:27","statements":[{"nodeType":"YulAssignment","src":"3380:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3392:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3403:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3388:3:27"},"nodeType":"YulFunctionCall","src":"3388:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3380:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3454:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3467:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3478:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3463:3:27"},"nodeType":"YulFunctionCall","src":"3463:17:27"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3416:37:27"},"nodeType":"YulFunctionCall","src":"3416:65:27"},"nodeType":"YulExpressionStatement","src":"3416:65:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3342:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3354:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3365:4:27","type":""}],"src":"3278:210:27"},{"body":{"nodeType":"YulBlock","src":"3559:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3576:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3599:5:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3581:17:27"},"nodeType":"YulFunctionCall","src":"3581:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3569:6:27"},"nodeType":"YulFunctionCall","src":"3569:37:27"},"nodeType":"YulExpressionStatement","src":"3569:37:27"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3547:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3554:3:27","type":""}],"src":"3494:118:27"},{"body":{"nodeType":"YulBlock","src":"3716:124:27","statements":[{"nodeType":"YulAssignment","src":"3726:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3738:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3749:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3734:3:27"},"nodeType":"YulFunctionCall","src":"3734:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3726:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3806:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3819:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3830:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3815:3:27"},"nodeType":"YulFunctionCall","src":"3815:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3762:43:27"},"nodeType":"YulFunctionCall","src":"3762:71:27"},"nodeType":"YulExpressionStatement","src":"3762:71:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3688:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3700:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3711:4:27","type":""}],"src":"3618:222:27"},{"body":{"nodeType":"YulBlock","src":"3946:519:27","statements":[{"body":{"nodeType":"YulBlock","src":"3992:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3994:77:27"},"nodeType":"YulFunctionCall","src":"3994:79:27"},"nodeType":"YulExpressionStatement","src":"3994:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3967:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3976:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3963:3:27"},"nodeType":"YulFunctionCall","src":"3963:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"3988:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3959:3:27"},"nodeType":"YulFunctionCall","src":"3959:32:27"},"nodeType":"YulIf","src":"3956:119:27"},{"nodeType":"YulBlock","src":"4085:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4100:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4114:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4104:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4129:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4164:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4175:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4160:3:27"},"nodeType":"YulFunctionCall","src":"4160:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4184:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4139:20:27"},"nodeType":"YulFunctionCall","src":"4139:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4129:6:27"}]}]},{"nodeType":"YulBlock","src":"4212:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4227:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4241:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4231:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4257:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4292:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4303:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4288:3:27"},"nodeType":"YulFunctionCall","src":"4288:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4312:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4267:20:27"},"nodeType":"YulFunctionCall","src":"4267:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4257:6:27"}]}]},{"nodeType":"YulBlock","src":"4340:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4355:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4369:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4359:6:27","type":""}]},{"nodeType":"YulAssignment","src":"4385:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4420:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4431:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4416:3:27"},"nodeType":"YulFunctionCall","src":"4416:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4440:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4395:20:27"},"nodeType":"YulFunctionCall","src":"4395:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4385:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3900:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3911:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3923:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3931:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3939:6:27","type":""}],"src":"3846:619:27"},{"body":{"nodeType":"YulBlock","src":"4514:43:27","statements":[{"nodeType":"YulAssignment","src":"4524:27:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4539:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"4546:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4535:3:27"},"nodeType":"YulFunctionCall","src":"4535:16:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4524:7:27"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4496:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4506:7:27","type":""}],"src":"4471:86:27"},{"body":{"nodeType":"YulBlock","src":"4624:51:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4641:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4662:5:27"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4646:15:27"},"nodeType":"YulFunctionCall","src":"4646:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4634:6:27"},"nodeType":"YulFunctionCall","src":"4634:35:27"},"nodeType":"YulExpressionStatement","src":"4634:35:27"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4612:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4619:3:27","type":""}],"src":"4563:112:27"},{"body":{"nodeType":"YulBlock","src":"4775:120:27","statements":[{"nodeType":"YulAssignment","src":"4785:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4797:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4808:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4793:3:27"},"nodeType":"YulFunctionCall","src":"4793:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4785:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4861:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4874:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4885:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4870:3:27"},"nodeType":"YulFunctionCall","src":"4870:17:27"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4821:39:27"},"nodeType":"YulFunctionCall","src":"4821:67:27"},"nodeType":"YulExpressionStatement","src":"4821:67:27"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4747:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4759:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4770:4:27","type":""}],"src":"4681:214:27"},{"body":{"nodeType":"YulBlock","src":"4946:32:27","statements":[{"nodeType":"YulAssignment","src":"4956:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"4967:5:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4956:7:27"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4928:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4938:7:27","type":""}],"src":"4901:77:27"},{"body":{"nodeType":"YulBlock","src":"5049:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5066:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5089:5:27"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5071:17:27"},"nodeType":"YulFunctionCall","src":"5071:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5059:6:27"},"nodeType":"YulFunctionCall","src":"5059:37:27"},"nodeType":"YulExpressionStatement","src":"5059:37:27"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5037:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5044:3:27","type":""}],"src":"4984:118:27"},{"body":{"nodeType":"YulBlock","src":"5206:124:27","statements":[{"nodeType":"YulAssignment","src":"5216:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5228:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5239:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5224:3:27"},"nodeType":"YulFunctionCall","src":"5224:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5216:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5296:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5309:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5320:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5305:3:27"},"nodeType":"YulFunctionCall","src":"5305:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5252:43:27"},"nodeType":"YulFunctionCall","src":"5252:71:27"},"nodeType":"YulExpressionStatement","src":"5252:71:27"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5178:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5190:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5201:4:27","type":""}],"src":"5108:222:27"},{"body":{"nodeType":"YulBlock","src":"5402:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"5448:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5450:77:27"},"nodeType":"YulFunctionCall","src":"5450:79:27"},"nodeType":"YulExpressionStatement","src":"5450:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5423:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5432:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5419:3:27"},"nodeType":"YulFunctionCall","src":"5419:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5444:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5415:3:27"},"nodeType":"YulFunctionCall","src":"5415:32:27"},"nodeType":"YulIf","src":"5412:119:27"},{"nodeType":"YulBlock","src":"5541:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5556:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5570:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5560:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5585:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5620:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5631:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5616:3:27"},"nodeType":"YulFunctionCall","src":"5616:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5640:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5595:20:27"},"nodeType":"YulFunctionCall","src":"5595:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5585:6:27"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5372:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5383:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5395:6:27","type":""}],"src":"5336:329:27"},{"body":{"nodeType":"YulBlock","src":"5737:263:27","statements":[{"body":{"nodeType":"YulBlock","src":"5783:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5785:77:27"},"nodeType":"YulFunctionCall","src":"5785:79:27"},"nodeType":"YulExpressionStatement","src":"5785:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5758:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5767:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5754:3:27"},"nodeType":"YulFunctionCall","src":"5754:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5779:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5750:3:27"},"nodeType":"YulFunctionCall","src":"5750:32:27"},"nodeType":"YulIf","src":"5747:119:27"},{"nodeType":"YulBlock","src":"5876:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"5891:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"5905:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5895:6:27","type":""}]},{"nodeType":"YulAssignment","src":"5920:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5955:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"5966:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5951:3:27"},"nodeType":"YulFunctionCall","src":"5951:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5975:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5930:20:27"},"nodeType":"YulFunctionCall","src":"5930:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5920:6:27"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5707:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5718:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5730:6:27","type":""}],"src":"5671:329:27"},{"body":{"nodeType":"YulBlock","src":"6071:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6088:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6111:5:27"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6093:17:27"},"nodeType":"YulFunctionCall","src":"6093:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6081:6:27"},"nodeType":"YulFunctionCall","src":"6081:37:27"},"nodeType":"YulExpressionStatement","src":"6081:37:27"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6059:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6066:3:27","type":""}],"src":"6006:118:27"},{"body":{"nodeType":"YulBlock","src":"6228:124:27","statements":[{"nodeType":"YulAssignment","src":"6238:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6250:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6261:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6246:3:27"},"nodeType":"YulFunctionCall","src":"6246:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6238:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6318:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6331:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6342:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6327:3:27"},"nodeType":"YulFunctionCall","src":"6327:17:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6274:43:27"},"nodeType":"YulFunctionCall","src":"6274:71:27"},"nodeType":"YulExpressionStatement","src":"6274:71:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6200:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6212:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6223:4:27","type":""}],"src":"6130:222:27"},{"body":{"nodeType":"YulBlock","src":"6402:49:27","statements":[{"nodeType":"YulAssignment","src":"6412:33:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6427:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"6434:10:27","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6423:3:27"},"nodeType":"YulFunctionCall","src":"6423:22:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6412:7:27"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6384:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6394:7:27","type":""}],"src":"6358:93:27"},{"body":{"nodeType":"YulBlock","src":"6520:52:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6537:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6559:5:27"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"6542:16:27"},"nodeType":"YulFunctionCall","src":"6542:23:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6530:6:27"},"nodeType":"YulFunctionCall","src":"6530:36:27"},"nodeType":"YulExpressionStatement","src":"6530:36:27"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6508:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6515:3:27","type":""}],"src":"6457:115:27"},{"body":{"nodeType":"YulBlock","src":"6674:122:27","statements":[{"nodeType":"YulAssignment","src":"6684:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6696:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6707:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6692:3:27"},"nodeType":"YulFunctionCall","src":"6692:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6684:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6762:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6775:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6786:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6771:3:27"},"nodeType":"YulFunctionCall","src":"6771:17:27"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"6720:41:27"},"nodeType":"YulFunctionCall","src":"6720:69:27"},"nodeType":"YulExpressionStatement","src":"6720:69:27"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6646:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6658:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6669:4:27","type":""}],"src":"6578:218:27"},{"body":{"nodeType":"YulBlock","src":"6843:77:27","statements":[{"body":{"nodeType":"YulBlock","src":"6898:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6907:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6910:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6900:6:27"},"nodeType":"YulFunctionCall","src":"6900:12:27"},"nodeType":"YulExpressionStatement","src":"6900:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6866:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6889:5:27"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"6873:15:27"},"nodeType":"YulFunctionCall","src":"6873:22:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6863:2:27"},"nodeType":"YulFunctionCall","src":"6863:33:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6856:6:27"},"nodeType":"YulFunctionCall","src":"6856:41:27"},"nodeType":"YulIf","src":"6853:61:27"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6836:5:27","type":""}],"src":"6802:118:27"},{"body":{"nodeType":"YulBlock","src":"6976:85:27","statements":[{"nodeType":"YulAssignment","src":"6986:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7008:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6995:12:27"},"nodeType":"YulFunctionCall","src":"6995:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6986:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7049:5:27"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"7024:24:27"},"nodeType":"YulFunctionCall","src":"7024:31:27"},"nodeType":"YulExpressionStatement","src":"7024:31:27"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6954:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"6962:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6970:5:27","type":""}],"src":"6926:135:27"},{"body":{"nodeType":"YulBlock","src":"7110:79:27","statements":[{"body":{"nodeType":"YulBlock","src":"7167:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7176:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7179:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7169:6:27"},"nodeType":"YulFunctionCall","src":"7169:12:27"},"nodeType":"YulExpressionStatement","src":"7169:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7133:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7158:5:27"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"7140:17:27"},"nodeType":"YulFunctionCall","src":"7140:24:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7130:2:27"},"nodeType":"YulFunctionCall","src":"7130:35:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7123:6:27"},"nodeType":"YulFunctionCall","src":"7123:43:27"},"nodeType":"YulIf","src":"7120:63:27"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7103:5:27","type":""}],"src":"7067:122:27"},{"body":{"nodeType":"YulBlock","src":"7247:87:27","statements":[{"nodeType":"YulAssignment","src":"7257:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7279:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7266:12:27"},"nodeType":"YulFunctionCall","src":"7266:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7257:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7322:5:27"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"7295:26:27"},"nodeType":"YulFunctionCall","src":"7295:33:27"},"nodeType":"YulExpressionStatement","src":"7295:33:27"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7225:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"7233:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7241:5:27","type":""}],"src":"7195:139:27"},{"body":{"nodeType":"YulBlock","src":"7489:904:27","statements":[{"body":{"nodeType":"YulBlock","src":"7536:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7538:77:27"},"nodeType":"YulFunctionCall","src":"7538:79:27"},"nodeType":"YulExpressionStatement","src":"7538:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7510:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"7519:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7506:3:27"},"nodeType":"YulFunctionCall","src":"7506:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"7531:3:27","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7502:3:27"},"nodeType":"YulFunctionCall","src":"7502:33:27"},"nodeType":"YulIf","src":"7499:120:27"},{"nodeType":"YulBlock","src":"7629:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7644:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7658:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7648:6:27","type":""}]},{"nodeType":"YulAssignment","src":"7673:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7708:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"7719:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7704:3:27"},"nodeType":"YulFunctionCall","src":"7704:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7728:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7683:20:27"},"nodeType":"YulFunctionCall","src":"7683:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7673:6:27"}]}]},{"nodeType":"YulBlock","src":"7756:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7771:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7785:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7775:6:27","type":""}]},{"nodeType":"YulAssignment","src":"7801:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7836:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"7847:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7832:3:27"},"nodeType":"YulFunctionCall","src":"7832:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7856:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7811:20:27"},"nodeType":"YulFunctionCall","src":"7811:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7801:6:27"}]}]},{"nodeType":"YulBlock","src":"7884:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"7899:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"7913:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7903:6:27","type":""}]},{"nodeType":"YulAssignment","src":"7929:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7964:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"7975:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7960:3:27"},"nodeType":"YulFunctionCall","src":"7960:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7984:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7939:20:27"},"nodeType":"YulFunctionCall","src":"7939:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7929:6:27"}]}]},{"nodeType":"YulBlock","src":"8012:116:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8027:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"8041:2:27","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8031:6:27","type":""}]},{"nodeType":"YulAssignment","src":"8057:61:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8090:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"8101:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8086:3:27"},"nodeType":"YulFunctionCall","src":"8086:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8110:7:27"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"8067:18:27"},"nodeType":"YulFunctionCall","src":"8067:51:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8057:6:27"}]}]},{"nodeType":"YulBlock","src":"8138:119:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8153:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"8167:3:27","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8157:6:27","type":""}]},{"nodeType":"YulAssignment","src":"8184:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8219:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"8230:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8215:3:27"},"nodeType":"YulFunctionCall","src":"8215:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8239:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"8194:20:27"},"nodeType":"YulFunctionCall","src":"8194:53:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"8184:6:27"}]}]},{"nodeType":"YulBlock","src":"8267:119:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8282:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"8296:3:27","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8286:6:27","type":""}]},{"nodeType":"YulAssignment","src":"8313:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8348:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"8359:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8344:3:27"},"nodeType":"YulFunctionCall","src":"8344:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8368:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"8323:20:27"},"nodeType":"YulFunctionCall","src":"8323:53:27"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"8313:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7419:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7430:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7442:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7450:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7458:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7466:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7474:6:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"7482:6:27","type":""}],"src":"7340:1053:27"},{"body":{"nodeType":"YulBlock","src":"8565:1033:27","statements":[{"body":{"nodeType":"YulBlock","src":"8612:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8614:77:27"},"nodeType":"YulFunctionCall","src":"8614:79:27"},"nodeType":"YulExpressionStatement","src":"8614:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8586:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"8595:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8582:3:27"},"nodeType":"YulFunctionCall","src":"8582:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"8607:3:27","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8578:3:27"},"nodeType":"YulFunctionCall","src":"8578:33:27"},"nodeType":"YulIf","src":"8575:120:27"},{"nodeType":"YulBlock","src":"8705:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8720:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"8734:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8724:6:27","type":""}]},{"nodeType":"YulAssignment","src":"8749:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8784:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"8795:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8780:3:27"},"nodeType":"YulFunctionCall","src":"8780:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8804:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8759:20:27"},"nodeType":"YulFunctionCall","src":"8759:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8749:6:27"}]}]},{"nodeType":"YulBlock","src":"8832:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8847:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"8861:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8851:6:27","type":""}]},{"nodeType":"YulAssignment","src":"8877:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8912:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"8923:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8908:3:27"},"nodeType":"YulFunctionCall","src":"8908:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8932:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8887:20:27"},"nodeType":"YulFunctionCall","src":"8887:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8877:6:27"}]}]},{"nodeType":"YulBlock","src":"8960:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"8975:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"8989:2:27","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8979:6:27","type":""}]},{"nodeType":"YulAssignment","src":"9005:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9040:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"9051:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9036:3:27"},"nodeType":"YulFunctionCall","src":"9036:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9060:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9015:20:27"},"nodeType":"YulFunctionCall","src":"9015:53:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9005:6:27"}]}]},{"nodeType":"YulBlock","src":"9088:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9103:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"9117:2:27","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9107:6:27","type":""}]},{"nodeType":"YulAssignment","src":"9133:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9168:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"9179:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9164:3:27"},"nodeType":"YulFunctionCall","src":"9164:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9188:7:27"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9143:20:27"},"nodeType":"YulFunctionCall","src":"9143:53:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9133:6:27"}]}]},{"nodeType":"YulBlock","src":"9216:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9231:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"9245:3:27","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9235:6:27","type":""}]},{"nodeType":"YulAssignment","src":"9262:61:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9295:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"9306:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9291:3:27"},"nodeType":"YulFunctionCall","src":"9291:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9315:7:27"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"9272:18:27"},"nodeType":"YulFunctionCall","src":"9272:51:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"9262:6:27"}]}]},{"nodeType":"YulBlock","src":"9343:119:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9358:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"9372:3:27","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9362:6:27","type":""}]},{"nodeType":"YulAssignment","src":"9389:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9424:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"9435:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9420:3:27"},"nodeType":"YulFunctionCall","src":"9420:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9444:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"9399:20:27"},"nodeType":"YulFunctionCall","src":"9399:53:27"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"9389:6:27"}]}]},{"nodeType":"YulBlock","src":"9472:119:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9487:17:27","value":{"kind":"number","nodeType":"YulLiteral","src":"9501:3:27","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9491:6:27","type":""}]},{"nodeType":"YulAssignment","src":"9518:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9553:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"9564:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9549:3:27"},"nodeType":"YulFunctionCall","src":"9549:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9573:7:27"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"9528:20:27"},"nodeType":"YulFunctionCall","src":"9528:53:27"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"9518:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8487:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8498:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8510:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8518:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8526:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8534:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8542:6:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8550:6:27","type":""},{"name":"value6","nodeType":"YulTypedName","src":"8558:6:27","type":""}],"src":"8399:1199:27"},{"body":{"nodeType":"YulBlock","src":"9687:391:27","statements":[{"body":{"nodeType":"YulBlock","src":"9733:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9735:77:27"},"nodeType":"YulFunctionCall","src":"9735:79:27"},"nodeType":"YulExpressionStatement","src":"9735:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9708:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"9717:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9704:3:27"},"nodeType":"YulFunctionCall","src":"9704:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"9729:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9700:3:27"},"nodeType":"YulFunctionCall","src":"9700:32:27"},"nodeType":"YulIf","src":"9697:119:27"},{"nodeType":"YulBlock","src":"9826:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9841:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"9855:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9845:6:27","type":""}]},{"nodeType":"YulAssignment","src":"9870:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9905:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"9916:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9901:3:27"},"nodeType":"YulFunctionCall","src":"9901:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9925:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9880:20:27"},"nodeType":"YulFunctionCall","src":"9880:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9870:6:27"}]}]},{"nodeType":"YulBlock","src":"9953:118:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9968:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"9982:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9972:6:27","type":""}]},{"nodeType":"YulAssignment","src":"9998:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10033:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"10044:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10029:3:27"},"nodeType":"YulFunctionCall","src":"10029:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10053:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10008:20:27"},"nodeType":"YulFunctionCall","src":"10008:53:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9998:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9649:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9660:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9672:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9680:6:27","type":""}],"src":"9604:474:27"},{"body":{"nodeType":"YulBlock","src":"10126:78:27","statements":[{"body":{"nodeType":"YulBlock","src":"10182:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10191:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10194:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10184:6:27"},"nodeType":"YulFunctionCall","src":"10184:12:27"},"nodeType":"YulExpressionStatement","src":"10184:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10149:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10173:5:27"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"10156:16:27"},"nodeType":"YulFunctionCall","src":"10156:23:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10146:2:27"},"nodeType":"YulFunctionCall","src":"10146:34:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10139:6:27"},"nodeType":"YulFunctionCall","src":"10139:42:27"},"nodeType":"YulIf","src":"10136:62:27"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10119:5:27","type":""}],"src":"10084:120:27"},{"body":{"nodeType":"YulBlock","src":"10261:86:27","statements":[{"nodeType":"YulAssignment","src":"10271:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10293:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10280:12:27"},"nodeType":"YulFunctionCall","src":"10280:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10271:5:27"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10335:5:27"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"10309:25:27"},"nodeType":"YulFunctionCall","src":"10309:32:27"},"nodeType":"YulExpressionStatement","src":"10309:32:27"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10239:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"10247:3:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10255:5:27","type":""}],"src":"10210:137:27"},{"body":{"nodeType":"YulBlock","src":"10435:390:27","statements":[{"body":{"nodeType":"YulBlock","src":"10481:83:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10483:77:27"},"nodeType":"YulFunctionCall","src":"10483:79:27"},"nodeType":"YulExpressionStatement","src":"10483:79:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10456:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"10465:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10452:3:27"},"nodeType":"YulFunctionCall","src":"10452:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"10477:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10448:3:27"},"nodeType":"YulFunctionCall","src":"10448:32:27"},"nodeType":"YulIf","src":"10445:119:27"},{"nodeType":"YulBlock","src":"10574:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10589:15:27","value":{"kind":"number","nodeType":"YulLiteral","src":"10603:1:27","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10593:6:27","type":""}]},{"nodeType":"YulAssignment","src":"10618:63:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10653:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"10664:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10649:3:27"},"nodeType":"YulFunctionCall","src":"10649:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10673:7:27"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10628:20:27"},"nodeType":"YulFunctionCall","src":"10628:53:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10618:6:27"}]}]},{"nodeType":"YulBlock","src":"10701:117:27","statements":[{"nodeType":"YulVariableDeclaration","src":"10716:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"10730:2:27","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10720:6:27","type":""}]},{"nodeType":"YulAssignment","src":"10746:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10780:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"10791:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10776:3:27"},"nodeType":"YulFunctionCall","src":"10776:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10800:7:27"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"10756:19:27"},"nodeType":"YulFunctionCall","src":"10756:52:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10746:6:27"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10397:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10408:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10420:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10428:6:27","type":""}],"src":"10353:472:27"},{"body":{"nodeType":"YulBlock","src":"10884:52:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10901:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10923:5:27"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"10906:16:27"},"nodeType":"YulFunctionCall","src":"10906:23:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10894:6:27"},"nodeType":"YulFunctionCall","src":"10894:36:27"},"nodeType":"YulExpressionStatement","src":"10894:36:27"}]},"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10872:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10879:3:27","type":""}],"src":"10831:105:27"},{"body":{"nodeType":"YulBlock","src":"10987:97:27","statements":[{"nodeType":"YulAssignment","src":"10997:81:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11012:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"11019:58:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11008:3:27"},"nodeType":"YulFunctionCall","src":"11008:70:27"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10997:7:27"}]}]},"name":"cleanup_t_uint224","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10969:5:27","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10979:7:27","type":""}],"src":"10942:142:27"},{"body":{"nodeType":"YulBlock","src":"11145:53:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11162:3:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11185:5:27"}],"functionName":{"name":"cleanup_t_uint224","nodeType":"YulIdentifier","src":"11167:17:27"},"nodeType":"YulFunctionCall","src":"11167:24:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11155:6:27"},"nodeType":"YulFunctionCall","src":"11155:37:27"},"nodeType":"YulExpressionStatement","src":"11155:37:27"}]},"name":"abi_encode_t_uint224_to_t_uint224","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11133:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11140:3:27","type":""}],"src":"11090:108:27"},{"body":{"nodeType":"YulBlock","src":"11394:395:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11404:26:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11420:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"11425:4:27","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11416:3:27"},"nodeType":"YulFunctionCall","src":"11416:14:27"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"11408:4:27","type":""}]},{"nodeType":"YulBlock","src":"11440:167:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11480:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11510:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"11517:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11506:3:27"},"nodeType":"YulFunctionCall","src":"11506:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11500:5:27"},"nodeType":"YulFunctionCall","src":"11500:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11484:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11568:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11586:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"11591:4:27","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11582:3:27"},"nodeType":"YulFunctionCall","src":"11582:14:27"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nodeType":"YulIdentifier","src":"11536:31:27"},"nodeType":"YulFunctionCall","src":"11536:61:27"},"nodeType":"YulExpressionStatement","src":"11536:61:27"}]},{"nodeType":"YulBlock","src":"11617:165:27","statements":[{"nodeType":"YulVariableDeclaration","src":"11653:43:27","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11683:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"11690:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11679:3:27"},"nodeType":"YulFunctionCall","src":"11679:16:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11673:5:27"},"nodeType":"YulFunctionCall","src":"11673:23:27"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"11657:12:27","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"11743:12:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11761:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"11766:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11757:3:27"},"nodeType":"YulFunctionCall","src":"11757:14:27"}],"functionName":{"name":"abi_encode_t_uint224_to_t_uint224","nodeType":"YulIdentifier","src":"11709:33:27"},"nodeType":"YulFunctionCall","src":"11709:63:27"},"nodeType":"YulExpressionStatement","src":"11709:63:27"}]}]},"name":"abi_encode_t_struct$_Checkpoint_$1024_memory_ptr_to_t_struct$_Checkpoint_$1024_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11381:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11388:3:27","type":""}],"src":"11272:517:27"},{"body":{"nodeType":"YulBlock","src":"11949:180:27","statements":[{"nodeType":"YulAssignment","src":"11959:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11971:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11982:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11967:3:27"},"nodeType":"YulFunctionCall","src":"11967:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11959:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12095:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12108:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12119:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12104:3:27"},"nodeType":"YulFunctionCall","src":"12104:17:27"}],"functionName":{"name":"abi_encode_t_struct$_Checkpoint_$1024_memory_ptr_to_t_struct$_Checkpoint_$1024_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11995:99:27"},"nodeType":"YulFunctionCall","src":"11995:127:27"},"nodeType":"YulExpressionStatement","src":"11995:127:27"}]},"name":"abi_encode_tuple_t_struct$_Checkpoint_$1024_memory_ptr__to_t_struct$_Checkpoint_$1024_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11921:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11933:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11944:4:27","type":""}],"src":"11795:334:27"},{"body":{"nodeType":"YulBlock","src":"12163:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12180:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12183:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12173:6:27"},"nodeType":"YulFunctionCall","src":"12173:88:27"},"nodeType":"YulExpressionStatement","src":"12173:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12277:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12280:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12270:6:27"},"nodeType":"YulFunctionCall","src":"12270:15:27"},"nodeType":"YulExpressionStatement","src":"12270:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12301:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12304:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12294:6:27"},"nodeType":"YulFunctionCall","src":"12294:15:27"},"nodeType":"YulExpressionStatement","src":"12294:15:27"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"12135:180:27"},{"body":{"nodeType":"YulBlock","src":"12372:269:27","statements":[{"nodeType":"YulAssignment","src":"12382:22:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12396:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"12402:1:27","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12392:3:27"},"nodeType":"YulFunctionCall","src":"12392:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12382:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"12413:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12443:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"12449:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12439:3:27"},"nodeType":"YulFunctionCall","src":"12439:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"12417:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"12490:51:27","statements":[{"nodeType":"YulAssignment","src":"12504:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12518:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"12526:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12514:3:27"},"nodeType":"YulFunctionCall","src":"12514:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12504:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12470:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12463:6:27"},"nodeType":"YulFunctionCall","src":"12463:26:27"},"nodeType":"YulIf","src":"12460:81:27"},{"body":{"nodeType":"YulBlock","src":"12593:42:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"12607:16:27"},"nodeType":"YulFunctionCall","src":"12607:18:27"},"nodeType":"YulExpressionStatement","src":"12607:18:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12557:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12580:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"12588:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12577:2:27"},"nodeType":"YulFunctionCall","src":"12577:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12554:2:27"},"nodeType":"YulFunctionCall","src":"12554:38:27"},"nodeType":"YulIf","src":"12551:84:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"12356:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12365:6:27","type":""}],"src":"12321:320:27"},{"body":{"nodeType":"YulBlock","src":"12675:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12692:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12695:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12685:6:27"},"nodeType":"YulFunctionCall","src":"12685:88:27"},"nodeType":"YulExpressionStatement","src":"12685:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12789:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12792:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12782:6:27"},"nodeType":"YulFunctionCall","src":"12782:15:27"},"nodeType":"YulExpressionStatement","src":"12782:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12813:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12816:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12806:6:27"},"nodeType":"YulFunctionCall","src":"12806:15:27"},"nodeType":"YulExpressionStatement","src":"12806:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"12647:180:27"},{"body":{"nodeType":"YulBlock","src":"12877:261:27","statements":[{"nodeType":"YulAssignment","src":"12887:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12910:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12892:17:27"},"nodeType":"YulFunctionCall","src":"12892:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"12887:1:27"}]},{"nodeType":"YulAssignment","src":"12921:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12944:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12926:17:27"},"nodeType":"YulFunctionCall","src":"12926:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"12921:1:27"}]},{"body":{"nodeType":"YulBlock","src":"13084:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13086:16:27"},"nodeType":"YulFunctionCall","src":"13086:18:27"},"nodeType":"YulExpressionStatement","src":"13086:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13005:1:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13012:66:27","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"13080:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13008:3:27"},"nodeType":"YulFunctionCall","src":"13008:74:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13002:2:27"},"nodeType":"YulFunctionCall","src":"13002:81:27"},"nodeType":"YulIf","src":"12999:107:27"},{"nodeType":"YulAssignment","src":"13116:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13127:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"13130:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13123:3:27"},"nodeType":"YulFunctionCall","src":"13123:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"13116:3:27"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12864:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"12867:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"12873:3:27","type":""}],"src":"12833:305:27"},{"body":{"nodeType":"YulBlock","src":"13250:75:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13272:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"13280:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13268:3:27"},"nodeType":"YulFunctionCall","src":"13268:14:27"},{"hexValue":"4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564","kind":"string","nodeType":"YulLiteral","src":"13284:33:27","type":"","value":"ERC20Votes: block not yet mined"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13261:6:27"},"nodeType":"YulFunctionCall","src":"13261:57:27"},"nodeType":"YulExpressionStatement","src":"13261:57:27"}]},"name":"store_literal_in_memory_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13242:6:27","type":""}],"src":"13144:181:27"},{"body":{"nodeType":"YulBlock","src":"13477:220:27","statements":[{"nodeType":"YulAssignment","src":"13487:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13553:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"13558:2:27","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13494:58:27"},"nodeType":"YulFunctionCall","src":"13494:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13487:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13659:3:27"}],"functionName":{"name":"store_literal_in_memory_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d","nodeType":"YulIdentifier","src":"13570:88:27"},"nodeType":"YulFunctionCall","src":"13570:93:27"},"nodeType":"YulExpressionStatement","src":"13570:93:27"},{"nodeType":"YulAssignment","src":"13672:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13683:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"13688:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13679:3:27"},"nodeType":"YulFunctionCall","src":"13679:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13672:3:27"}]}]},"name":"abi_encode_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13465:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13473:3:27","type":""}],"src":"13331:366:27"},{"body":{"nodeType":"YulBlock","src":"13874:248:27","statements":[{"nodeType":"YulAssignment","src":"13884:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13896:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13907:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13892:3:27"},"nodeType":"YulFunctionCall","src":"13892:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13884:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13931:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13942:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13927:3:27"},"nodeType":"YulFunctionCall","src":"13927:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13950:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"13956:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13946:3:27"},"nodeType":"YulFunctionCall","src":"13946:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13920:6:27"},"nodeType":"YulFunctionCall","src":"13920:47:27"},"nodeType":"YulExpressionStatement","src":"13920:47:27"},{"nodeType":"YulAssignment","src":"13976:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14110:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13984:124:27"},"nodeType":"YulFunctionCall","src":"13984:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13976:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13854:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13869:4:27","type":""}],"src":"13703:419:27"},{"body":{"nodeType":"YulBlock","src":"14173:146:27","statements":[{"nodeType":"YulAssignment","src":"14183:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14206:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14188:17:27"},"nodeType":"YulFunctionCall","src":"14188:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"14183:1:27"}]},{"nodeType":"YulAssignment","src":"14217:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"14240:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14222:17:27"},"nodeType":"YulFunctionCall","src":"14222:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"14217:1:27"}]},{"body":{"nodeType":"YulBlock","src":"14264:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14266:16:27"},"nodeType":"YulFunctionCall","src":"14266:18:27"},"nodeType":"YulExpressionStatement","src":"14266:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14258:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"14261:1:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14255:2:27"},"nodeType":"YulFunctionCall","src":"14255:8:27"},"nodeType":"YulIf","src":"14252:34:27"},{"nodeType":"YulAssignment","src":"14296:17:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14308:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"14311:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14304:3:27"},"nodeType":"YulFunctionCall","src":"14304:9:27"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"14296:4:27"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14159:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"14162:1:27","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"14168:4:27","type":""}],"src":"14128:191:27"},{"body":{"nodeType":"YulBlock","src":"14353:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14370:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14373:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14363:6:27"},"nodeType":"YulFunctionCall","src":"14363:88:27"},"nodeType":"YulExpressionStatement","src":"14363:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14467:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14470:4:27","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14460:6:27"},"nodeType":"YulFunctionCall","src":"14460:15:27"},"nodeType":"YulExpressionStatement","src":"14460:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14491:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14494:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14484:6:27"},"nodeType":"YulFunctionCall","src":"14484:15:27"},"nodeType":"YulExpressionStatement","src":"14484:15:27"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"14325:180:27"},{"body":{"nodeType":"YulBlock","src":"14617:118:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14639:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"14647:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14635:3:27"},"nodeType":"YulFunctionCall","src":"14635:14:27"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"14651:34:27","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14628:6:27"},"nodeType":"YulFunctionCall","src":"14628:58:27"},"nodeType":"YulExpressionStatement","src":"14628:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14707:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"14715:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14703:3:27"},"nodeType":"YulFunctionCall","src":"14703:15:27"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"14720:7:27","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14696:6:27"},"nodeType":"YulFunctionCall","src":"14696:32:27"},"nodeType":"YulExpressionStatement","src":"14696:32:27"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14609:6:27","type":""}],"src":"14511:224:27"},{"body":{"nodeType":"YulBlock","src":"14887:220:27","statements":[{"nodeType":"YulAssignment","src":"14897:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14963:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"14968:2:27","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14904:58:27"},"nodeType":"YulFunctionCall","src":"14904:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14897:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15069:3:27"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"14980:88:27"},"nodeType":"YulFunctionCall","src":"14980:93:27"},"nodeType":"YulExpressionStatement","src":"14980:93:27"},{"nodeType":"YulAssignment","src":"15082:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15093:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"15098:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15089:3:27"},"nodeType":"YulFunctionCall","src":"15089:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15082:3:27"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14875:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14883:3:27","type":""}],"src":"14741:366:27"},{"body":{"nodeType":"YulBlock","src":"15284:248:27","statements":[{"nodeType":"YulAssignment","src":"15294:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15306:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15317:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15302:3:27"},"nodeType":"YulFunctionCall","src":"15302:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15294:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15341:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15352:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15337:3:27"},"nodeType":"YulFunctionCall","src":"15337:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15360:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"15366:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15356:3:27"},"nodeType":"YulFunctionCall","src":"15356:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15330:6:27"},"nodeType":"YulFunctionCall","src":"15330:47:27"},"nodeType":"YulExpressionStatement","src":"15330:47:27"},{"nodeType":"YulAssignment","src":"15386:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15520:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15394:124:27"},"nodeType":"YulFunctionCall","src":"15394:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15386:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15264:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15279:4:27","type":""}],"src":"15113:419:27"},{"body":{"nodeType":"YulBlock","src":"15644:73:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15666:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"15674:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15662:3:27"},"nodeType":"YulFunctionCall","src":"15662:14:27"},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","kind":"string","nodeType":"YulLiteral","src":"15678:31:27","type":"","value":"ERC20Votes: signature expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15655:6:27"},"nodeType":"YulFunctionCall","src":"15655:55:27"},"nodeType":"YulExpressionStatement","src":"15655:55:27"}]},"name":"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15636:6:27","type":""}],"src":"15538:179:27"},{"body":{"nodeType":"YulBlock","src":"15869:220:27","statements":[{"nodeType":"YulAssignment","src":"15879:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15945:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"15950:2:27","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15886:58:27"},"nodeType":"YulFunctionCall","src":"15886:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15879:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16051:3:27"}],"functionName":{"name":"store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","nodeType":"YulIdentifier","src":"15962:88:27"},"nodeType":"YulFunctionCall","src":"15962:93:27"},"nodeType":"YulExpressionStatement","src":"15962:93:27"},{"nodeType":"YulAssignment","src":"16064:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16075:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"16080:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16071:3:27"},"nodeType":"YulFunctionCall","src":"16071:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16064:3:27"}]}]},"name":"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15857:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15865:3:27","type":""}],"src":"15723:366:27"},{"body":{"nodeType":"YulBlock","src":"16266:248:27","statements":[{"nodeType":"YulAssignment","src":"16276:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16288:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16299:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16284:3:27"},"nodeType":"YulFunctionCall","src":"16284:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16276:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16323:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16334:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16319:3:27"},"nodeType":"YulFunctionCall","src":"16319:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16342:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"16348:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16338:3:27"},"nodeType":"YulFunctionCall","src":"16338:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16312:6:27"},"nodeType":"YulFunctionCall","src":"16312:47:27"},"nodeType":"YulExpressionStatement","src":"16312:47:27"},{"nodeType":"YulAssignment","src":"16368:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16502:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16376:124:27"},"nodeType":"YulFunctionCall","src":"16376:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16368:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16246:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16261:4:27","type":""}],"src":"16095:419:27"},{"body":{"nodeType":"YulBlock","src":"16702:371:27","statements":[{"nodeType":"YulAssignment","src":"16712:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16724:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16735:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16720:3:27"},"nodeType":"YulFunctionCall","src":"16720:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16712:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16793:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16806:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16817:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16802:3:27"},"nodeType":"YulFunctionCall","src":"16802:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"16749:43:27"},"nodeType":"YulFunctionCall","src":"16749:71:27"},"nodeType":"YulExpressionStatement","src":"16749:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16874:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16887:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16898:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16883:3:27"},"nodeType":"YulFunctionCall","src":"16883:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16830:43:27"},"nodeType":"YulFunctionCall","src":"16830:72:27"},"nodeType":"YulExpressionStatement","src":"16830:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16956:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16969:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16980:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16965:3:27"},"nodeType":"YulFunctionCall","src":"16965:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16912:43:27"},"nodeType":"YulFunctionCall","src":"16912:72:27"},"nodeType":"YulExpressionStatement","src":"16912:72:27"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17038:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17051:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17062:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17047:3:27"},"nodeType":"YulFunctionCall","src":"17047:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16994:43:27"},"nodeType":"YulFunctionCall","src":"16994:72:27"},"nodeType":"YulExpressionStatement","src":"16994:72:27"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16650:9:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16662:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16670:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16678:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16686:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16697:4:27","type":""}],"src":"16520:553:27"},{"body":{"nodeType":"YulBlock","src":"17185:69:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17207:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"17215:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17203:3:27"},"nodeType":"YulFunctionCall","src":"17203:14:27"},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","kind":"string","nodeType":"YulLiteral","src":"17219:27:27","type":"","value":"ERC20Votes: invalid nonce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17196:6:27"},"nodeType":"YulFunctionCall","src":"17196:51:27"},"nodeType":"YulExpressionStatement","src":"17196:51:27"}]},"name":"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17177:6:27","type":""}],"src":"17079:175:27"},{"body":{"nodeType":"YulBlock","src":"17406:220:27","statements":[{"nodeType":"YulAssignment","src":"17416:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17482:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"17487:2:27","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17423:58:27"},"nodeType":"YulFunctionCall","src":"17423:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17416:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17588:3:27"}],"functionName":{"name":"store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","nodeType":"YulIdentifier","src":"17499:88:27"},"nodeType":"YulFunctionCall","src":"17499:93:27"},"nodeType":"YulExpressionStatement","src":"17499:93:27"},{"nodeType":"YulAssignment","src":"17601:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17612:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"17617:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17608:3:27"},"nodeType":"YulFunctionCall","src":"17608:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17601:3:27"}]}]},"name":"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17394:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17402:3:27","type":""}],"src":"17260:366:27"},{"body":{"nodeType":"YulBlock","src":"17803:248:27","statements":[{"nodeType":"YulAssignment","src":"17813:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17825:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17836:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17821:3:27"},"nodeType":"YulFunctionCall","src":"17821:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17813:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17860:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17871:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17856:3:27"},"nodeType":"YulFunctionCall","src":"17856:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17879:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"17885:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17875:3:27"},"nodeType":"YulFunctionCall","src":"17875:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17849:6:27"},"nodeType":"YulFunctionCall","src":"17849:47:27"},"nodeType":"YulExpressionStatement","src":"17849:47:27"},{"nodeType":"YulAssignment","src":"17905:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18039:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17913:124:27"},"nodeType":"YulFunctionCall","src":"17913:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17905:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17783:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17798:4:27","type":""}],"src":"17632:419:27"},{"body":{"nodeType":"YulBlock","src":"18163:73:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18185:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"18193:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18181:3:27"},"nodeType":"YulFunctionCall","src":"18181:14:27"},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","kind":"string","nodeType":"YulLiteral","src":"18197:31:27","type":"","value":"ERC20Permit: expired deadline"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18174:6:27"},"nodeType":"YulFunctionCall","src":"18174:55:27"},"nodeType":"YulExpressionStatement","src":"18174:55:27"}]},"name":"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18155:6:27","type":""}],"src":"18057:179:27"},{"body":{"nodeType":"YulBlock","src":"18388:220:27","statements":[{"nodeType":"YulAssignment","src":"18398:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18464:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"18469:2:27","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18405:58:27"},"nodeType":"YulFunctionCall","src":"18405:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18398:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18570:3:27"}],"functionName":{"name":"store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","nodeType":"YulIdentifier","src":"18481:88:27"},"nodeType":"YulFunctionCall","src":"18481:93:27"},"nodeType":"YulExpressionStatement","src":"18481:93:27"},{"nodeType":"YulAssignment","src":"18583:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18594:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"18599:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18590:3:27"},"nodeType":"YulFunctionCall","src":"18590:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18583:3:27"}]}]},"name":"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18376:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18384:3:27","type":""}],"src":"18242:366:27"},{"body":{"nodeType":"YulBlock","src":"18785:248:27","statements":[{"nodeType":"YulAssignment","src":"18795:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18807:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18818:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18803:3:27"},"nodeType":"YulFunctionCall","src":"18803:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18795:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18842:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18853:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18838:3:27"},"nodeType":"YulFunctionCall","src":"18838:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18861:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"18867:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18857:3:27"},"nodeType":"YulFunctionCall","src":"18857:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18831:6:27"},"nodeType":"YulFunctionCall","src":"18831:47:27"},"nodeType":"YulExpressionStatement","src":"18831:47:27"},{"nodeType":"YulAssignment","src":"18887:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19021:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18895:124:27"},"nodeType":"YulFunctionCall","src":"18895:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18887:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18765:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18780:4:27","type":""}],"src":"18614:419:27"},{"body":{"nodeType":"YulBlock","src":"19277:537:27","statements":[{"nodeType":"YulAssignment","src":"19287:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19299:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19310:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19295:3:27"},"nodeType":"YulFunctionCall","src":"19295:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19287:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19368:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19381:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19392:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19377:3:27"},"nodeType":"YulFunctionCall","src":"19377:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"19324:43:27"},"nodeType":"YulFunctionCall","src":"19324:71:27"},"nodeType":"YulExpressionStatement","src":"19324:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19449:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19462:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19473:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19458:3:27"},"nodeType":"YulFunctionCall","src":"19458:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19405:43:27"},"nodeType":"YulFunctionCall","src":"19405:72:27"},"nodeType":"YulExpressionStatement","src":"19405:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"19531:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19544:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19555:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19540:3:27"},"nodeType":"YulFunctionCall","src":"19540:18:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19487:43:27"},"nodeType":"YulFunctionCall","src":"19487:72:27"},"nodeType":"YulExpressionStatement","src":"19487:72:27"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"19613:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19626:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19637:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19622:3:27"},"nodeType":"YulFunctionCall","src":"19622:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19569:43:27"},"nodeType":"YulFunctionCall","src":"19569:72:27"},"nodeType":"YulExpressionStatement","src":"19569:72:27"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"19695:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19708:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19719:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19704:3:27"},"nodeType":"YulFunctionCall","src":"19704:19:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19651:43:27"},"nodeType":"YulFunctionCall","src":"19651:73:27"},"nodeType":"YulExpressionStatement","src":"19651:73:27"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"19778:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19791:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19802:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19787:3:27"},"nodeType":"YulFunctionCall","src":"19787:19:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19734:43:27"},"nodeType":"YulFunctionCall","src":"19734:73:27"},"nodeType":"YulExpressionStatement","src":"19734:73:27"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19209:9:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"19221:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"19229:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19237:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19245:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19253:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19261:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19272:4:27","type":""}],"src":"19039:775:27"},{"body":{"nodeType":"YulBlock","src":"19926:74:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19948:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"19956:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19944:3:27"},"nodeType":"YulFunctionCall","src":"19944:14:27"},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"19960:32:27","type":"","value":"ERC20Permit: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19937:6:27"},"nodeType":"YulFunctionCall","src":"19937:56:27"},"nodeType":"YulExpressionStatement","src":"19937:56:27"}]},"name":"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19918:6:27","type":""}],"src":"19820:180:27"},{"body":{"nodeType":"YulBlock","src":"20152:220:27","statements":[{"nodeType":"YulAssignment","src":"20162:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20228:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"20233:2:27","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20169:58:27"},"nodeType":"YulFunctionCall","src":"20169:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20162:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20334:3:27"}],"functionName":{"name":"store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","nodeType":"YulIdentifier","src":"20245:88:27"},"nodeType":"YulFunctionCall","src":"20245:93:27"},"nodeType":"YulExpressionStatement","src":"20245:93:27"},{"nodeType":"YulAssignment","src":"20347:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20358:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"20363:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20354:3:27"},"nodeType":"YulFunctionCall","src":"20354:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20347:3:27"}]}]},"name":"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20140:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20148:3:27","type":""}],"src":"20006:366:27"},{"body":{"nodeType":"YulBlock","src":"20549:248:27","statements":[{"nodeType":"YulAssignment","src":"20559:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20571:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20582:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20567:3:27"},"nodeType":"YulFunctionCall","src":"20567:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20559:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20606:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20617:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20602:3:27"},"nodeType":"YulFunctionCall","src":"20602:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20625:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"20631:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20621:3:27"},"nodeType":"YulFunctionCall","src":"20621:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20595:6:27"},"nodeType":"YulFunctionCall","src":"20595:47:27"},"nodeType":"YulExpressionStatement","src":"20595:47:27"},{"nodeType":"YulAssignment","src":"20651:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20785:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20659:124:27"},"nodeType":"YulFunctionCall","src":"20659:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20651:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20529:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20544:4:27","type":""}],"src":"20378:419:27"},{"body":{"nodeType":"YulBlock","src":"20909:119:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20931:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"20939:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20927:3:27"},"nodeType":"YulFunctionCall","src":"20927:14:27"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"20943:34:27","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20920:6:27"},"nodeType":"YulFunctionCall","src":"20920:58:27"},"nodeType":"YulExpressionStatement","src":"20920:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20999:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"21007:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20995:3:27"},"nodeType":"YulFunctionCall","src":"20995:15:27"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"21012:8:27","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20988:6:27"},"nodeType":"YulFunctionCall","src":"20988:33:27"},"nodeType":"YulExpressionStatement","src":"20988:33:27"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20901:6:27","type":""}],"src":"20803:225:27"},{"body":{"nodeType":"YulBlock","src":"21180:220:27","statements":[{"nodeType":"YulAssignment","src":"21190:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21256:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"21261:2:27","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21197:58:27"},"nodeType":"YulFunctionCall","src":"21197:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21190:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21362:3:27"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"21273:88:27"},"nodeType":"YulFunctionCall","src":"21273:93:27"},"nodeType":"YulExpressionStatement","src":"21273:93:27"},{"nodeType":"YulAssignment","src":"21375:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21386:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"21391:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21382:3:27"},"nodeType":"YulFunctionCall","src":"21382:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21375:3:27"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21168:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21176:3:27","type":""}],"src":"21034:366:27"},{"body":{"nodeType":"YulBlock","src":"21577:248:27","statements":[{"nodeType":"YulAssignment","src":"21587:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21599:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21610:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21595:3:27"},"nodeType":"YulFunctionCall","src":"21595:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21587:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21634:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"21645:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21630:3:27"},"nodeType":"YulFunctionCall","src":"21630:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21653:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"21659:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21649:3:27"},"nodeType":"YulFunctionCall","src":"21649:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21623:6:27"},"nodeType":"YulFunctionCall","src":"21623:47:27"},"nodeType":"YulExpressionStatement","src":"21623:47:27"},{"nodeType":"YulAssignment","src":"21679:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21813:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21687:124:27"},"nodeType":"YulFunctionCall","src":"21687:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21679:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21557:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21572:4:27","type":""}],"src":"21406:419:27"},{"body":{"nodeType":"YulBlock","src":"21937:129:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21959:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"21967:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21955:3:27"},"nodeType":"YulFunctionCall","src":"21955:14:27"},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f","kind":"string","nodeType":"YulLiteral","src":"21971:34:27","type":"","value":"ERC20Votes: total supply risks o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21948:6:27"},"nodeType":"YulFunctionCall","src":"21948:58:27"},"nodeType":"YulExpressionStatement","src":"21948:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22027:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"22035:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22023:3:27"},"nodeType":"YulFunctionCall","src":"22023:15:27"},{"hexValue":"766572666c6f77696e6720766f746573","kind":"string","nodeType":"YulLiteral","src":"22040:18:27","type":"","value":"verflowing votes"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22016:6:27"},"nodeType":"YulFunctionCall","src":"22016:43:27"},"nodeType":"YulExpressionStatement","src":"22016:43:27"}]},"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21929:6:27","type":""}],"src":"21831:235:27"},{"body":{"nodeType":"YulBlock","src":"22218:220:27","statements":[{"nodeType":"YulAssignment","src":"22228:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22294:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"22299:2:27","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22235:58:27"},"nodeType":"YulFunctionCall","src":"22235:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22228:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22400:3:27"}],"functionName":{"name":"store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","nodeType":"YulIdentifier","src":"22311:88:27"},"nodeType":"YulFunctionCall","src":"22311:93:27"},"nodeType":"YulExpressionStatement","src":"22311:93:27"},{"nodeType":"YulAssignment","src":"22413:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22424:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"22429:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22420:3:27"},"nodeType":"YulFunctionCall","src":"22420:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22413:3:27"}]}]},"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22206:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22214:3:27","type":""}],"src":"22072:366:27"},{"body":{"nodeType":"YulBlock","src":"22615:248:27","statements":[{"nodeType":"YulAssignment","src":"22625:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22637:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22648:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22633:3:27"},"nodeType":"YulFunctionCall","src":"22633:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22625:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22672:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"22683:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22668:3:27"},"nodeType":"YulFunctionCall","src":"22668:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22691:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"22697:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22687:3:27"},"nodeType":"YulFunctionCall","src":"22687:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22661:6:27"},"nodeType":"YulFunctionCall","src":"22661:47:27"},"nodeType":"YulExpressionStatement","src":"22661:47:27"},{"nodeType":"YulAssignment","src":"22717:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22851:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22725:124:27"},"nodeType":"YulFunctionCall","src":"22725:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22717:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22595:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22610:4:27","type":""}],"src":"22444:419:27"},{"body":{"nodeType":"YulBlock","src":"22975:75:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22997:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"23005:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22993:3:27"},"nodeType":"YulFunctionCall","src":"22993:14:27"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"23009:33:27","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22986:6:27"},"nodeType":"YulFunctionCall","src":"22986:57:27"},"nodeType":"YulExpressionStatement","src":"22986:57:27"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22967:6:27","type":""}],"src":"22869:181:27"},{"body":{"nodeType":"YulBlock","src":"23202:220:27","statements":[{"nodeType":"YulAssignment","src":"23212:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23278:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"23283:2:27","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23219:58:27"},"nodeType":"YulFunctionCall","src":"23219:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23212:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23384:3:27"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"23295:88:27"},"nodeType":"YulFunctionCall","src":"23295:93:27"},"nodeType":"YulExpressionStatement","src":"23295:93:27"},{"nodeType":"YulAssignment","src":"23397:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23408:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"23413:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23404:3:27"},"nodeType":"YulFunctionCall","src":"23404:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23397:3:27"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23190:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23198:3:27","type":""}],"src":"23056:366:27"},{"body":{"nodeType":"YulBlock","src":"23599:248:27","statements":[{"nodeType":"YulAssignment","src":"23609:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23621:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23632:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23617:3:27"},"nodeType":"YulFunctionCall","src":"23617:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23609:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23656:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"23667:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23652:3:27"},"nodeType":"YulFunctionCall","src":"23652:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23675:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"23681:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23671:3:27"},"nodeType":"YulFunctionCall","src":"23671:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23645:6:27"},"nodeType":"YulFunctionCall","src":"23645:47:27"},"nodeType":"YulExpressionStatement","src":"23645:47:27"},{"nodeType":"YulAssignment","src":"23701:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23835:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23709:124:27"},"nodeType":"YulFunctionCall","src":"23709:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23701:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23579:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23594:4:27","type":""}],"src":"23428:419:27"},{"body":{"nodeType":"YulBlock","src":"23959:120:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23981:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"23989:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23977:3:27"},"nodeType":"YulFunctionCall","src":"23977:14:27"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032","kind":"string","nodeType":"YulLiteral","src":"23993:34:27","type":"","value":"SafeCast: value doesn't fit in 2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23970:6:27"},"nodeType":"YulFunctionCall","src":"23970:58:27"},"nodeType":"YulExpressionStatement","src":"23970:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24049:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"24057:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24045:3:27"},"nodeType":"YulFunctionCall","src":"24045:15:27"},{"hexValue":"32342062697473","kind":"string","nodeType":"YulLiteral","src":"24062:9:27","type":"","value":"24 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24038:6:27"},"nodeType":"YulFunctionCall","src":"24038:34:27"},"nodeType":"YulExpressionStatement","src":"24038:34:27"}]},"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23951:6:27","type":""}],"src":"23853:226:27"},{"body":{"nodeType":"YulBlock","src":"24231:220:27","statements":[{"nodeType":"YulAssignment","src":"24241:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24307:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"24312:2:27","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24248:58:27"},"nodeType":"YulFunctionCall","src":"24248:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24241:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24413:3:27"}],"functionName":{"name":"store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","nodeType":"YulIdentifier","src":"24324:88:27"},"nodeType":"YulFunctionCall","src":"24324:93:27"},"nodeType":"YulExpressionStatement","src":"24324:93:27"},{"nodeType":"YulAssignment","src":"24426:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24437:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"24442:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24433:3:27"},"nodeType":"YulFunctionCall","src":"24433:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24426:3:27"}]}]},"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24219:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24227:3:27","type":""}],"src":"24085:366:27"},{"body":{"nodeType":"YulBlock","src":"24628:248:27","statements":[{"nodeType":"YulAssignment","src":"24638:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24650:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"24661:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24646:3:27"},"nodeType":"YulFunctionCall","src":"24646:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24638:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24685:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"24696:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24681:3:27"},"nodeType":"YulFunctionCall","src":"24681:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24704:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"24710:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24700:3:27"},"nodeType":"YulFunctionCall","src":"24700:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24674:6:27"},"nodeType":"YulFunctionCall","src":"24674:47:27"},"nodeType":"YulExpressionStatement","src":"24674:47:27"},{"nodeType":"YulAssignment","src":"24730:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24864:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24738:124:27"},"nodeType":"YulFunctionCall","src":"24738:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24730:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24608:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24623:4:27","type":""}],"src":"24457:419:27"},{"body":{"nodeType":"YulBlock","src":"24988:119:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25010:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"25018:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25006:3:27"},"nodeType":"YulFunctionCall","src":"25006:14:27"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033","kind":"string","nodeType":"YulLiteral","src":"25022:34:27","type":"","value":"SafeCast: value doesn't fit in 3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24999:6:27"},"nodeType":"YulFunctionCall","src":"24999:58:27"},"nodeType":"YulExpressionStatement","src":"24999:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25078:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"25086:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25074:3:27"},"nodeType":"YulFunctionCall","src":"25074:15:27"},{"hexValue":"322062697473","kind":"string","nodeType":"YulLiteral","src":"25091:8:27","type":"","value":"2 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25067:6:27"},"nodeType":"YulFunctionCall","src":"25067:33:27"},"nodeType":"YulExpressionStatement","src":"25067:33:27"}]},"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24980:6:27","type":""}],"src":"24882:225:27"},{"body":{"nodeType":"YulBlock","src":"25259:220:27","statements":[{"nodeType":"YulAssignment","src":"25269:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25335:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"25340:2:27","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25276:58:27"},"nodeType":"YulFunctionCall","src":"25276:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25269:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25441:3:27"}],"functionName":{"name":"store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","nodeType":"YulIdentifier","src":"25352:88:27"},"nodeType":"YulFunctionCall","src":"25352:93:27"},"nodeType":"YulExpressionStatement","src":"25352:93:27"},{"nodeType":"YulAssignment","src":"25454:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25465:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"25470:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25461:3:27"},"nodeType":"YulFunctionCall","src":"25461:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25454:3:27"}]}]},"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25247:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25255:3:27","type":""}],"src":"25113:366:27"},{"body":{"nodeType":"YulBlock","src":"25656:248:27","statements":[{"nodeType":"YulAssignment","src":"25666:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25678:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25689:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25674:3:27"},"nodeType":"YulFunctionCall","src":"25674:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25666:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25713:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"25724:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25709:3:27"},"nodeType":"YulFunctionCall","src":"25709:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25732:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"25738:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25728:3:27"},"nodeType":"YulFunctionCall","src":"25728:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25702:6:27"},"nodeType":"YulFunctionCall","src":"25702:47:27"},"nodeType":"YulExpressionStatement","src":"25702:47:27"},{"nodeType":"YulAssignment","src":"25758:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25892:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25766:124:27"},"nodeType":"YulFunctionCall","src":"25766:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25758:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25636:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25651:4:27","type":""}],"src":"25485:419:27"},{"body":{"nodeType":"YulBlock","src":"26016:117:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26038:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"26046:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26034:3:27"},"nodeType":"YulFunctionCall","src":"26034:14:27"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"26050:34:27","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26027:6:27"},"nodeType":"YulFunctionCall","src":"26027:58:27"},"nodeType":"YulExpressionStatement","src":"26027:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26106:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"26114:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26102:3:27"},"nodeType":"YulFunctionCall","src":"26102:15:27"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"26119:6:27","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26095:6:27"},"nodeType":"YulFunctionCall","src":"26095:31:27"},"nodeType":"YulExpressionStatement","src":"26095:31:27"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26008:6:27","type":""}],"src":"25910:223:27"},{"body":{"nodeType":"YulBlock","src":"26285:220:27","statements":[{"nodeType":"YulAssignment","src":"26295:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26361:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"26366:2:27","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26302:58:27"},"nodeType":"YulFunctionCall","src":"26302:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26295:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26467:3:27"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"26378:88:27"},"nodeType":"YulFunctionCall","src":"26378:93:27"},"nodeType":"YulExpressionStatement","src":"26378:93:27"},{"nodeType":"YulAssignment","src":"26480:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26491:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"26496:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26487:3:27"},"nodeType":"YulFunctionCall","src":"26487:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26480:3:27"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26273:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26281:3:27","type":""}],"src":"26139:366:27"},{"body":{"nodeType":"YulBlock","src":"26682:248:27","statements":[{"nodeType":"YulAssignment","src":"26692:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26704:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"26715:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26700:3:27"},"nodeType":"YulFunctionCall","src":"26700:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26692:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26739:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"26750:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26735:3:27"},"nodeType":"YulFunctionCall","src":"26735:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26758:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"26764:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26754:3:27"},"nodeType":"YulFunctionCall","src":"26754:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26728:6:27"},"nodeType":"YulFunctionCall","src":"26728:47:27"},"nodeType":"YulExpressionStatement","src":"26728:47:27"},{"nodeType":"YulAssignment","src":"26784:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26918:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26792:124:27"},"nodeType":"YulFunctionCall","src":"26792:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26784:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26662:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26677:4:27","type":""}],"src":"26511:419:27"},{"body":{"nodeType":"YulBlock","src":"27042:115:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27064:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"27072:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27060:3:27"},"nodeType":"YulFunctionCall","src":"27060:14:27"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"27076:34:27","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27053:6:27"},"nodeType":"YulFunctionCall","src":"27053:58:27"},"nodeType":"YulExpressionStatement","src":"27053:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27132:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"27140:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27128:3:27"},"nodeType":"YulFunctionCall","src":"27128:15:27"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"27145:4:27","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27121:6:27"},"nodeType":"YulFunctionCall","src":"27121:29:27"},"nodeType":"YulExpressionStatement","src":"27121:29:27"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27034:6:27","type":""}],"src":"26936:221:27"},{"body":{"nodeType":"YulBlock","src":"27309:220:27","statements":[{"nodeType":"YulAssignment","src":"27319:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27385:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"27390:2:27","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27326:58:27"},"nodeType":"YulFunctionCall","src":"27326:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27319:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27491:3:27"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"27402:88:27"},"nodeType":"YulFunctionCall","src":"27402:93:27"},"nodeType":"YulExpressionStatement","src":"27402:93:27"},{"nodeType":"YulAssignment","src":"27504:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27515:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"27520:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27511:3:27"},"nodeType":"YulFunctionCall","src":"27511:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27504:3:27"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27297:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27305:3:27","type":""}],"src":"27163:366:27"},{"body":{"nodeType":"YulBlock","src":"27706:248:27","statements":[{"nodeType":"YulAssignment","src":"27716:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27728:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27739:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27724:3:27"},"nodeType":"YulFunctionCall","src":"27724:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27716:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27763:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"27774:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27759:3:27"},"nodeType":"YulFunctionCall","src":"27759:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27782:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"27788:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27778:3:27"},"nodeType":"YulFunctionCall","src":"27778:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27752:6:27"},"nodeType":"YulFunctionCall","src":"27752:47:27"},"nodeType":"YulExpressionStatement","src":"27752:47:27"},{"nodeType":"YulAssignment","src":"27808:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27942:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27816:124:27"},"nodeType":"YulFunctionCall","src":"27816:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27808:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27686:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27701:4:27","type":""}],"src":"27535:419:27"},{"body":{"nodeType":"YulBlock","src":"28066:73:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28088:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"28096:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28084:3:27"},"nodeType":"YulFunctionCall","src":"28084:14:27"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"28100:31:27","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28077:6:27"},"nodeType":"YulFunctionCall","src":"28077:55:27"},"nodeType":"YulExpressionStatement","src":"28077:55:27"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28058:6:27","type":""}],"src":"27960:179:27"},{"body":{"nodeType":"YulBlock","src":"28291:220:27","statements":[{"nodeType":"YulAssignment","src":"28301:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28367:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"28372:2:27","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28308:58:27"},"nodeType":"YulFunctionCall","src":"28308:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28301:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28473:3:27"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"28384:88:27"},"nodeType":"YulFunctionCall","src":"28384:93:27"},"nodeType":"YulExpressionStatement","src":"28384:93:27"},{"nodeType":"YulAssignment","src":"28486:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28497:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"28502:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28493:3:27"},"nodeType":"YulFunctionCall","src":"28493:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28486:3:27"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28279:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28287:3:27","type":""}],"src":"28145:366:27"},{"body":{"nodeType":"YulBlock","src":"28688:248:27","statements":[{"nodeType":"YulAssignment","src":"28698:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28710:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28721:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28706:3:27"},"nodeType":"YulFunctionCall","src":"28706:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28698:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28745:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"28756:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28741:3:27"},"nodeType":"YulFunctionCall","src":"28741:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28764:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"28770:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28760:3:27"},"nodeType":"YulFunctionCall","src":"28760:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28734:6:27"},"nodeType":"YulFunctionCall","src":"28734:47:27"},"nodeType":"YulExpressionStatement","src":"28734:47:27"},{"nodeType":"YulAssignment","src":"28790:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28924:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28798:124:27"},"nodeType":"YulFunctionCall","src":"28798:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28790:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28668:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28683:4:27","type":""}],"src":"28517:419:27"},{"body":{"nodeType":"YulBlock","src":"29048:118:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29070:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"29078:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29066:3:27"},"nodeType":"YulFunctionCall","src":"29066:14:27"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"29082:34:27","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29059:6:27"},"nodeType":"YulFunctionCall","src":"29059:58:27"},"nodeType":"YulExpressionStatement","src":"29059:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29138:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"29146:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29134:3:27"},"nodeType":"YulFunctionCall","src":"29134:15:27"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"29151:7:27","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29127:6:27"},"nodeType":"YulFunctionCall","src":"29127:32:27"},"nodeType":"YulExpressionStatement","src":"29127:32:27"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29040:6:27","type":""}],"src":"28942:224:27"},{"body":{"nodeType":"YulBlock","src":"29318:220:27","statements":[{"nodeType":"YulAssignment","src":"29328:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29394:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"29399:2:27","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29335:58:27"},"nodeType":"YulFunctionCall","src":"29335:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29328:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29500:3:27"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"29411:88:27"},"nodeType":"YulFunctionCall","src":"29411:93:27"},"nodeType":"YulExpressionStatement","src":"29411:93:27"},{"nodeType":"YulAssignment","src":"29513:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29524:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"29529:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29520:3:27"},"nodeType":"YulFunctionCall","src":"29520:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29513:3:27"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29306:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29314:3:27","type":""}],"src":"29172:366:27"},{"body":{"nodeType":"YulBlock","src":"29715:248:27","statements":[{"nodeType":"YulAssignment","src":"29725:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29737:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"29748:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29733:3:27"},"nodeType":"YulFunctionCall","src":"29733:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29725:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29772:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"29783:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29768:3:27"},"nodeType":"YulFunctionCall","src":"29768:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29791:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"29797:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29787:3:27"},"nodeType":"YulFunctionCall","src":"29787:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29761:6:27"},"nodeType":"YulFunctionCall","src":"29761:47:27"},"nodeType":"YulExpressionStatement","src":"29761:47:27"},{"nodeType":"YulAssignment","src":"29817:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29951:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29825:124:27"},"nodeType":"YulFunctionCall","src":"29825:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29817:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29695:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29710:4:27","type":""}],"src":"29544:419:27"},{"body":{"nodeType":"YulBlock","src":"30075:116:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30097:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"30105:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30093:3:27"},"nodeType":"YulFunctionCall","src":"30093:14:27"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"30109:34:27","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30086:6:27"},"nodeType":"YulFunctionCall","src":"30086:58:27"},"nodeType":"YulExpressionStatement","src":"30086:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30165:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"30173:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30161:3:27"},"nodeType":"YulFunctionCall","src":"30161:15:27"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"30178:5:27","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30154:6:27"},"nodeType":"YulFunctionCall","src":"30154:30:27"},"nodeType":"YulExpressionStatement","src":"30154:30:27"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30067:6:27","type":""}],"src":"29969:222:27"},{"body":{"nodeType":"YulBlock","src":"30343:220:27","statements":[{"nodeType":"YulAssignment","src":"30353:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30419:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"30424:2:27","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30360:58:27"},"nodeType":"YulFunctionCall","src":"30360:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30353:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30525:3:27"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"30436:88:27"},"nodeType":"YulFunctionCall","src":"30436:93:27"},"nodeType":"YulExpressionStatement","src":"30436:93:27"},{"nodeType":"YulAssignment","src":"30538:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30549:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"30554:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30545:3:27"},"nodeType":"YulFunctionCall","src":"30545:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30538:3:27"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30331:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30339:3:27","type":""}],"src":"30197:366:27"},{"body":{"nodeType":"YulBlock","src":"30740:248:27","statements":[{"nodeType":"YulAssignment","src":"30750:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30762:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"30773:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30758:3:27"},"nodeType":"YulFunctionCall","src":"30758:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30750:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30797:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"30808:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30793:3:27"},"nodeType":"YulFunctionCall","src":"30793:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30816:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"30822:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30812:3:27"},"nodeType":"YulFunctionCall","src":"30812:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30786:6:27"},"nodeType":"YulFunctionCall","src":"30786:47:27"},"nodeType":"YulExpressionStatement","src":"30786:47:27"},{"nodeType":"YulAssignment","src":"30842:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30976:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30850:124:27"},"nodeType":"YulFunctionCall","src":"30850:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30842:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30720:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30735:4:27","type":""}],"src":"30569:419:27"},{"body":{"nodeType":"YulBlock","src":"31100:119:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31122:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"31130:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31118:3:27"},"nodeType":"YulFunctionCall","src":"31118:14:27"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"31134:34:27","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31111:6:27"},"nodeType":"YulFunctionCall","src":"31111:58:27"},"nodeType":"YulExpressionStatement","src":"31111:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31190:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"31198:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31186:3:27"},"nodeType":"YulFunctionCall","src":"31186:15:27"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"31203:8:27","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31179:6:27"},"nodeType":"YulFunctionCall","src":"31179:33:27"},"nodeType":"YulExpressionStatement","src":"31179:33:27"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31092:6:27","type":""}],"src":"30994:225:27"},{"body":{"nodeType":"YulBlock","src":"31371:220:27","statements":[{"nodeType":"YulAssignment","src":"31381:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31447:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"31452:2:27","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31388:58:27"},"nodeType":"YulFunctionCall","src":"31388:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31381:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31553:3:27"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"31464:88:27"},"nodeType":"YulFunctionCall","src":"31464:93:27"},"nodeType":"YulExpressionStatement","src":"31464:93:27"},{"nodeType":"YulAssignment","src":"31566:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31577:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"31582:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31573:3:27"},"nodeType":"YulFunctionCall","src":"31573:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31566:3:27"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31359:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31367:3:27","type":""}],"src":"31225:366:27"},{"body":{"nodeType":"YulBlock","src":"31768:248:27","statements":[{"nodeType":"YulAssignment","src":"31778:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31790:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"31801:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31786:3:27"},"nodeType":"YulFunctionCall","src":"31786:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31778:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31825:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"31836:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31821:3:27"},"nodeType":"YulFunctionCall","src":"31821:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31844:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"31850:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31840:3:27"},"nodeType":"YulFunctionCall","src":"31840:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31814:6:27"},"nodeType":"YulFunctionCall","src":"31814:47:27"},"nodeType":"YulExpressionStatement","src":"31814:47:27"},{"nodeType":"YulAssignment","src":"31870:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32004:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31878:124:27"},"nodeType":"YulFunctionCall","src":"31878:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31870:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31748:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31763:4:27","type":""}],"src":"31597:419:27"},{"body":{"nodeType":"YulBlock","src":"32128:76:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32150:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"32158:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32146:3:27"},"nodeType":"YulFunctionCall","src":"32146:14:27"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"32162:34:27","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32139:6:27"},"nodeType":"YulFunctionCall","src":"32139:58:27"},"nodeType":"YulExpressionStatement","src":"32139:58:27"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32120:6:27","type":""}],"src":"32022:182:27"},{"body":{"nodeType":"YulBlock","src":"32356:220:27","statements":[{"nodeType":"YulAssignment","src":"32366:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32432:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"32437:2:27","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32373:58:27"},"nodeType":"YulFunctionCall","src":"32373:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32366:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32538:3:27"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"32449:88:27"},"nodeType":"YulFunctionCall","src":"32449:93:27"},"nodeType":"YulExpressionStatement","src":"32449:93:27"},{"nodeType":"YulAssignment","src":"32551:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32562:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"32567:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32558:3:27"},"nodeType":"YulFunctionCall","src":"32558:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32551:3:27"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32344:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32352:3:27","type":""}],"src":"32210:366:27"},{"body":{"nodeType":"YulBlock","src":"32753:248:27","statements":[{"nodeType":"YulAssignment","src":"32763:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32775:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"32786:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32771:3:27"},"nodeType":"YulFunctionCall","src":"32771:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32763:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32810:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"32821:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32806:3:27"},"nodeType":"YulFunctionCall","src":"32806:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32829:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"32835:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32825:3:27"},"nodeType":"YulFunctionCall","src":"32825:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32799:6:27"},"nodeType":"YulFunctionCall","src":"32799:47:27"},"nodeType":"YulExpressionStatement","src":"32799:47:27"},{"nodeType":"YulAssignment","src":"32855:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32989:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32863:124:27"},"nodeType":"YulFunctionCall","src":"32863:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32855:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32733:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32748:4:27","type":""}],"src":"32582:419:27"},{"body":{"nodeType":"YulBlock","src":"33133:206:27","statements":[{"nodeType":"YulAssignment","src":"33143:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33155:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"33166:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33151:3:27"},"nodeType":"YulFunctionCall","src":"33151:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33143:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33223:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33236:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"33247:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33232:3:27"},"nodeType":"YulFunctionCall","src":"33232:17:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33179:43:27"},"nodeType":"YulFunctionCall","src":"33179:71:27"},"nodeType":"YulExpressionStatement","src":"33179:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33304:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33317:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"33328:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33313:3:27"},"nodeType":"YulFunctionCall","src":"33313:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33260:43:27"},"nodeType":"YulFunctionCall","src":"33260:72:27"},"nodeType":"YulExpressionStatement","src":"33260:72:27"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33097:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33109:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33117:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33128:4:27","type":""}],"src":"33007:332:27"},{"body":{"nodeType":"YulBlock","src":"33555:454:27","statements":[{"nodeType":"YulAssignment","src":"33565:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33577:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"33588:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33573:3:27"},"nodeType":"YulFunctionCall","src":"33573:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33565:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33646:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33659:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"33670:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33655:3:27"},"nodeType":"YulFunctionCall","src":"33655:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"33602:43:27"},"nodeType":"YulFunctionCall","src":"33602:71:27"},"nodeType":"YulExpressionStatement","src":"33602:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33727:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33740:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"33751:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33736:3:27"},"nodeType":"YulFunctionCall","src":"33736:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"33683:43:27"},"nodeType":"YulFunctionCall","src":"33683:72:27"},"nodeType":"YulExpressionStatement","src":"33683:72:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"33809:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33822:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"33833:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33818:3:27"},"nodeType":"YulFunctionCall","src":"33818:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"33765:43:27"},"nodeType":"YulFunctionCall","src":"33765:72:27"},"nodeType":"YulExpressionStatement","src":"33765:72:27"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"33891:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33904:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"33915:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33900:3:27"},"nodeType":"YulFunctionCall","src":"33900:18:27"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33847:43:27"},"nodeType":"YulFunctionCall","src":"33847:72:27"},"nodeType":"YulExpressionStatement","src":"33847:72:27"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"33973:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33986:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"33997:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33982:3:27"},"nodeType":"YulFunctionCall","src":"33982:19:27"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"33929:43:27"},"nodeType":"YulFunctionCall","src":"33929:73:27"},"nodeType":"YulExpressionStatement","src":"33929:73:27"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33495:9:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"33507:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"33515:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"33523:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33531:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33539:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33550:4:27","type":""}],"src":"33345:664:27"},{"body":{"nodeType":"YulBlock","src":"34043:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34060:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"34063:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34053:6:27"},"nodeType":"YulFunctionCall","src":"34053:88:27"},"nodeType":"YulExpressionStatement","src":"34053:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34157:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"34160:4:27","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34150:6:27"},"nodeType":"YulFunctionCall","src":"34150:15:27"},"nodeType":"YulExpressionStatement","src":"34150:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34181:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"34184:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"34174:6:27"},"nodeType":"YulFunctionCall","src":"34174:15:27"},"nodeType":"YulExpressionStatement","src":"34174:15:27"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"34015:180:27"},{"body":{"nodeType":"YulBlock","src":"34243:143:27","statements":[{"nodeType":"YulAssignment","src":"34253:25:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34276:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34258:17:27"},"nodeType":"YulFunctionCall","src":"34258:20:27"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"34253:1:27"}]},{"nodeType":"YulAssignment","src":"34287:25:27","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34310:1:27"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"34292:17:27"},"nodeType":"YulFunctionCall","src":"34292:20:27"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"34287:1:27"}]},{"body":{"nodeType":"YulBlock","src":"34334:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"34336:16:27"},"nodeType":"YulFunctionCall","src":"34336:18:27"},"nodeType":"YulExpressionStatement","src":"34336:18:27"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"34331:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34324:6:27"},"nodeType":"YulFunctionCall","src":"34324:9:27"},"nodeType":"YulIf","src":"34321:35:27"},{"nodeType":"YulAssignment","src":"34366:14:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"34375:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"34378:1:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"34371:3:27"},"nodeType":"YulFunctionCall","src":"34371:9:27"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"34366:1:27"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"34232:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"34235:1:27","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"34241:1:27","type":""}],"src":"34201:185:27"},{"body":{"nodeType":"YulBlock","src":"34498:64:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34520:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"34528:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34516:3:27"},"nodeType":"YulFunctionCall","src":"34516:14:27"},{"hexValue":"5061757361626c653a206e6f7420706175736564","kind":"string","nodeType":"YulLiteral","src":"34532:22:27","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34509:6:27"},"nodeType":"YulFunctionCall","src":"34509:46:27"},"nodeType":"YulExpressionStatement","src":"34509:46:27"}]},"name":"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34490:6:27","type":""}],"src":"34392:170:27"},{"body":{"nodeType":"YulBlock","src":"34714:220:27","statements":[{"nodeType":"YulAssignment","src":"34724:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34790:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"34795:2:27","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34731:58:27"},"nodeType":"YulFunctionCall","src":"34731:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34724:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34896:3:27"}],"functionName":{"name":"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","nodeType":"YulIdentifier","src":"34807:88:27"},"nodeType":"YulFunctionCall","src":"34807:93:27"},"nodeType":"YulExpressionStatement","src":"34807:93:27"},{"nodeType":"YulAssignment","src":"34909:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34920:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"34925:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34916:3:27"},"nodeType":"YulFunctionCall","src":"34916:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34909:3:27"}]}]},"name":"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34702:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34710:3:27","type":""}],"src":"34568:366:27"},{"body":{"nodeType":"YulBlock","src":"35111:248:27","statements":[{"nodeType":"YulAssignment","src":"35121:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35133:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"35144:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35129:3:27"},"nodeType":"YulFunctionCall","src":"35129:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35121:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35168:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"35179:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35164:3:27"},"nodeType":"YulFunctionCall","src":"35164:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35187:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"35193:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35183:3:27"},"nodeType":"YulFunctionCall","src":"35183:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35157:6:27"},"nodeType":"YulFunctionCall","src":"35157:47:27"},"nodeType":"YulExpressionStatement","src":"35157:47:27"},{"nodeType":"YulAssignment","src":"35213:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35347:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35221:124:27"},"nodeType":"YulFunctionCall","src":"35221:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35213:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35091:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35106:4:27","type":""}],"src":"34940:419:27"},{"body":{"nodeType":"YulBlock","src":"35471:60:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35493:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"35501:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35489:3:27"},"nodeType":"YulFunctionCall","src":"35489:14:27"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"35505:18:27","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35482:6:27"},"nodeType":"YulFunctionCall","src":"35482:42:27"},"nodeType":"YulExpressionStatement","src":"35482:42:27"}]},"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35463:6:27","type":""}],"src":"35365:166:27"},{"body":{"nodeType":"YulBlock","src":"35683:220:27","statements":[{"nodeType":"YulAssignment","src":"35693:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35759:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"35764:2:27","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35700:58:27"},"nodeType":"YulFunctionCall","src":"35700:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35693:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35865:3:27"}],"functionName":{"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulIdentifier","src":"35776:88:27"},"nodeType":"YulFunctionCall","src":"35776:93:27"},"nodeType":"YulExpressionStatement","src":"35776:93:27"},{"nodeType":"YulAssignment","src":"35878:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35889:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"35894:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35885:3:27"},"nodeType":"YulFunctionCall","src":"35885:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35878:3:27"}]}]},"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35671:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35679:3:27","type":""}],"src":"35537:366:27"},{"body":{"nodeType":"YulBlock","src":"36080:248:27","statements":[{"nodeType":"YulAssignment","src":"36090:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36102:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"36113:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36098:3:27"},"nodeType":"YulFunctionCall","src":"36098:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36090:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36137:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"36148:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36133:3:27"},"nodeType":"YulFunctionCall","src":"36133:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36156:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"36162:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36152:3:27"},"nodeType":"YulFunctionCall","src":"36152:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36126:6:27"},"nodeType":"YulFunctionCall","src":"36126:47:27"},"nodeType":"YulExpressionStatement","src":"36126:47:27"},{"nodeType":"YulAssignment","src":"36182:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36316:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36190:124:27"},"nodeType":"YulFunctionCall","src":"36190:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36182:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36060:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36075:4:27","type":""}],"src":"35909:419:27"},{"body":{"nodeType":"YulBlock","src":"36448:34:27","statements":[{"nodeType":"YulAssignment","src":"36458:18:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"36473:3:27"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"36458:11:27"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36420:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"36425:6:27","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"36436:11:27","type":""}],"src":"36334:148:27"},{"body":{"nodeType":"YulBlock","src":"36594:108:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36616:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"36624:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36612:3:27"},"nodeType":"YulFunctionCall","src":"36612:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"36628:66:27","type":"","value":"0x1901000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36605:6:27"},"nodeType":"YulFunctionCall","src":"36605:90:27"},"nodeType":"YulExpressionStatement","src":"36605:90:27"}]},"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36586:6:27","type":""}],"src":"36488:214:27"},{"body":{"nodeType":"YulBlock","src":"36872:236:27","statements":[{"nodeType":"YulAssignment","src":"36882:91:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36966:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"36971:1:27","type":"","value":"2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36889:76:27"},"nodeType":"YulFunctionCall","src":"36889:84:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36882:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37071:3:27"}],"functionName":{"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nodeType":"YulIdentifier","src":"36982:88:27"},"nodeType":"YulFunctionCall","src":"36982:93:27"},"nodeType":"YulExpressionStatement","src":"36982:93:27"},{"nodeType":"YulAssignment","src":"37084:18:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37095:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"37100:1:27","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37091:3:27"},"nodeType":"YulFunctionCall","src":"37091:11:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37084:3:27"}]}]},"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36860:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36868:3:27","type":""}],"src":"36708:400:27"},{"body":{"nodeType":"YulBlock","src":"37161:32:27","statements":[{"nodeType":"YulAssignment","src":"37171:16:27","value":{"name":"value","nodeType":"YulIdentifier","src":"37182:5:27"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"37171:7:27"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37143:5:27","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"37153:7:27","type":""}],"src":"37114:79:27"},{"body":{"nodeType":"YulBlock","src":"37282:74:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37299:3:27"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37342:5:27"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"37324:17:27"},"nodeType":"YulFunctionCall","src":"37324:24:27"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"37304:19:27"},"nodeType":"YulFunctionCall","src":"37304:45:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37292:6:27"},"nodeType":"YulFunctionCall","src":"37292:58:27"},"nodeType":"YulExpressionStatement","src":"37292:58:27"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37270:5:27","type":""},{"name":"pos","nodeType":"YulTypedName","src":"37277:3:27","type":""}],"src":"37199:157:27"},{"body":{"nodeType":"YulBlock","src":"37607:418:27","statements":[{"nodeType":"YulAssignment","src":"37618:155:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37769:3:27"}],"functionName":{"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37625:142:27"},"nodeType":"YulFunctionCall","src":"37625:148:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37618:3:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37845:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"37854:3:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37783:61:27"},"nodeType":"YulFunctionCall","src":"37783:75:27"},"nodeType":"YulExpressionStatement","src":"37783:75:27"},{"nodeType":"YulAssignment","src":"37867:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37878:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"37883:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37874:3:27"},"nodeType":"YulFunctionCall","src":"37874:12:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37867:3:27"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"37958:6:27"},{"name":"pos","nodeType":"YulIdentifier","src":"37967:3:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37896:61:27"},"nodeType":"YulFunctionCall","src":"37896:75:27"},"nodeType":"YulExpressionStatement","src":"37896:75:27"},{"nodeType":"YulAssignment","src":"37980:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37991:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"37996:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37987:3:27"},"nodeType":"YulFunctionCall","src":"37987:12:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37980:3:27"}]},{"nodeType":"YulAssignment","src":"38009:10:27","value":{"name":"pos","nodeType":"YulIdentifier","src":"38016:3:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38009:3:27"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37578:3:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37584:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37592:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37603:3:27","type":""}],"src":"37362:663:27"},{"body":{"nodeType":"YulBlock","src":"38209:367:27","statements":[{"nodeType":"YulAssignment","src":"38219:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38231:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"38242:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38227:3:27"},"nodeType":"YulFunctionCall","src":"38227:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38219:4:27"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"38300:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38313:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"38324:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38309:3:27"},"nodeType":"YulFunctionCall","src":"38309:17:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"38256:43:27"},"nodeType":"YulFunctionCall","src":"38256:71:27"},"nodeType":"YulExpressionStatement","src":"38256:71:27"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"38377:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38390:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"38401:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38386:3:27"},"nodeType":"YulFunctionCall","src":"38386:18:27"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"38337:39:27"},"nodeType":"YulFunctionCall","src":"38337:68:27"},"nodeType":"YulExpressionStatement","src":"38337:68:27"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"38459:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38472:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"38483:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38468:3:27"},"nodeType":"YulFunctionCall","src":"38468:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"38415:43:27"},"nodeType":"YulFunctionCall","src":"38415:72:27"},"nodeType":"YulExpressionStatement","src":"38415:72:27"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"38541:6:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38554:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"38565:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38550:3:27"},"nodeType":"YulFunctionCall","src":"38550:18:27"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"38497:43:27"},"nodeType":"YulFunctionCall","src":"38497:72:27"},"nodeType":"YulExpressionStatement","src":"38497:72:27"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38157:9:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"38169:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"38177:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"38185:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"38193:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38204:4:27","type":""}],"src":"38031:545:27"},{"body":{"nodeType":"YulBlock","src":"38610:152:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38627:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38630:77:27","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38620:6:27"},"nodeType":"YulFunctionCall","src":"38620:88:27"},"nodeType":"YulExpressionStatement","src":"38620:88:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38724:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"38727:4:27","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38717:6:27"},"nodeType":"YulFunctionCall","src":"38717:15:27"},"nodeType":"YulExpressionStatement","src":"38717:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38748:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"38751:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"38741:6:27"},"nodeType":"YulFunctionCall","src":"38741:15:27"},"nodeType":"YulExpressionStatement","src":"38741:15:27"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"38582:180:27"},{"body":{"nodeType":"YulBlock","src":"38874:68:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38896:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"38904:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38892:3:27"},"nodeType":"YulFunctionCall","src":"38892:14:27"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"38908:26:27","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38885:6:27"},"nodeType":"YulFunctionCall","src":"38885:50:27"},"nodeType":"YulExpressionStatement","src":"38885:50:27"}]},"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38866:6:27","type":""}],"src":"38768:174:27"},{"body":{"nodeType":"YulBlock","src":"39094:220:27","statements":[{"nodeType":"YulAssignment","src":"39104:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39170:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"39175:2:27","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39111:58:27"},"nodeType":"YulFunctionCall","src":"39111:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39104:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39276:3:27"}],"functionName":{"name":"store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","nodeType":"YulIdentifier","src":"39187:88:27"},"nodeType":"YulFunctionCall","src":"39187:93:27"},"nodeType":"YulExpressionStatement","src":"39187:93:27"},{"nodeType":"YulAssignment","src":"39289:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39300:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"39305:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39296:3:27"},"nodeType":"YulFunctionCall","src":"39296:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39289:3:27"}]}]},"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39082:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39090:3:27","type":""}],"src":"38948:366:27"},{"body":{"nodeType":"YulBlock","src":"39491:248:27","statements":[{"nodeType":"YulAssignment","src":"39501:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39513:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"39524:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39509:3:27"},"nodeType":"YulFunctionCall","src":"39509:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39501:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39548:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"39559:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39544:3:27"},"nodeType":"YulFunctionCall","src":"39544:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39567:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"39573:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39563:3:27"},"nodeType":"YulFunctionCall","src":"39563:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39537:6:27"},"nodeType":"YulFunctionCall","src":"39537:47:27"},"nodeType":"YulExpressionStatement","src":"39537:47:27"},{"nodeType":"YulAssignment","src":"39593:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39727:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39601:124:27"},"nodeType":"YulFunctionCall","src":"39601:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39593:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39471:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39486:4:27","type":""}],"src":"39320:419:27"},{"body":{"nodeType":"YulBlock","src":"39851:75:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39873:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"39881:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39869:3:27"},"nodeType":"YulFunctionCall","src":"39869:14:27"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"39885:33:27","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39862:6:27"},"nodeType":"YulFunctionCall","src":"39862:57:27"},"nodeType":"YulExpressionStatement","src":"39862:57:27"}]},"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39843:6:27","type":""}],"src":"39745:181:27"},{"body":{"nodeType":"YulBlock","src":"40078:220:27","statements":[{"nodeType":"YulAssignment","src":"40088:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40154:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"40159:2:27","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40095:58:27"},"nodeType":"YulFunctionCall","src":"40095:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40088:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40260:3:27"}],"functionName":{"name":"store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","nodeType":"YulIdentifier","src":"40171:88:27"},"nodeType":"YulFunctionCall","src":"40171:93:27"},"nodeType":"YulExpressionStatement","src":"40171:93:27"},{"nodeType":"YulAssignment","src":"40273:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40284:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"40289:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40280:3:27"},"nodeType":"YulFunctionCall","src":"40280:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40273:3:27"}]}]},"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40066:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40074:3:27","type":""}],"src":"39932:366:27"},{"body":{"nodeType":"YulBlock","src":"40475:248:27","statements":[{"nodeType":"YulAssignment","src":"40485:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40497:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"40508:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40493:3:27"},"nodeType":"YulFunctionCall","src":"40493:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40485:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40532:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"40543:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40528:3:27"},"nodeType":"YulFunctionCall","src":"40528:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40551:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"40557:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40547:3:27"},"nodeType":"YulFunctionCall","src":"40547:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40521:6:27"},"nodeType":"YulFunctionCall","src":"40521:47:27"},"nodeType":"YulExpressionStatement","src":"40521:47:27"},{"nodeType":"YulAssignment","src":"40577:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40711:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40585:124:27"},"nodeType":"YulFunctionCall","src":"40585:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40577:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40455:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40470:4:27","type":""}],"src":"40304:419:27"},{"body":{"nodeType":"YulBlock","src":"40835:115:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40857:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"40865:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40853:3:27"},"nodeType":"YulFunctionCall","src":"40853:14:27"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"40869:34:27","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40846:6:27"},"nodeType":"YulFunctionCall","src":"40846:58:27"},"nodeType":"YulExpressionStatement","src":"40846:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40925:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"40933:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40921:3:27"},"nodeType":"YulFunctionCall","src":"40921:15:27"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"40938:4:27","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40914:6:27"},"nodeType":"YulFunctionCall","src":"40914:29:27"},"nodeType":"YulExpressionStatement","src":"40914:29:27"}]},"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40827:6:27","type":""}],"src":"40729:221:27"},{"body":{"nodeType":"YulBlock","src":"41102:220:27","statements":[{"nodeType":"YulAssignment","src":"41112:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41178:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"41183:2:27","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41119:58:27"},"nodeType":"YulFunctionCall","src":"41119:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41112:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41284:3:27"}],"functionName":{"name":"store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","nodeType":"YulIdentifier","src":"41195:88:27"},"nodeType":"YulFunctionCall","src":"41195:93:27"},"nodeType":"YulExpressionStatement","src":"41195:93:27"},{"nodeType":"YulAssignment","src":"41297:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41308:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"41313:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41304:3:27"},"nodeType":"YulFunctionCall","src":"41304:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41297:3:27"}]}]},"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41090:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41098:3:27","type":""}],"src":"40956:366:27"},{"body":{"nodeType":"YulBlock","src":"41499:248:27","statements":[{"nodeType":"YulAssignment","src":"41509:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41521:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"41532:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41517:3:27"},"nodeType":"YulFunctionCall","src":"41517:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41509:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41556:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"41567:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41552:3:27"},"nodeType":"YulFunctionCall","src":"41552:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41575:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"41581:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41571:3:27"},"nodeType":"YulFunctionCall","src":"41571:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41545:6:27"},"nodeType":"YulFunctionCall","src":"41545:47:27"},"nodeType":"YulExpressionStatement","src":"41545:47:27"},{"nodeType":"YulAssignment","src":"41601:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41735:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41609:124:27"},"nodeType":"YulFunctionCall","src":"41609:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41601:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41479:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41494:4:27","type":""}],"src":"41328:419:27"},{"body":{"nodeType":"YulBlock","src":"41859:114:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41881:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"41889:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41877:3:27"},"nodeType":"YulFunctionCall","src":"41877:14:27"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"41893:34:27","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41870:6:27"},"nodeType":"YulFunctionCall","src":"41870:58:27"},"nodeType":"YulExpressionStatement","src":"41870:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41949:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"41957:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41945:3:27"},"nodeType":"YulFunctionCall","src":"41945:15:27"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"41962:3:27","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41938:6:27"},"nodeType":"YulFunctionCall","src":"41938:28:27"},"nodeType":"YulExpressionStatement","src":"41938:28:27"}]},"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41851:6:27","type":""}],"src":"41753:220:27"},{"body":{"nodeType":"YulBlock","src":"42125:220:27","statements":[{"nodeType":"YulAssignment","src":"42135:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42201:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"42206:2:27","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42142:58:27"},"nodeType":"YulFunctionCall","src":"42142:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42135:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42307:3:27"}],"functionName":{"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulIdentifier","src":"42218:88:27"},"nodeType":"YulFunctionCall","src":"42218:93:27"},"nodeType":"YulExpressionStatement","src":"42218:93:27"},{"nodeType":"YulAssignment","src":"42320:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42331:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"42336:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42327:3:27"},"nodeType":"YulFunctionCall","src":"42327:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42320:3:27"}]}]},"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42113:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42121:3:27","type":""}],"src":"41979:366:27"},{"body":{"nodeType":"YulBlock","src":"42522:248:27","statements":[{"nodeType":"YulAssignment","src":"42532:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42544:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"42555:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42540:3:27"},"nodeType":"YulFunctionCall","src":"42540:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42532:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42579:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"42590:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42575:3:27"},"nodeType":"YulFunctionCall","src":"42575:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42598:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"42604:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42594:3:27"},"nodeType":"YulFunctionCall","src":"42594:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42568:6:27"},"nodeType":"YulFunctionCall","src":"42568:47:27"},"nodeType":"YulExpressionStatement","src":"42568:47:27"},{"nodeType":"YulAssignment","src":"42624:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42758:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42632:124:27"},"nodeType":"YulFunctionCall","src":"42632:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42624:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42502:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42517:4:27","type":""}],"src":"42351:419:27"},{"body":{"nodeType":"YulBlock","src":"42882:115:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42904:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"42912:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42900:3:27"},"nodeType":"YulFunctionCall","src":"42900:14:27"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"42916:34:27","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42893:6:27"},"nodeType":"YulFunctionCall","src":"42893:58:27"},"nodeType":"YulExpressionStatement","src":"42893:58:27"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42972:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"42980:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42968:3:27"},"nodeType":"YulFunctionCall","src":"42968:15:27"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"42985:4:27","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42961:6:27"},"nodeType":"YulFunctionCall","src":"42961:29:27"},"nodeType":"YulExpressionStatement","src":"42961:29:27"}]},"name":"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"42874:6:27","type":""}],"src":"42776:221:27"},{"body":{"nodeType":"YulBlock","src":"43149:220:27","statements":[{"nodeType":"YulAssignment","src":"43159:74:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43225:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"43230:2:27","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43166:58:27"},"nodeType":"YulFunctionCall","src":"43166:67:27"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43159:3:27"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43331:3:27"}],"functionName":{"name":"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","nodeType":"YulIdentifier","src":"43242:88:27"},"nodeType":"YulFunctionCall","src":"43242:93:27"},"nodeType":"YulExpressionStatement","src":"43242:93:27"},{"nodeType":"YulAssignment","src":"43344:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43355:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"43360:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43351:3:27"},"nodeType":"YulFunctionCall","src":"43351:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"43344:3:27"}]}]},"name":"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"43137:3:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"43145:3:27","type":""}],"src":"43003:366:27"},{"body":{"nodeType":"YulBlock","src":"43546:248:27","statements":[{"nodeType":"YulAssignment","src":"43556:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43568:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"43579:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43564:3:27"},"nodeType":"YulFunctionCall","src":"43564:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43556:4:27"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43603:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"43614:1:27","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43599:3:27"},"nodeType":"YulFunctionCall","src":"43599:17:27"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43622:4:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"43628:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43618:3:27"},"nodeType":"YulFunctionCall","src":"43618:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43592:6:27"},"nodeType":"YulFunctionCall","src":"43592:47:27"},"nodeType":"YulExpressionStatement","src":"43592:47:27"},{"nodeType":"YulAssignment","src":"43648:139:27","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43782:4:27"}],"functionName":{"name":"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43656:124:27"},"nodeType":"YulFunctionCall","src":"43656:131:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43648:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43526:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43541:4:27","type":""}],"src":"43375:419:27"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function cleanup_t_uint224(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint224_to_t_uint224(value, pos) {\n        mstore(pos, cleanup_t_uint224(value))\n    }\n\n    // struct ERC20Votes.Checkpoint -> struct ERC20Votes.Checkpoint\n    function abi_encode_t_struct$_Checkpoint_$1024_memory_ptr_to_t_struct$_Checkpoint_$1024_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // fromBlock\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // votes\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint224_to_t_uint224(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Checkpoint_$1024_memory_ptr__to_t_struct$_Checkpoint_$1024_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_Checkpoint_$1024_memory_ptr_to_t_struct$_Checkpoint_$1024_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: block not yet mined\")\n\n    }\n\n    function abi_encode_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_06e5bbaaa109e1d058e1026fbdce9ec5e51f304d46ad524d922a17511e41fd0d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: signature expired\")\n\n    }\n\n    function abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: invalid nonce\")\n\n    }\n\n    function abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Permit: expired deadline\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Permit: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20Votes: total supply risks o\")\n\n        mstore(add(memPtr, 32), \"verflowing votes\")\n\n    }\n\n    function abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 2\")\n\n        mstore(add(memPtr, 32), \"24 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeCast: value doesn't fit in 3\")\n\n        mstore(add(memPtr, 32), \"2 bits\")\n\n    }\n\n    function abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(memPtr) {\n\n        mstore(add(memPtr, 0), 0x1901000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(pos)\n        end := add(pos, 2)\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature length\")\n\n    }\n\n    function abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ECDSA: invalid signature 's' val\")\n\n        mstore(add(memPtr, 32), \"ue\")\n\n    }\n\n    function abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn amount exceeds balan\")\n\n        mstore(add(memPtr, 32), \"ce\")\n\n    }\n\n    function abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"4136":[{"length":32,"start":6540}],"4138":[{"length":32,"start":6499}],"4140":[{"length":32,"start":6413}],"4142":[{"length":32,"start":6616}],"4144":[{"length":32,"start":6649}],"4146":[{"length":32,"start":6583}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101e55760003560e01c806370a082311161010f5780639ab24eb0116100a2578063d505accf11610071578063d505accf146105a6578063dd62ed3e146105c2578063f1127ed8146105f2578063f2fde38b14610622576101e5565b80639ab24eb0146104fa578063a457c2d71461052a578063a9059cbb1461055a578063c3cda5201461058a576101e5565b80638456cb59116100de5780638456cb59146104845780638da5cb5b1461048e5780638e539e8c146104ac57806395d89b41146104dc576101e5565b806370a08231146103fe578063715018a61461042e57806379cc6790146104385780637ecebe0014610454576101e5565b80633a46b1a811610187578063587cde1e11610156578063587cde1e146103645780635c19a95c146103945780635c975abb146103b05780636fcfff45146103ce576101e5565b80633a46b1a8146102f25780633f4ba83a1461032257806340c10f191461032c57806342966c6814610348576101e5565b806323b872dd116101c357806323b872dd14610256578063313ce567146102865780633644e515146102a457806339509351146102c2576101e5565b806306fdde03146101ea578063095ea7b31461020857806318160ddd14610238575b600080fd5b6101f261063e565b6040516101ff9190612cd2565b60405180910390f35b610222600480360381019061021d9190612d8d565b6106d0565b60405161022f9190612de8565b60405180910390f35b6102406106f3565b60405161024d9190612e12565b60405180910390f35b610270600480360381019061026b9190612e2d565b6106fd565b60405161027d9190612de8565b60405180910390f35b61028e61072c565b60405161029b9190612e9c565b60405180910390f35b6102ac610735565b6040516102b99190612ed0565b60405180910390f35b6102dc60048036038101906102d79190612d8d565b610744565b6040516102e99190612de8565b60405180910390f35b61030c60048036038101906103079190612d8d565b61077b565b6040516103199190612e12565b60405180910390f35b61032a61080f565b005b61034660048036038101906103419190612d8d565b610821565b005b610362600480360381019061035d9190612eeb565b610837565b005b61037e60048036038101906103799190612f18565b61084b565b60405161038b9190612f54565b60405180910390f35b6103ae60048036038101906103a99190612f18565b6108b4565b005b6103b86108c8565b6040516103c59190612de8565b60405180910390f35b6103e860048036038101906103e39190612f18565b6108df565b6040516103f59190612f8e565b60405180910390f35b61041860048036038101906104139190612f18565b610933565b6040516104259190612e12565b60405180910390f35b61043661097b565b005b610452600480360381019061044d9190612d8d565b61098f565b005b61046e60048036038101906104699190612f18565b6109af565b60405161047b9190612e12565b60405180910390f35b61048c6109ff565b005b610496610a11565b6040516104a39190612f54565b60405180910390f35b6104c660048036038101906104c19190612eeb565b610a3b565b6040516104d39190612e12565b60405180910390f35b6104e4610a91565b6040516104f19190612cd2565b60405180910390f35b610514600480360381019061050f9190612f18565b610b23565b6040516105219190612e12565b60405180910390f35b610544600480360381019061053f9190612d8d565b610c34565b6040516105519190612de8565b60405180910390f35b610574600480360381019061056f9190612d8d565b610cab565b6040516105819190612de8565b60405180910390f35b6105a4600480360381019061059f9190613001565b610cce565b005b6105c060048036038101906105bb919061308e565b610dd2565b005b6105dc60048036038101906105d79190613130565b610f14565b6040516105e99190612e12565b60405180910390f35b61060c6004803603810190610607919061319c565b610f9b565b6040516106199190613251565b60405180910390f35b61063c60048036038101906106379190612f18565b6110ab565b005b60606003805461064d9061329b565b80601f01602080910402602001604051908101604052809291908181526020018280546106799061329b565b80156106c65780601f1061069b576101008083540402835291602001916106c6565b820191906000526020600020905b8154815290600101906020018083116106a957829003601f168201915b5050505050905090565b6000806106db611432565b90506106e881858561143a565b600191505092915050565b6000600254905090565b600080610708611432565b9050610715858285611605565b610720858585611691565b60019150509392505050565b60006012905090565b600061073f611909565b905090565b60008061074f611432565b90506107708185856107618589610f14565b61076b91906132fc565b61143a565b600191505092915050565b60004382106107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b69061339e565b60405180910390fd5b610807600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083611a23565b905092915050565b610817611b74565b61081f611bf2565b565b610829611b74565b6108338282611c55565b5050565b610848610842611432565b82611c63565b50565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6108c56108bf611432565b82611c71565b50565b6000600560009054906101000a900460ff16905090565b600061092c600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611394565b9050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610983611b74565b61098d6000611d8b565b565b6109a18261099b611432565b83611605565b6109ab8282611c63565b5050565b60006109f8600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611e51565b9050919050565b610a07611b74565b610a0f611e5f565b565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000438210610a7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a769061339e565b60405180910390fd5b610a8a600a83611a23565b9050919050565b606060048054610aa09061329b565b80601f0160208091040260200160405190810160405280929190818152602001828054610acc9061329b565b8015610b195780601f10610aee57610100808354040283529160200191610b19565b820191906000526020600020905b815481529060010190602001808311610afc57829003601f168201915b5050505050905090565b600080600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060008114610c0b57600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600182610bbf91906133be565b81548110610bd057610bcf6133f2565b5b9060005260206000200160000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16610c0e565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16915050919050565b600080610c3f611432565b90506000610c4d8286610f14565b905083811015610c92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8990613493565b60405180910390fd5b610c9f828686840361143a565b60019250505092915050565b600080610cb6611432565b9050610cc3818585611691565b600191505092915050565b83421115610d11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d08906134ff565b60405180910390fd5b6000610d73610d6b7fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf898989604051602001610d50949392919061351f565b60405160208183030381529060405280519060200120611ec2565b858585611edc565b9050610d7e81611f07565b8614610dbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db6906135b0565b60405180910390fd5b610dc98188611c71565b50505050505050565b83421115610e15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0c9061361c565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610e448c611f07565b89604051602001610e5a9695949392919061363c565b6040516020818303038152906040528051906020012090506000610e7d82611ec2565b90506000610e8d82878787611edc565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610efd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef4906136e9565b60405180910390fd5b610f088a8a8a61143a565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610fa3612bfb565b600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208263ffffffff1681548110610ffa57610ff96133f2565b5b906000526020600020016040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b6110b3611b74565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611123576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111a9061377b565b60405180910390fd5b61112c81611d8b565b50565b61113982826111bc565b611141611f65565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166111676106f3565b11156111a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119f9061380d565b60405180910390fd5b6111b6600a61131383611f89565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561122c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122390613879565b60405180910390fd5b61123860008383612258565b806002600082825461124a91906132fc565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516112fb9190612e12565b60405180910390a361130f60008383612270565b5050565b6000818361132191906132fc565b905092915050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff801682111561138c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113839061390b565b60405180910390fd5b819050919050565b600063ffffffff80168211156113df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d69061399d565b60405180910390fd5b819050919050565b505050565b6113f7838383611417565b6114126114038461084b565b61140c8461084b565b83612280565b505050565b505050565b6000818361142a91906133be565b905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156114aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a190613a2f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561151a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151190613ac1565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516115f89190612e12565b60405180910390a3505050565b60006116118484610f14565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461168b578181101561167d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167490613b2d565b60405180910390fd5b61168a848484840361143a565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611701576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f890613bbf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611771576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161176890613c51565b60405180910390fd5b61177c838383612258565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611802576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f990613ce3565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516118f09190612e12565b60405180910390a3611903848484612270565b50505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561198557507f000000000000000000000000000000000000000000000000000000000000000046145b156119b2577f00000000000000000000000000000000000000000000000000000000000000009050611a20565b611a1d7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612479565b90505b90565b600080838054905090506000808290506005831115611a99576000611a47846124b3565b84611a5291906133be565b905085611a5f88836125ad565b60000160009054906101000a900463ffffffff1663ffffffff161115611a8757809150611a97565b600181611a9491906132fc565b92505b505b5b80821015611af9576000611aae83836125c2565b905085611abb88836125ad565b60000160009054906101000a900463ffffffff1663ffffffff161115611ae357809150611af3565b600181611af091906132fc565b92505b50611a9a565b60008114611b4857611b1786600183611b1291906133be565b6125ad565b60000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16611b4b565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16935050505092915050565b611b7c611432565b73ffffffffffffffffffffffffffffffffffffffff16611b9a610a11565b73ffffffffffffffffffffffffffffffffffffffff1614611bf0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611be790613d4f565b60405180910390fd5b565b611bfa6125e8565b6000600560006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611c3e611432565b604051611c4b9190612f54565b60405180910390a1565b611c5f828261112f565b5050565b611c6d8282612631565b5050565b6000611c7c8361084b565b90506000611c8984610933565b905082600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a4611d85828483612280565b50505050565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081600001549050919050565b611e6761264f565b6001600560006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611eab611432565b604051611eb89190612f54565b60405180910390a1565b6000611ed5611ecf611909565b83612699565b9050919050565b6000806000611eed878787876126cc565b91509150611efa816127af565b8192505050949350505050565b600080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611f5481611e51565b9150611f5f8161291d565b50919050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b600080600085805490509050600080821461205857611fb487600184611faf91906133be565b6125ad565b6040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525050612094565b6040518060400160405280600063ffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152505b905080602001517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1693506120c984868863ffffffff16565b92506000821180156120e4575043816000015163ffffffff16145b1561215e576120f283611329565b6121088860018561210391906133be565b6125ad565b60000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555061224e565b86604051806040016040528061217343611394565b63ffffffff16815260200161218786611329565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555050505b5050935093915050565b61226061264f565b61226b8383836113e7565b505050565b61227b8383836113ec565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156122bc5750600081115b1561247457600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461239a57600080612343600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061141c85611f89565b915091508473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161238f929190613d6f565b60405180910390a250505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146124735760008061241c600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061131385611f89565b915091508373ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612468929190613d6f565b60405180910390a250505b5b505050565b60008383834630604051602001612494959493929190613d98565b6040516020818303038152906040528051906020012090509392505050565b6000808214156124c657600090506125a8565b600060016124d384612933565b901c6001901b905060018184816124ed576124ec613deb565b5b048201901c9050600181848161250657612505613deb565b5b048201901c9050600181848161251f5761251e613deb565b5b048201901c9050600181848161253857612537613deb565b5b048201901c9050600181848161255157612550613deb565b5b048201901c9050600181848161256a57612569613deb565b5b048201901c9050600181848161258357612582613deb565b5b048201901c90506125a48182858161259e5761259d613deb565b5b04612a14565b9150505b919050565b60008260005281602060002001905092915050565b600060028284186125d39190613e1a565b8284166125e091906132fc565b905092915050565b6125f06108c8565b61262f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161262690613e97565b60405180910390fd5b565b61263b8282612a2d565b612649600a61141c83611f89565b50505050565b6126576108c8565b15612697576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161268e90613f03565b60405180910390fd5b565b600082826040516020016126ae929190613f9b565b60405160208183030381529060405280519060200120905092915050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156127075760006003915091506127a6565b60006001878787876040516000815260200160405260405161272c9493929190613fd2565b6020604051602081039080840390855afa15801561274e573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561279d576000600192509250506127a6565b80600092509250505b94509492505050565b600060048111156127c3576127c2614017565b5b8160048111156127d6576127d5614017565b5b14156127e15761291a565b600160048111156127f5576127f4614017565b5b81600481111561280857612807614017565b5b1415612849576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161284090614092565b60405180910390fd5b6002600481111561285d5761285c614017565b5b8160048111156128705761286f614017565b5b14156128b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128a8906140fe565b60405180910390fd5b600360048111156128c5576128c4614017565b5b8160048111156128d8576128d7614017565b5b1415612919576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161291090614190565b60405180910390fd5b5b50565b6001816000016000828254019250508190555050565b600080600090506000608084901c111561295557608083901c92506080810190505b6000604084901c111561297057604083901c92506040810190505b6000602084901c111561298b57602083901c92506020810190505b6000601084901c11156129a657601083901c92506010810190505b6000600884901c11156129c157600883901c92506008810190505b6000600484901c11156129dc57600483901c92506004810190505b6000600284901c11156129f757600283901c92506002810190505b6000600184901c1115612a0b576001810190505b80915050919050565b6000818310612a235781612a25565b825b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612a9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a9490614222565b60405180910390fd5b612aa982600083612258565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015612b2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b26906142b4565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051612be29190612e12565b60405180910390a3612bf683600084612270565b505050565b6040518060400160405280600063ffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525090565b600081519050919050565b600082825260208201905092915050565b60005b83811015612c73578082015181840152602081019050612c58565b83811115612c82576000848401525b50505050565b6000601f19601f8301169050919050565b6000612ca482612c39565b612cae8185612c44565b9350612cbe818560208601612c55565b612cc781612c88565b840191505092915050565b60006020820190508181036000830152612cec8184612c99565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612d2482612cf9565b9050919050565b612d3481612d19565b8114612d3f57600080fd5b50565b600081359050612d5181612d2b565b92915050565b6000819050919050565b612d6a81612d57565b8114612d7557600080fd5b50565b600081359050612d8781612d61565b92915050565b60008060408385031215612da457612da3612cf4565b5b6000612db285828601612d42565b9250506020612dc385828601612d78565b9150509250929050565b60008115159050919050565b612de281612dcd565b82525050565b6000602082019050612dfd6000830184612dd9565b92915050565b612e0c81612d57565b82525050565b6000602082019050612e276000830184612e03565b92915050565b600080600060608486031215612e4657612e45612cf4565b5b6000612e5486828701612d42565b9350506020612e6586828701612d42565b9250506040612e7686828701612d78565b9150509250925092565b600060ff82169050919050565b612e9681612e80565b82525050565b6000602082019050612eb16000830184612e8d565b92915050565b6000819050919050565b612eca81612eb7565b82525050565b6000602082019050612ee56000830184612ec1565b92915050565b600060208284031215612f0157612f00612cf4565b5b6000612f0f84828501612d78565b91505092915050565b600060208284031215612f2e57612f2d612cf4565b5b6000612f3c84828501612d42565b91505092915050565b612f4e81612d19565b82525050565b6000602082019050612f696000830184612f45565b92915050565b600063ffffffff82169050919050565b612f8881612f6f565b82525050565b6000602082019050612fa36000830184612f7f565b92915050565b612fb281612e80565b8114612fbd57600080fd5b50565b600081359050612fcf81612fa9565b92915050565b612fde81612eb7565b8114612fe957600080fd5b50565b600081359050612ffb81612fd5565b92915050565b60008060008060008060c0878903121561301e5761301d612cf4565b5b600061302c89828a01612d42565b965050602061303d89828a01612d78565b955050604061304e89828a01612d78565b945050606061305f89828a01612fc0565b935050608061307089828a01612fec565b92505060a061308189828a01612fec565b9150509295509295509295565b600080600080600080600060e0888a0312156130ad576130ac612cf4565b5b60006130bb8a828b01612d42565b97505060206130cc8a828b01612d42565b96505060406130dd8a828b01612d78565b95505060606130ee8a828b01612d78565b94505060806130ff8a828b01612fc0565b93505060a06131108a828b01612fec565b92505060c06131218a828b01612fec565b91505092959891949750929550565b6000806040838503121561314757613146612cf4565b5b600061315585828601612d42565b925050602061316685828601612d42565b9150509250929050565b61317981612f6f565b811461318457600080fd5b50565b60008135905061319681613170565b92915050565b600080604083850312156131b3576131b2612cf4565b5b60006131c185828601612d42565b92505060206131d285828601613187565b9150509250929050565b6131e581612f6f565b82525050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b61321c816131eb565b82525050565b60408201600082015161323860008501826131dc565b50602082015161324b6020850182613213565b50505050565b60006040820190506132666000830184613222565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806132b357607f821691505b602082108114156132c7576132c661326c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061330782612d57565b915061331283612d57565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613347576133466132cd565b5b828201905092915050565b7f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400600082015250565b6000613388601f83612c44565b915061339382613352565b602082019050919050565b600060208201905081810360008301526133b78161337b565b9050919050565b60006133c982612d57565b91506133d483612d57565b9250828210156133e7576133e66132cd565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061347d602583612c44565b915061348882613421565b604082019050919050565b600060208201905081810360008301526134ac81613470565b9050919050565b7f4552433230566f7465733a207369676e61747572652065787069726564000000600082015250565b60006134e9601d83612c44565b91506134f4826134b3565b602082019050919050565b60006020820190508181036000830152613518816134dc565b9050919050565b60006080820190506135346000830187612ec1565b6135416020830186612f45565b61354e6040830185612e03565b61355b6060830184612e03565b95945050505050565b7f4552433230566f7465733a20696e76616c6964206e6f6e636500000000000000600082015250565b600061359a601983612c44565b91506135a582613564565b602082019050919050565b600060208201905081810360008301526135c98161358d565b9050919050565b7f45524332305065726d69743a206578706972656420646561646c696e65000000600082015250565b6000613606601d83612c44565b9150613611826135d0565b602082019050919050565b60006020820190508181036000830152613635816135f9565b9050919050565b600060c0820190506136516000830189612ec1565b61365e6020830188612f45565b61366b6040830187612f45565b6136786060830186612e03565b6136856080830185612e03565b61369260a0830184612e03565b979650505050505050565b7f45524332305065726d69743a20696e76616c6964207369676e61747572650000600082015250565b60006136d3601e83612c44565b91506136de8261369d565b602082019050919050565b60006020820190508181036000830152613702816136c6565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000613765602683612c44565b915061377082613709565b604082019050919050565b6000602082019050818103600083015261379481613758565b9050919050565b7f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60008201527f766572666c6f77696e6720766f74657300000000000000000000000000000000602082015250565b60006137f7603083612c44565b91506138028261379b565b604082019050919050565b60006020820190508181036000830152613826816137ea565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000613863601f83612c44565b915061386e8261382d565b602082019050919050565b6000602082019050818103600083015261389281613856565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203260008201527f3234206269747300000000000000000000000000000000000000000000000000602082015250565b60006138f5602783612c44565b915061390082613899565b604082019050919050565b60006020820190508181036000830152613924816138e8565b9050919050565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203360008201527f3220626974730000000000000000000000000000000000000000000000000000602082015250565b6000613987602683612c44565b91506139928261392b565b604082019050919050565b600060208201905081810360008301526139b68161397a565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000613a19602483612c44565b9150613a24826139bd565b604082019050919050565b60006020820190508181036000830152613a4881613a0c565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000613aab602283612c44565b9150613ab682613a4f565b604082019050919050565b60006020820190508181036000830152613ada81613a9e565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000613b17601d83612c44565b9150613b2282613ae1565b602082019050919050565b60006020820190508181036000830152613b4681613b0a565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000613ba9602583612c44565b9150613bb482613b4d565b604082019050919050565b60006020820190508181036000830152613bd881613b9c565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000613c3b602383612c44565b9150613c4682613bdf565b604082019050919050565b60006020820190508181036000830152613c6a81613c2e565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000613ccd602683612c44565b9150613cd882613c71565b604082019050919050565b60006020820190508181036000830152613cfc81613cc0565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000613d39602083612c44565b9150613d4482613d03565b602082019050919050565b60006020820190508181036000830152613d6881613d2c565b9050919050565b6000604082019050613d846000830185612e03565b613d916020830184612e03565b9392505050565b600060a082019050613dad6000830188612ec1565b613dba6020830187612ec1565b613dc76040830186612ec1565b613dd46060830185612e03565b613de16080830184612f45565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613e2582612d57565b9150613e3083612d57565b925082613e4057613e3f613deb565b5b828204905092915050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b6000613e81601483612c44565b9150613e8c82613e4b565b602082019050919050565b60006020820190508181036000830152613eb081613e74565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000613eed601083612c44565b9150613ef882613eb7565b602082019050919050565b60006020820190508181036000830152613f1c81613ee0565b9050919050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b6000613f64600283613f23565b9150613f6f82613f2e565b600282019050919050565b6000819050919050565b613f95613f9082612eb7565b613f7a565b82525050565b6000613fa682613f57565b9150613fb28285613f84565b602082019150613fc28284613f84565b6020820191508190509392505050565b6000608082019050613fe76000830187612ec1565b613ff46020830186612e8d565b6140016040830185612ec1565b61400e6060830184612ec1565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b600061407c601883612c44565b915061408782614046565b602082019050919050565b600060208201905081810360008301526140ab8161406f565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b60006140e8601f83612c44565b91506140f3826140b2565b602082019050919050565b60006020820190508181036000830152614117816140db565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b600061417a602283612c44565b91506141858261411e565b604082019050919050565b600060208201905081810360008301526141a98161416d565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600061420c602183612c44565b9150614217826141b0565b604082019050919050565b6000602082019050818103600083015261423b816141ff565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b600061429e602283612c44565b91506142a982614242565b604082019050919050565b600060208201905081810360008301526142cd81614291565b905091905056fea26469706673582212207685c53e20303fad35952ff3e2f713fa5a90e0a8fdadb48fad8f32f0ed7191dd64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0x9AB24EB0 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x5F2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x622 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x58A JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4DC JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x454 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x3A46B1A8 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x587CDE1E GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x3CE JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x348 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2C2 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x238 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F2 PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x2CD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x2DE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x2E2D JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x2DE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0x72C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x2ED0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x2DE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH2 0x77B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32A PUSH2 0x80F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x346 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH2 0x821 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x362 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x2EEB JUMP JUMPDEST PUSH2 0x837 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x2F18 JUMP JUMPDEST PUSH2 0x84B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x2F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x2F18 JUMP JUMPDEST PUSH2 0x8B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B8 PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x2DE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x2F18 JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x2F8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x418 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x2F18 JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x425 SWAP2 SWAP1 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x436 PUSH2 0x97B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x452 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH2 0x98F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x469 SWAP2 SWAP1 PUSH2 0x2F18 JUMP JUMPDEST PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47B SWAP2 SWAP1 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48C PUSH2 0x9FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x496 PUSH2 0xA11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x2F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x2EEB JUMP JUMPDEST PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E4 PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0x2CD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x514 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x2F18 JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x544 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53F SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH2 0xC34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x2DE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x574 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x2D8D JUMP JUMPDEST PUSH2 0xCAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x581 SWAP2 SWAP1 PUSH2 0x2DE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x3001 JUMP JUMPDEST PUSH2 0xCCE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0x308E JUMP JUMPDEST PUSH2 0xDD2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x3130 JUMP JUMPDEST PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x319C JUMP JUMPDEST PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x619 SWAP2 SWAP1 PUSH2 0x3251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x63C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x637 SWAP2 SWAP1 PUSH2 0x2F18 JUMP JUMPDEST PUSH2 0x10AB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x64D SWAP1 PUSH2 0x329B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x679 SWAP1 PUSH2 0x329B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6C6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x69B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6C6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6A9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6DB PUSH2 0x1432 JUMP JUMPDEST SWAP1 POP PUSH2 0x6E8 DUP2 DUP6 DUP6 PUSH2 0x143A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x708 PUSH2 0x1432 JUMP JUMPDEST SWAP1 POP PUSH2 0x715 DUP6 DUP3 DUP6 PUSH2 0x1605 JUMP JUMPDEST PUSH2 0x720 DUP6 DUP6 DUP6 PUSH2 0x1691 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73F PUSH2 0x1909 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x74F PUSH2 0x1432 JUMP JUMPDEST SWAP1 POP PUSH2 0x770 DUP2 DUP6 DUP6 PUSH2 0x761 DUP6 DUP10 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x76B SWAP2 SWAP1 PUSH2 0x32FC JUMP JUMPDEST PUSH2 0x143A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x339E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x807 PUSH1 0x9 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 PUSH2 0x1A23 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x817 PUSH2 0x1B74 JUMP JUMPDEST PUSH2 0x81F PUSH2 0x1BF2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x829 PUSH2 0x1B74 JUMP JUMPDEST PUSH2 0x833 DUP3 DUP3 PUSH2 0x1C55 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x848 PUSH2 0x842 PUSH2 0x1432 JUMP JUMPDEST DUP3 PUSH2 0x1C63 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8C5 PUSH2 0x8BF PUSH2 0x1432 JUMP JUMPDEST DUP3 PUSH2 0x1C71 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x92C PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x1394 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x983 PUSH2 0x1B74 JUMP JUMPDEST PUSH2 0x98D PUSH1 0x0 PUSH2 0x1D8B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9A1 DUP3 PUSH2 0x99B PUSH2 0x1432 JUMP JUMPDEST DUP4 PUSH2 0x1605 JUMP JUMPDEST PUSH2 0x9AB DUP3 DUP3 PUSH2 0x1C63 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F8 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1E51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA07 PUSH2 0x1B74 JUMP JUMPDEST PUSH2 0xA0F PUSH2 0x1E5F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 LT PUSH2 0xA7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA76 SWAP1 PUSH2 0x339E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA8A PUSH1 0xA DUP4 PUSH2 0x1A23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xAA0 SWAP1 PUSH2 0x329B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xACC SWAP1 PUSH2 0x329B JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB19 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAEE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB19 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAFC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0xC0B JUMPI PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP3 PUSH2 0xBBF SWAP2 SWAP1 PUSH2 0x33BE JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xBD0 JUMPI PUSH2 0xBCF PUSH2 0x33F2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC3F PUSH2 0x1432 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC4D DUP3 DUP7 PUSH2 0xF14 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xC92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC89 SWAP1 PUSH2 0x3493 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC9F DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x143A JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCB6 PUSH2 0x1432 JUMP JUMPDEST SWAP1 POP PUSH2 0xCC3 DUP2 DUP6 DUP6 PUSH2 0x1691 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xD11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD08 SWAP1 PUSH2 0x34FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD73 PUSH2 0xD6B PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD50 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x351F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1EC2 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x1EDC JUMP JUMPDEST SWAP1 POP PUSH2 0xD7E DUP2 PUSH2 0x1F07 JUMP JUMPDEST DUP7 EQ PUSH2 0xDBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB6 SWAP1 PUSH2 0x35B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC9 DUP2 DUP9 PUSH2 0x1C71 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xE15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0C SWAP1 PUSH2 0x361C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xE44 DUP13 PUSH2 0x1F07 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE5A SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x363C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xE7D DUP3 PUSH2 0x1EC2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE8D DUP3 DUP8 DUP8 DUP8 PUSH2 0x1EDC JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF4 SWAP1 PUSH2 0x36E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF08 DUP11 DUP11 DUP11 PUSH2 0x143A JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFA3 PUSH2 0x2BFB JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0xFFA JUMPI PUSH2 0xFF9 PUSH2 0x33F2 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10B3 PUSH2 0x1B74 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1123 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111A SWAP1 PUSH2 0x377B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x112C DUP2 PUSH2 0x1D8B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1139 DUP3 DUP3 PUSH2 0x11BC JUMP JUMPDEST PUSH2 0x1141 PUSH2 0x1F65 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1167 PUSH2 0x6F3 JUMP JUMPDEST GT ISZERO PUSH2 0x11A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x119F SWAP1 PUSH2 0x380D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11B6 PUSH1 0xA PUSH2 0x1313 DUP4 PUSH2 0x1F89 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x122C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1223 SWAP1 PUSH2 0x3879 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1238 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2258 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x124A SWAP2 SWAP1 PUSH2 0x32FC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x12FB SWAP2 SWAP1 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x130F PUSH1 0x0 DUP4 DUP4 PUSH2 0x2270 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1321 SWAP2 SWAP1 PUSH2 0x32FC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x138C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1383 SWAP1 PUSH2 0x390B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x13DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D6 SWAP1 PUSH2 0x399D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x13F7 DUP4 DUP4 DUP4 PUSH2 0x1417 JUMP JUMPDEST PUSH2 0x1412 PUSH2 0x1403 DUP5 PUSH2 0x84B JUMP JUMPDEST PUSH2 0x140C DUP5 PUSH2 0x84B JUMP JUMPDEST DUP4 PUSH2 0x2280 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x142A SWAP2 SWAP1 PUSH2 0x33BE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x14AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A1 SWAP1 PUSH2 0x3A2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x151A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1511 SWAP1 PUSH2 0x3AC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x15F8 SWAP2 SWAP1 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1611 DUP5 DUP5 PUSH2 0xF14 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x168B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x167D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1674 SWAP1 PUSH2 0x3B2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x168A DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x143A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1701 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16F8 SWAP1 PUSH2 0x3BBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1771 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1768 SWAP1 PUSH2 0x3C51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x177C DUP4 DUP4 DUP4 PUSH2 0x2258 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1802 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17F9 SWAP1 PUSH2 0x3CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x18F0 SWAP2 SWAP1 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1903 DUP5 DUP5 DUP5 PUSH2 0x2270 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1985 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x19B2 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x1A20 JUMP JUMPDEST PUSH2 0x1A1D PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH2 0x2479 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x5 DUP4 GT ISZERO PUSH2 0x1A99 JUMPI PUSH1 0x0 PUSH2 0x1A47 DUP5 PUSH2 0x24B3 JUMP JUMPDEST DUP5 PUSH2 0x1A52 SWAP2 SWAP1 PUSH2 0x33BE JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x1A5F DUP9 DUP4 PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1A87 JUMPI DUP1 SWAP2 POP PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1A94 SWAP2 SWAP1 PUSH2 0x32FC JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1AF9 JUMPI PUSH1 0x0 PUSH2 0x1AAE DUP4 DUP4 PUSH2 0x25C2 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0x1ABB DUP9 DUP4 PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1AE3 JUMPI DUP1 SWAP2 POP PUSH2 0x1AF3 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x1AF0 SWAP2 SWAP1 PUSH2 0x32FC JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x1A9A JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x1B48 JUMPI PUSH2 0x1B17 DUP7 PUSH1 0x1 DUP4 PUSH2 0x1B12 SWAP2 SWAP1 PUSH2 0x33BE JUMP JUMPDEST PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B7C PUSH2 0x1432 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B9A PUSH2 0xA11 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BE7 SWAP1 PUSH2 0x3D4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1BFA PUSH2 0x25E8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1C3E PUSH2 0x1432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4B SWAP2 SWAP1 PUSH2 0x2F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1C5F DUP3 DUP3 PUSH2 0x112F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1C6D DUP3 DUP3 PUSH2 0x2631 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7C DUP4 PUSH2 0x84B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C89 DUP5 PUSH2 0x933 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1D85 DUP3 DUP5 DUP4 PUSH2 0x2280 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E67 PUSH2 0x264F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1EAB PUSH2 0x1432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB8 SWAP2 SWAP1 PUSH2 0x2F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED5 PUSH2 0x1ECF PUSH2 0x1909 JUMP JUMPDEST DUP4 PUSH2 0x2699 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1EED DUP8 DUP8 DUP8 DUP8 PUSH2 0x26CC JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1EFA DUP2 PUSH2 0x27AF JUMP JUMPDEST DUP2 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1F54 DUP2 PUSH2 0x1E51 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F5F DUP2 PUSH2 0x291D JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 DUP1 DUP3 EQ PUSH2 0x2058 JUMPI PUSH2 0x1FB4 DUP8 PUSH1 0x1 DUP5 PUSH2 0x1FAF SWAP2 SWAP1 PUSH2 0x33BE JUMP JUMPDEST PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x2094 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP4 POP PUSH2 0x20C9 DUP5 DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x20E4 JUMPI POP NUMBER DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x215E JUMPI PUSH2 0x20F2 DUP4 PUSH2 0x1329 JUMP JUMPDEST PUSH2 0x2108 DUP9 PUSH1 0x1 DUP6 PUSH2 0x2103 SWAP2 SWAP1 PUSH2 0x33BE JUMP JUMPDEST PUSH2 0x25AD JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x224E JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2173 NUMBER PUSH2 0x1394 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2187 DUP7 PUSH2 0x1329 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2260 PUSH2 0x264F JUMP JUMPDEST PUSH2 0x226B DUP4 DUP4 DUP4 PUSH2 0x13E7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x227B DUP4 DUP4 DUP4 PUSH2 0x13EC JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x22BC JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x2474 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x239A JUMPI PUSH1 0x0 DUP1 PUSH2 0x2343 PUSH1 0x9 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x141C DUP6 PUSH2 0x1F89 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x238F SWAP3 SWAP2 SWAP1 PUSH2 0x3D6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2473 JUMPI PUSH1 0x0 DUP1 PUSH2 0x241C PUSH1 0x9 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1313 DUP6 PUSH2 0x1F89 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2468 SWAP3 SWAP2 SWAP1 PUSH2 0x3D6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2494 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ ISZERO PUSH2 0x24C6 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x25A8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x24D3 DUP5 PUSH2 0x2933 JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x24ED JUMPI PUSH2 0x24EC PUSH2 0x3DEB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2506 JUMPI PUSH2 0x2505 PUSH2 0x3DEB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x251F JUMPI PUSH2 0x251E PUSH2 0x3DEB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2538 JUMPI PUSH2 0x2537 PUSH2 0x3DEB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2551 JUMPI PUSH2 0x2550 PUSH2 0x3DEB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x256A JUMPI PUSH2 0x2569 PUSH2 0x3DEB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x2583 JUMPI PUSH2 0x2582 PUSH2 0x3DEB JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x25A4 DUP2 DUP3 DUP6 DUP2 PUSH2 0x259E JUMPI PUSH2 0x259D PUSH2 0x3DEB JUMP JUMPDEST JUMPDEST DIV PUSH2 0x2A14 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP5 XOR PUSH2 0x25D3 SWAP2 SWAP1 PUSH2 0x3E1A JUMP JUMPDEST DUP3 DUP5 AND PUSH2 0x25E0 SWAP2 SWAP1 PUSH2 0x32FC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25F0 PUSH2 0x8C8 JUMP JUMPDEST PUSH2 0x262F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2626 SWAP1 PUSH2 0x3E97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x263B DUP3 DUP3 PUSH2 0x2A2D JUMP JUMPDEST PUSH2 0x2649 PUSH1 0xA PUSH2 0x141C DUP4 PUSH2 0x1F89 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2657 PUSH2 0x8C8 JUMP JUMPDEST ISZERO PUSH2 0x2697 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x268E SWAP1 PUSH2 0x3F03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x26AE SWAP3 SWAP2 SWAP1 PUSH2 0x3F9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 PUSH1 0x0 SHR GT ISZERO PUSH2 0x2707 JUMPI PUSH1 0x0 PUSH1 0x3 SWAP2 POP SWAP2 POP PUSH2 0x27A6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x272C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3FD2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x274E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x279D JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x27A6 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP3 POP SWAP3 POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x27C3 JUMPI PUSH2 0x27C2 PUSH2 0x4017 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x27D6 JUMPI PUSH2 0x27D5 PUSH2 0x4017 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x27E1 JUMPI PUSH2 0x291A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x27F5 JUMPI PUSH2 0x27F4 PUSH2 0x4017 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2808 JUMPI PUSH2 0x2807 PUSH2 0x4017 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2849 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2840 SWAP1 PUSH2 0x4092 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x285D JUMPI PUSH2 0x285C PUSH2 0x4017 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2870 JUMPI PUSH2 0x286F PUSH2 0x4017 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x28B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28A8 SWAP1 PUSH2 0x40FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x28C5 JUMPI PUSH2 0x28C4 PUSH2 0x4017 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x28D8 JUMPI PUSH2 0x28D7 PUSH2 0x4017 JUMP JUMPDEST JUMPDEST EQ ISZERO PUSH2 0x2919 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2910 SWAP1 PUSH2 0x4190 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x80 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2955 JUMPI PUSH1 0x80 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x80 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2970 JUMPI PUSH1 0x40 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x298B JUMPI PUSH1 0x20 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x29A6 JUMPI PUSH1 0x10 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x29C1 JUMPI PUSH1 0x8 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x29DC JUMPI PUSH1 0x4 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x29F7 JUMPI PUSH1 0x2 DUP4 SWAP1 SHR SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP5 SWAP1 SHR GT ISZERO PUSH2 0x2A0B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2A23 JUMPI DUP2 PUSH2 0x2A25 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2A9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A94 SWAP1 PUSH2 0x4222 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2AA9 DUP3 PUSH1 0x0 DUP4 PUSH2 0x2258 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2B2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B26 SWAP1 PUSH2 0x42B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x2BE2 SWAP2 SWAP1 PUSH2 0x2E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x2BF6 DUP4 PUSH1 0x0 DUP5 PUSH2 0x2270 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C73 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C58 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2C82 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CA4 DUP3 PUSH2 0x2C39 JUMP JUMPDEST PUSH2 0x2CAE DUP2 DUP6 PUSH2 0x2C44 JUMP JUMPDEST SWAP4 POP PUSH2 0x2CBE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2C55 JUMP JUMPDEST PUSH2 0x2CC7 DUP2 PUSH2 0x2C88 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CEC DUP2 DUP5 PUSH2 0x2C99 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D24 DUP3 PUSH2 0x2CF9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D34 DUP2 PUSH2 0x2D19 JUMP JUMPDEST DUP2 EQ PUSH2 0x2D3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D51 DUP2 PUSH2 0x2D2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D6A DUP2 PUSH2 0x2D57 JUMP JUMPDEST DUP2 EQ PUSH2 0x2D75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2D87 DUP2 PUSH2 0x2D61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DA4 JUMPI PUSH2 0x2DA3 PUSH2 0x2CF4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DB2 DUP6 DUP3 DUP7 ADD PUSH2 0x2D42 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2DC3 DUP6 DUP3 DUP7 ADD PUSH2 0x2D78 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DE2 DUP2 PUSH2 0x2DCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DFD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2DD9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E0C DUP2 PUSH2 0x2D57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E27 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2E46 JUMPI PUSH2 0x2E45 PUSH2 0x2CF4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E54 DUP7 DUP3 DUP8 ADD PUSH2 0x2D42 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2E65 DUP7 DUP3 DUP8 ADD PUSH2 0x2D42 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2E76 DUP7 DUP3 DUP8 ADD PUSH2 0x2D78 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E96 DUP2 PUSH2 0x2E80 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EB1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2ECA DUP2 PUSH2 0x2EB7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EE5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2EC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F01 JUMPI PUSH2 0x2F00 PUSH2 0x2CF4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F0F DUP5 DUP3 DUP6 ADD PUSH2 0x2D78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F2E JUMPI PUSH2 0x2F2D PUSH2 0x2CF4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F3C DUP5 DUP3 DUP6 ADD PUSH2 0x2D42 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F4E DUP2 PUSH2 0x2D19 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2F69 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F88 DUP2 PUSH2 0x2F6F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FA3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2FB2 DUP2 PUSH2 0x2E80 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FCF DUP2 PUSH2 0x2FA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2FDE DUP2 PUSH2 0x2EB7 JUMP JUMPDEST DUP2 EQ PUSH2 0x2FE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FFB DUP2 PUSH2 0x2FD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x301E JUMPI PUSH2 0x301D PUSH2 0x2CF4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x302C DUP10 DUP3 DUP11 ADD PUSH2 0x2D42 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x303D DUP10 DUP3 DUP11 ADD PUSH2 0x2D78 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x304E DUP10 DUP3 DUP11 ADD PUSH2 0x2D78 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x305F DUP10 DUP3 DUP11 ADD PUSH2 0x2FC0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x3070 DUP10 DUP3 DUP11 ADD PUSH2 0x2FEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x3081 DUP10 DUP3 DUP11 ADD PUSH2 0x2FEC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x30AD JUMPI PUSH2 0x30AC PUSH2 0x2CF4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x30BB DUP11 DUP3 DUP12 ADD PUSH2 0x2D42 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x30CC DUP11 DUP3 DUP12 ADD PUSH2 0x2D42 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x30DD DUP11 DUP3 DUP12 ADD PUSH2 0x2D78 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x30EE DUP11 DUP3 DUP12 ADD PUSH2 0x2D78 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x30FF DUP11 DUP3 DUP12 ADD PUSH2 0x2FC0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x3110 DUP11 DUP3 DUP12 ADD PUSH2 0x2FEC JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x3121 DUP11 DUP3 DUP12 ADD PUSH2 0x2FEC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3147 JUMPI PUSH2 0x3146 PUSH2 0x2CF4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3155 DUP6 DUP3 DUP7 ADD PUSH2 0x2D42 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3166 DUP6 DUP3 DUP7 ADD PUSH2 0x2D42 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3179 DUP2 PUSH2 0x2F6F JUMP JUMPDEST DUP2 EQ PUSH2 0x3184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3196 DUP2 PUSH2 0x3170 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x31B3 JUMPI PUSH2 0x31B2 PUSH2 0x2CF4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31C1 DUP6 DUP3 DUP7 ADD PUSH2 0x2D42 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x31D2 DUP6 DUP3 DUP7 ADD PUSH2 0x3187 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x31E5 DUP2 PUSH2 0x2F6F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x321C DUP2 PUSH2 0x31EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3238 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x31DC JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x324B PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3213 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3266 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3222 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x32B3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x32C7 JUMPI PUSH2 0x32C6 PUSH2 0x326C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3307 DUP3 PUSH2 0x2D57 JUMP JUMPDEST SWAP2 POP PUSH2 0x3312 DUP4 PUSH2 0x2D57 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3347 JUMPI PUSH2 0x3346 PUSH2 0x32CD JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20626C6F636B206E6F7420796574206D696E656400 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3388 PUSH1 0x1F DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3393 DUP3 PUSH2 0x3352 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x33B7 DUP2 PUSH2 0x337B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33C9 DUP3 PUSH2 0x2D57 JUMP JUMPDEST SWAP2 POP PUSH2 0x33D4 DUP4 PUSH2 0x2D57 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x33E7 JUMPI PUSH2 0x33E6 PUSH2 0x32CD JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x347D PUSH1 0x25 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3488 DUP3 PUSH2 0x3421 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34AC DUP2 PUSH2 0x3470 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E9 PUSH1 0x1D DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x34F4 DUP3 PUSH2 0x34B3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3518 DUP2 PUSH2 0x34DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3534 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2EC1 JUMP JUMPDEST PUSH2 0x3541 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2F45 JUMP JUMPDEST PUSH2 0x354E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2E03 JUMP JUMPDEST PUSH2 0x355B PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2E03 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x359A PUSH1 0x19 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x35A5 DUP3 PUSH2 0x3564 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35C9 DUP2 PUSH2 0x358D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3606 PUSH1 0x1D DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3611 DUP3 PUSH2 0x35D0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3635 DUP2 PUSH2 0x35F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x3651 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x2EC1 JUMP JUMPDEST PUSH2 0x365E PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x2F45 JUMP JUMPDEST PUSH2 0x366B PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x2F45 JUMP JUMPDEST PUSH2 0x3678 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2E03 JUMP JUMPDEST PUSH2 0x3685 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2E03 JUMP JUMPDEST PUSH2 0x3692 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x2E03 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36D3 PUSH1 0x1E DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x36DE DUP3 PUSH2 0x369D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3702 DUP2 PUSH2 0x36C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3765 PUSH1 0x26 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3770 DUP3 PUSH2 0x3709 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3794 DUP2 PUSH2 0x3758 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x766572666C6F77696E6720766F74657300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F7 PUSH1 0x30 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3802 DUP3 PUSH2 0x379B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3826 DUP2 PUSH2 0x37EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3863 PUSH1 0x1F DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x386E DUP3 PUSH2 0x382D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3892 DUP2 PUSH2 0x3856 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3234206269747300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38F5 PUSH1 0x27 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3900 DUP3 PUSH2 0x3899 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3924 DUP2 PUSH2 0x38E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3220626974730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3987 PUSH1 0x26 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3992 DUP3 PUSH2 0x392B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x39B6 DUP2 PUSH2 0x397A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A19 PUSH1 0x24 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A24 DUP3 PUSH2 0x39BD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A48 DUP2 PUSH2 0x3A0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AAB PUSH1 0x22 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AB6 DUP3 PUSH2 0x3A4F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3ADA DUP2 PUSH2 0x3A9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B17 PUSH1 0x1D DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B22 DUP3 PUSH2 0x3AE1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B46 DUP2 PUSH2 0x3B0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BA9 PUSH1 0x25 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BB4 DUP3 PUSH2 0x3B4D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BD8 DUP2 PUSH2 0x3B9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C3B PUSH1 0x23 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C46 DUP3 PUSH2 0x3BDF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C6A DUP2 PUSH2 0x3C2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CCD PUSH1 0x26 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CD8 DUP3 PUSH2 0x3C71 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CFC DUP2 PUSH2 0x3CC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D39 PUSH1 0x20 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D44 DUP3 PUSH2 0x3D03 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D68 DUP2 PUSH2 0x3D2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3D84 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2E03 JUMP JUMPDEST PUSH2 0x3D91 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E03 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3DAD PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2EC1 JUMP JUMPDEST PUSH2 0x3DBA PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2EC1 JUMP JUMPDEST PUSH2 0x3DC7 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2EC1 JUMP JUMPDEST PUSH2 0x3DD4 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2E03 JUMP JUMPDEST PUSH2 0x3DE1 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x2F45 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E25 DUP3 PUSH2 0x2D57 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E30 DUP4 PUSH2 0x2D57 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3E40 JUMPI PUSH2 0x3E3F PUSH2 0x3DEB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E81 PUSH1 0x14 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E8C DUP3 PUSH2 0x3E4B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EB0 DUP2 PUSH2 0x3E74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EED PUSH1 0x10 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EF8 DUP3 PUSH2 0x3EB7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F1C DUP2 PUSH2 0x3EE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F64 PUSH1 0x2 DUP4 PUSH2 0x3F23 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F6F DUP3 PUSH2 0x3F2E JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3F95 PUSH2 0x3F90 DUP3 PUSH2 0x2EB7 JUMP JUMPDEST PUSH2 0x3F7A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FA6 DUP3 PUSH2 0x3F57 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FB2 DUP3 DUP6 PUSH2 0x3F84 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x3FC2 DUP3 DUP5 PUSH2 0x3F84 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3FE7 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2EC1 JUMP JUMPDEST PUSH2 0x3FF4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2E8D JUMP JUMPDEST PUSH2 0x4001 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2EC1 JUMP JUMPDEST PUSH2 0x400E PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2EC1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x407C PUSH1 0x18 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x4087 DUP3 PUSH2 0x4046 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x40AB DUP2 PUSH2 0x406F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40E8 PUSH1 0x1F DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x40F3 DUP3 PUSH2 0x40B2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4117 DUP2 PUSH2 0x40DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x417A PUSH1 0x22 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x4185 DUP3 PUSH2 0x411E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x41A9 DUP2 PUSH2 0x416D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x420C PUSH1 0x21 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x4217 DUP3 PUSH2 0x41B0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x423B DUP2 PUSH2 0x41FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x429E PUSH1 0x22 DUP4 PUSH2 0x2C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x42A9 DUP3 PUSH2 0x4242 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x42CD DUP2 PUSH2 0x4291 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x85C53E20303FAD35952FF3E2F713FA5A90E0A8FDADB48F 0xAD DUP16 ORIGIN CREATE 0xED PUSH18 0x91DD64736F6C634300080900330000000000 ","sourceMap":"459:1265:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5190:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3091:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2879:113:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5871:234:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2825:265:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;759:65:26;;;:::i;:::-;;832:95;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;578:89:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2218:126:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5648:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1615:84:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:149:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3406:125:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;973:161:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2629:126:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;690:61:26;;;:::i;:::-;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3369:256:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:102:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2423:209:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6592:427:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3727:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5837:574:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1942:626:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3974:149:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1758:148:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2154:98:3;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;4530:13;4546:12;:10;:12::i;:::-;4530:28;;4568:32;4577:5;4584:7;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;:::o;3242:106::-;3303:7;3329:12;;3322:19;;3242:106;:::o;5190:286::-;5317:4;5333:15;5351:12;:10;:12::i;:::-;5333:30;;5373:38;5389:4;5395:7;5404:6;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;:::o;3091:91::-;3149:5;3173:2;3166:9;;3091:91;:::o;2879:113:8:-;2939:7;2965:20;:18;:20::i;:::-;2958:27;;2879:113;:::o;5871:234:3:-;5959:4;5975:13;5991:12;:10;:12::i;:::-;5975:28;;6013:64;6022:5;6029:7;6066:10;6038:25;6048:5;6055:7;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;:::-;6094:4;6087:11;;;5871:234;;;;:::o;2825:265:6:-;2923:7;2964:12;2950:11;:26;2942:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3029:54;3048:12;:21;3061:7;3048:21;;;;;;;;;;;;;;;3071:11;3029:18;:54::i;:::-;3022:61;;2825:265;;;;:::o;759:65:26:-;1094:13:0;:11;:13::i;:::-;806:10:26::1;:8;:10::i;:::-;759:65::o:0;832:95::-;1094:13:0;:11;:13::i;:::-;902:17:26::1;908:2;912:6;902:5;:17::i;:::-;832:95:::0;;:::o;578:89:5:-;633:27;639:12;:10;:12::i;:::-;653:6;633:5;:27::i;:::-;578:89;:::o;2218:126:6:-;2292:7;2318:10;:19;2329:7;2318:19;;;;;;;;;;;;;;;;;;;;;;;;;2311:26;;2218:126;;;:::o;5648:112::-;5719:34;5729:12;:10;:12::i;:::-;5743:9;5719;:34::i;:::-;5648:112;:::o;1615:84:2:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;1981:149:6:-;2051:6;2076:47;2094:12;:21;2107:7;2094:21;;;;;;;;;;;;;;;:28;;;;2076:17;:47::i;:::-;2069:54;;1981:149;;;:::o;3406:125:3:-;3480:7;3506:9;:18;3516:7;3506:18;;;;;;;;;;;;;;;;3499:25;;3406:125;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;973:161:5:-;1049:46;1065:7;1074:12;:10;:12::i;:::-;1088:6;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;:::-;973:161;;:::o;2629:126:8:-;2698:7;2724:24;:7;:14;2732:5;2724:14;;;;;;;;;;;;;;;:22;:24::i;:::-;2717:31;;2629:126;;;:::o;690:61:26:-;1094:13:0;:11;:13::i;:::-;735:8:26::1;:6;:8::i;:::-;690:61::o:0;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;3369:256:6:-;3456:7;3497:12;3483:11;:26;3475:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3562:56;3581:23;3606:11;3562:18;:56::i;:::-;3555:63;;3369:256;;;:::o;2365:102:3:-;2421:13;2453:7;2446:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:102;:::o;2423:209:6:-;2496:7;2515:11;2529:12;:21;2542:7;2529:21;;;;;;;;;;;;;;;:28;;;;2515:42;;2581:1;2574:3;:8;:51;;2589:12;:21;2602:7;2589:21;;;;;;;;;;;;;;;2617:1;2611:3;:7;;;;:::i;:::-;2589:30;;;;;;;;:::i;:::-;;;;;;;;;:36;;;;;;;;;;;;2574:51;;;2585:1;2574:51;2567:58;;;;;2423:209;;;:::o;6592:427:3:-;6685:4;6701:13;6717:12;:10;:12::i;:::-;6701:28;;6739:24;6766:25;6776:5;6783:7;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;7008:4;7001:11;;;;6592:427;;;;:::o;3727:189::-;3806:4;3822:13;3838:12;:10;:12::i;:::-;3822:28;;3860;3870:5;3877:2;3881:6;3860:9;:28::i;:::-;3905:4;3898:11;;;3727:189;;;;:::o;5837:574:6:-;6056:6;6037:15;:25;;6029:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;6106:14;6123:169;6150:87;1447:71;6210:9;6221:5;6228:6;6177:58;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6167:69;;;;;;6150:16;:87::i;:::-;6251:1;6266;6281;6123:13;:169::i;:::-;6106:186;;6319:17;6329:6;6319:9;:17::i;:::-;6310:5;:26;6302:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;6376:28;6386:6;6394:9;6376;:28::i;:::-;6019:392;5837:574;;;;;;:::o;1942:626:8:-;2177:8;2158:15;:27;;2150:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2230:18;1137:95;2290:5;2297:7;2306:5;2313:16;2323:5;2313:9;:16::i;:::-;2331:8;2261:79;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2251:90;;;;;;2230:111;;2352:12;2367:28;2384:10;2367:16;:28::i;:::-;2352:43;;2406:14;2423:28;2437:4;2443:1;2446;2449;2423:13;:28::i;:::-;2406:45;;2479:5;2469:15;;:6;:15;;;2461:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2530:31;2539:5;2546:7;2555:5;2530:8;:31::i;:::-;2140:428;;;1942:626;;;;;;;:::o;3974:149:3:-;4063:7;4089:11;:18;4101:5;4089:18;;;;;;;;;;;;;;;:27;4108:7;4089:27;;;;;;;;;;;;;;;;4082:34;;3974:149;;;;:::o;1758:148:6:-;1837:17;;:::i;:::-;1873:12;:21;1886:7;1873:21;;;;;;;;;;;;;;;1895:3;1873:26;;;;;;;;;;:::i;:::-;;;;;;;;;1866:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1758:148;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;6705:285:6:-;6789:28;6801:7;6810:6;6789:11;:28::i;:::-;6852:12;:10;:12::i;:::-;6835:29;;:13;:11;:13::i;:::-;:29;;6827:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;6928:55;6945:23;6970:4;6976:6;6928:16;:55::i;:::-;;;6705:285;;:::o;8567:535:3:-;8669:1;8650:21;;:7;:21;;;;8642:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8718:49;8747:1;8751:7;8760:6;8718:20;:49::i;:::-;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;;;;;8968:6;8946:9;:18;8956:7;8946:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;9020:7;8999:37;;9016:1;8999:37;;;9029:6;8999:37;;;;;;:::i;:::-;;;;;;;;9047:48;9075:1;9079:7;9088:6;9047:19;:48::i;:::-;8567:535;;:::o;9575:96:6:-;9633:7;9663:1;9659;:5;;;;:::i;:::-;9652:12;;9575:96;;;;:::o;2836:192:24:-;2893:7;2929:17;2920:26;;:5;:26;;2912:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3015:5;3000:21;;2836:192;;;:::o;15264:187::-;15320:6;15355:16;15346:25;;:5;:25;;15338:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;15438:5;15424:20;;15264:187;;;:::o;12180:121:3:-;;;;:::o;7409:254:6:-;7546:43;7572:4;7578:2;7582:6;7546:25;:43::i;:::-;7600:56;7617:15;7627:4;7617:9;:15::i;:::-;7634:13;7644:2;7634:9;:13::i;:::-;7649:6;7600:16;:56::i;:::-;7409:254;;;:::o;12889:120:3:-;;;;:::o;9677:101:6:-;9740:7;9770:1;9766;:5;;;;:::i;:::-;9759:12;;9677:101;;;;:::o;640:96:16:-;693:7;719:10;712:17;;640:96;:::o;10504:370:3:-;10652:1;10635:19;;:5;:19;;;;10627:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10732:1;10713:21;;:7;:21;;;;10705:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10814:6;10784:11;:18;10796:5;10784:18;;;;;;;;;;;;;;;:27;10803:7;10784:27;;;;;;;;;;;;;;;:36;;;;10851:7;10835:32;;10844:5;10835:32;;;10860:6;10835:32;;;;;;:::i;:::-;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;11371:17;11351:16;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11347:243;11275:321;11155:441;;;:::o;7473:818::-;7615:1;7599:18;;:4;:18;;;;7591:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7691:1;7677:16;;:2;:16;;;;7669:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;7793:19;7815:9;:15;7825:4;7815:15;;;;;;;;;;;;;;;;7793:37;;7863:6;7848:11;:21;;7840:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7978:6;7964:11;:20;7946:9;:15;7956:4;7946:15;;;;;;;;;;;;;;;:38;;;;8178:6;8161:9;:13;8171:2;8161:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8225:2;8210:26;;8219:4;8210:26;;;8229:6;8210:26;;;;;;:::i;:::-;;;;;;;;8247:37;8267:4;8273:2;8277:6;8247:19;:37::i;:::-;7581:710;7473:818;;;:::o;3152:308:20:-;3205:7;3245:12;3228:29;;3236:4;3228:29;;;:66;;;;;3278:16;3261:13;:33;3228:66;3224:230;;;3317:24;3310:31;;;;3224:230;3379:64;3401:10;3413:12;3427:15;3379:21;:64::i;:::-;3372:71;;3152:308;;:::o;3709:1858:6:-;3808:7;4896:14;4913:5;:12;;;;4896:29;;4936:11;4961:12;4976:6;4961:21;;5006:1;4997:6;:10;4993:244;;;5023:11;5046:17;5056:6;5046:9;:17::i;:::-;5037:6;:26;;;;:::i;:::-;5023:40;;5119:11;5081:25;5095:5;5102:3;5081:13;:25::i;:::-;:35;;;;;;;;;;;;:49;;;5077:150;;;5157:3;5150:10;;5077:150;;;5211:1;5205:3;:7;;;;:::i;:::-;5199:13;;5077:150;5009:228;4993:244;5247;5260:4;5254:3;:10;5247:244;;;5280:11;5294:23;5307:3;5312:4;5294:12;:23::i;:::-;5280:37;;5373:11;5335:25;5349:5;5356:3;5335:13;:25::i;:::-;:35;;;;;;;;;;;;:49;;;5331:150;;;5411:3;5404:10;;5331:150;;;5465:1;5459:3;:7;;;;:::i;:::-;5453:13;;5331:150;5266:225;5247:244;;;5516:1;5508:4;:9;:52;;5524:30;5538:5;5552:1;5545:4;:8;;;;:::i;:::-;5524:13;:30::i;:::-;:36;;;;;;;;;;;;5508:52;;;5520:1;5508:52;5501:59;;;;;;;3709:1858;;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:117:2:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7;;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;1413:145:26:-;1527:23;1539:2;1543:6;1527:11;:23::i;:::-;1413:145;;:::o;1566:155::-;1685:28;1697:7;1706:6;1685:11;:28::i;:::-;1566:155;;:::o;7834:380:6:-;7918:23;7944:20;7954:9;7944;:20::i;:::-;7918:46;;7974:24;8001:20;8011:9;8001;:20::i;:::-;7974:47;;8055:9;8031:10;:21;8042:9;8031:21;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;8124:9;8080:54;;8107:15;8080:54;;8096:9;8080:54;;;;;;;;;;;;8145:62;8162:15;8179:9;8190:16;8145;:62::i;:::-;7908:306;;7834:380;;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;827:112:17:-;892:7;918;:14;;;911:21;;827:112;;;:::o;2186:115:2:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;4348:165:20:-;4425:7;4451:55;4473:20;:18;:20::i;:::-;4495:10;4451:21;:55::i;:::-;4444:62;;4348:165;;;:::o;6696:270:19:-;6819:7;6839:17;6858:18;6880:25;6891:4;6897:1;6900;6903;6880:10;:25::i;:::-;6838:67;;;;6915:18;6927:5;6915:11;:18::i;:::-;6950:9;6943:16;;;;6696:270;;;;;;:::o;3123:203:8:-;3183:15;3210:30;3243:7;:14;3251:5;3243:14;;;;;;;;;;;;;;;3210:47;;3277:15;:5;:13;:15::i;:::-;3267:25;;3302:17;:5;:15;:17::i;:::-;3200:126;3123:203;;;:::o;6513:103:6:-;6566:7;6592:17;6585:24;;6513:103;:::o;8853:716::-;9023:17;9042;9071:11;9085:5;:12;;;;9071:26;;9108:25;9143:1;9136:3;:8;:59;;9166:29;9180:5;9193:1;9187:3;:7;;;;:::i;:::-;9166:13;:29::i;:::-;9136:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9147:16;;;;;;;;9158:1;9147:16;;;;;;9161:1;9147:16;;;;;9136:59;9108:87;;9218:7;:13;;;9206:25;;;;9253:20;9256:9;9267:5;9253:2;:20;;:::i;:::-;9241:32;;9294:1;9288:3;:7;:44;;;;;9320:12;9299:7;:17;;;:33;;;9288:44;9284:279;;;9386:29;9405:9;9386:18;:29::i;:::-;9348;9362:5;9375:1;9369:3;:7;;;;:::i;:::-;9348:13;:29::i;:::-;:35;;;:67;;;;;;;;;;;;;;;;;;9284:279;;;9446:5;9457:94;;;;;;;;9480:31;9498:12;9480:17;:31::i;:::-;9457:94;;;;;;9520:29;9539:9;9520:18;:29::i;:::-;9457:94;;;;;9446:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9284:279;9061:508;;8853:716;;;;;;:::o;935:199:26:-;1239:19:2;:17;:19::i;:::-;1082:44:26::1;1109:4;1115:2;1119:6;1082:26;:44::i;:::-;935:199:::0;;;:::o;1212:193::-;1354:43;1380:4;1386:2;1390:6;1354:25;:43::i;:::-;1212:193;;;:::o;8220:627:6:-;8347:3;8340:10;;:3;:10;;;;:24;;;;;8363:1;8354:6;:10;8340:24;8336:505;;;8399:1;8384:17;;:3;:17;;;8380:221;;8422:17;8441;8462:54;8479:12;:17;8492:3;8479:17;;;;;;;;;;;;;;;8498:9;8509:6;8462:16;:54::i;:::-;8421:95;;;;8560:3;8539:47;;;8565:9;8576;8539:47;;;;;;;:::i;:::-;;;;;;;;8403:198;;8380:221;8634:1;8619:17;;:3;:17;;;8615:216;;8657:17;8676;8697:49;8714:12;:17;8727:3;8714:17;;;;;;;;;;;;;;;8733:4;8739:6;8697:16;:49::i;:::-;8656:90;;;;8790:3;8769:47;;;8795:9;8806;8769:47;;;;;;;:::i;:::-;;;;;;;;8638:193;;8615:216;8336:505;8220:627;;;:::o;3466:257:20:-;3606:7;3653:8;3663;3673:11;3686:13;3709:4;3642:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3632:84;;;;;;3625:91;;3466:257;;;;;:::o;6280:1642:23:-;6328:7;6356:1;6351;:6;6347:45;;;6380:1;6373:8;;;;6347:45;7071:14;7105:1;7094:7;7099:1;7094:4;:7::i;:::-;:12;;7088:1;:19;;7071:36;;7566:1;7555:6;7551:1;:10;;;;;:::i;:::-;;;7542:6;:19;7541:26;;7532:35;;7615:1;7604:6;7600:1;:10;;;;;:::i;:::-;;;7591:6;:19;7590:26;;7581:35;;7664:1;7653:6;7649:1;:10;;;;;:::i;:::-;;;7640:6;:19;7639:26;;7630:35;;7713:1;7702:6;7698:1;:10;;;;;:::i;:::-;;;7689:6;:19;7688:26;;7679:35;;7762:1;7751:6;7747:1;:10;;;;;:::i;:::-;;;7738:6;:19;7737:26;;7728:35;;7811:1;7800:6;7796:1;:10;;;;;:::i;:::-;;;7787:6;:19;7786:26;;7777:35;;7860:1;7849:6;7845:1;:10;;;;;:::i;:::-;;;7836:6;:19;7835:26;;7826:35;;7882:23;7886:6;7898;7894:1;:10;;;;;:::i;:::-;;;7882:3;:23::i;:::-;7875:30;;;6280:1642;;;;:::o;9784:239:6:-;9870:25;9940:10;9937:1;9930:21;10003:3;9996:4;9993:1;9983:18;9979:28;9964:43;;9784:239;;;;:::o;805:153:23:-;867:7;950:1;945;941;:5;940:11;;;;:::i;:::-;935:1;931;:5;930:21;;;;:::i;:::-;923:28;;805:153;;;;:::o;1945:106:2:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;7079:190:6:-;7163:28;7175:7;7184:6;7163:11;:28::i;:::-;7202:60;7219:23;7244:9;7255:6;7202:16;:60::i;:::-;;;7079:190;;:::o;1767:106:2:-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;8341:194:19:-;8434:7;8499:15;8516:10;8470:57;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8460:68;;;;;;8453:75;;8341:194;;;;:::o;5069:1494::-;5195:7;5204:12;6119:66;6114:1;6106:10;;:79;6102:161;;;6217:1;6221:30;6201:51;;;;;;6102:161;6357:14;6374:24;6384:4;6390:1;6393;6396;6374:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6357:41;;6430:1;6412:20;;:6;:20;;;6408:101;;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;6535:20;6519:37;;;;;5069:1494;;;;;;;;:::o;570:511::-;647:20;638:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;634:441;;;683:7;;634:441;743:29;734:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;730:345;;;788:34;;;;;;;;;;:::i;:::-;;;;;;;;730:345;852:35;843:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;839:236;;;903:41;;;;;;;;;;:::i;:::-;;;;;;;;839:236;974:30;965:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;961:114;;;1020:44;;;;;;;;;;:::i;:::-;;;;;;;;961:114;570:511;;:::o;945:123:17:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;8383:983:23:-;8435:7;8454:14;8471:1;8454:18;;8525:1;8519:3;8510:5;:12;;:16;8506:99;;;8556:3;8546:13;;;;;8587:3;8577:13;;;;8506:99;8636:1;8631:2;8622:5;:11;;:15;8618:96;;;8667:2;8657:12;;;;;8697:2;8687:12;;;;8618:96;8745:1;8740:2;8731:5;:11;;:15;8727:96;;;8776:2;8766:12;;;;;8806:2;8796:12;;;;8727:96;8854:1;8849:2;8840:5;:11;;:15;8836:96;;;8885:2;8875:12;;;;;8915:2;8905:12;;;;8836:96;8962:1;8958;8949:5;:10;;:14;8945:93;;;8993:1;8983:11;;;;;9022:1;9012:11;;;;8945:93;9068:1;9064;9055:5;:10;;:14;9051:93;;;9099:1;9089:11;;;;;9128:1;9118:11;;;;9051:93;9174:1;9170;9161:5;:10;;:14;9157:93;;;9205:1;9195:11;;;;;9234:1;9224:11;;;;9157:93;9280:1;9276;9267:5;:10;;:14;9263:64;;;9311:1;9301:11;;;;9263:64;9353:6;9346:13;;;8383:983;;;:::o;588:104::-;646:7;676:1;672;:5;:13;;684:1;672:13;;;680:1;672:13;665:20;;588:104;;;;:::o;9422:659:3:-;9524:1;9505:21;;:7;:21;;;;9497:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9575:49;9596:7;9613:1;9617:6;9575:20;:49::i;:::-;9635:22;9660:9;:18;9670:7;9660:18;;;;;;;;;;;;;;;;9635:43;;9714:6;9696:14;:24;;9688:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;9831:6;9814:14;:23;9793:9;:18;9803:7;9793:18;;;;;;;;;;;;;;;:44;;;;9946:6;9930:12;;:22;;;;;;;;;;;10004:1;9978:37;;9987:7;9978:37;;;10008:6;9978:37;;;;;;:::i;:::-;;;;;;;;10026:48;10046:7;10063:1;10067:6;10026:19;:48::i;:::-;9487:594;9422:659;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::o;7:99:27:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:118::-;3581:24;3599:5;3581:24;:::i;:::-;3576:3;3569:37;3494:118;;:::o;3618:222::-;3711:4;3749:2;3738:9;3734:18;3726:26;;3762:71;3830:1;3819:9;3815:17;3806:6;3762:71;:::i;:::-;3618:222;;;;:::o;3846:619::-;3923:6;3931;3939;3988:2;3976:9;3967:7;3963:23;3959:32;3956:119;;;3994:79;;:::i;:::-;3956:119;4114:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;:::i;:::-;4129:63;;4085:117;4241:2;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4212:118;4369:2;4395:53;4440:7;4431:6;4420:9;4416:22;4395:53;:::i;:::-;4385:63;;4340:118;3846:619;;;;;:::o;4471:86::-;4506:7;4546:4;4539:5;4535:16;4524:27;;4471:86;;;:::o;4563:112::-;4646:22;4662:5;4646:22;:::i;:::-;4641:3;4634:35;4563:112;;:::o;4681:214::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4821:67;4885:1;4874:9;4870:17;4861:6;4821:67;:::i;:::-;4681:214;;;;:::o;4901:77::-;4938:7;4967:5;4956:16;;4901:77;;;:::o;4984:118::-;5071:24;5089:5;5071:24;:::i;:::-;5066:3;5059:37;4984:118;;:::o;5108:222::-;5201:4;5239:2;5228:9;5224:18;5216:26;;5252:71;5320:1;5309:9;5305:17;5296:6;5252:71;:::i;:::-;5108:222;;;;:::o;5336:329::-;5395:6;5444:2;5432:9;5423:7;5419:23;5415:32;5412:119;;;5450:79;;:::i;:::-;5412:119;5570:1;5595:53;5640:7;5631:6;5620:9;5616:22;5595:53;:::i;:::-;5585:63;;5541:117;5336:329;;;;:::o;5671:::-;5730:6;5779:2;5767:9;5758:7;5754:23;5750:32;5747:119;;;5785:79;;:::i;:::-;5747:119;5905:1;5930:53;5975:7;5966:6;5955:9;5951:22;5930:53;:::i;:::-;5920:63;;5876:117;5671:329;;;;:::o;6006:118::-;6093:24;6111:5;6093:24;:::i;:::-;6088:3;6081:37;6006:118;;:::o;6130:222::-;6223:4;6261:2;6250:9;6246:18;6238:26;;6274:71;6342:1;6331:9;6327:17;6318:6;6274:71;:::i;:::-;6130:222;;;;:::o;6358:93::-;6394:7;6434:10;6427:5;6423:22;6412:33;;6358:93;;;:::o;6457:115::-;6542:23;6559:5;6542:23;:::i;:::-;6537:3;6530:36;6457:115;;:::o;6578:218::-;6669:4;6707:2;6696:9;6692:18;6684:26;;6720:69;6786:1;6775:9;6771:17;6762:6;6720:69;:::i;:::-;6578:218;;;;:::o;6802:118::-;6873:22;6889:5;6873:22;:::i;:::-;6866:5;6863:33;6853:61;;6910:1;6907;6900:12;6853:61;6802:118;:::o;6926:135::-;6970:5;7008:6;6995:20;6986:29;;7024:31;7049:5;7024:31;:::i;:::-;6926:135;;;;:::o;7067:122::-;7140:24;7158:5;7140:24;:::i;:::-;7133:5;7130:35;7120:63;;7179:1;7176;7169:12;7120:63;7067:122;:::o;7195:139::-;7241:5;7279:6;7266:20;7257:29;;7295:33;7322:5;7295:33;:::i;:::-;7195:139;;;;:::o;7340:1053::-;7442:6;7450;7458;7466;7474;7482;7531:3;7519:9;7510:7;7506:23;7502:33;7499:120;;;7538:79;;:::i;:::-;7499:120;7658:1;7683:53;7728:7;7719:6;7708:9;7704:22;7683:53;:::i;:::-;7673:63;;7629:117;7785:2;7811:53;7856:7;7847:6;7836:9;7832:22;7811:53;:::i;:::-;7801:63;;7756:118;7913:2;7939:53;7984:7;7975:6;7964:9;7960:22;7939:53;:::i;:::-;7929:63;;7884:118;8041:2;8067:51;8110:7;8101:6;8090:9;8086:22;8067:51;:::i;:::-;8057:61;;8012:116;8167:3;8194:53;8239:7;8230:6;8219:9;8215:22;8194:53;:::i;:::-;8184:63;;8138:119;8296:3;8323:53;8368:7;8359:6;8348:9;8344:22;8323:53;:::i;:::-;8313:63;;8267:119;7340:1053;;;;;;;;:::o;8399:1199::-;8510:6;8518;8526;8534;8542;8550;8558;8607:3;8595:9;8586:7;8582:23;8578:33;8575:120;;;8614:79;;:::i;:::-;8575:120;8734:1;8759:53;8804:7;8795:6;8784:9;8780:22;8759:53;:::i;:::-;8749:63;;8705:117;8861:2;8887:53;8932:7;8923:6;8912:9;8908:22;8887:53;:::i;:::-;8877:63;;8832:118;8989:2;9015:53;9060:7;9051:6;9040:9;9036:22;9015:53;:::i;:::-;9005:63;;8960:118;9117:2;9143:53;9188:7;9179:6;9168:9;9164:22;9143:53;:::i;:::-;9133:63;;9088:118;9245:3;9272:51;9315:7;9306:6;9295:9;9291:22;9272:51;:::i;:::-;9262:61;;9216:117;9372:3;9399:53;9444:7;9435:6;9424:9;9420:22;9399:53;:::i;:::-;9389:63;;9343:119;9501:3;9528:53;9573:7;9564:6;9553:9;9549:22;9528:53;:::i;:::-;9518:63;;9472:119;8399:1199;;;;;;;;;;:::o;9604:474::-;9672:6;9680;9729:2;9717:9;9708:7;9704:23;9700:32;9697:119;;;9735:79;;:::i;:::-;9697:119;9855:1;9880:53;9925:7;9916:6;9905:9;9901:22;9880:53;:::i;:::-;9870:63;;9826:117;9982:2;10008:53;10053:7;10044:6;10033:9;10029:22;10008:53;:::i;:::-;9998:63;;9953:118;9604:474;;;;;:::o;10084:120::-;10156:23;10173:5;10156:23;:::i;:::-;10149:5;10146:34;10136:62;;10194:1;10191;10184:12;10136:62;10084:120;:::o;10210:137::-;10255:5;10293:6;10280:20;10271:29;;10309:32;10335:5;10309:32;:::i;:::-;10210:137;;;;:::o;10353:472::-;10420:6;10428;10477:2;10465:9;10456:7;10452:23;10448:32;10445:119;;;10483:79;;:::i;:::-;10445:119;10603:1;10628:53;10673:7;10664:6;10653:9;10649:22;10628:53;:::i;:::-;10618:63;;10574:117;10730:2;10756:52;10800:7;10791:6;10780:9;10776:22;10756:52;:::i;:::-;10746:62;;10701:117;10353:472;;;;;:::o;10831:105::-;10906:23;10923:5;10906:23;:::i;:::-;10901:3;10894:36;10831:105;;:::o;10942:142::-;10979:7;11019:58;11012:5;11008:70;10997:81;;10942:142;;;:::o;11090:108::-;11167:24;11185:5;11167:24;:::i;:::-;11162:3;11155:37;11090:108;;:::o;11272:517::-;11425:4;11420:3;11416:14;11517:4;11510:5;11506:16;11500:23;11536:61;11591:4;11586:3;11582:14;11568:12;11536:61;:::i;:::-;11440:167;11690:4;11683:5;11679:16;11673:23;11709:63;11766:4;11761:3;11757:14;11743:12;11709:63;:::i;:::-;11617:165;11394:395;11272:517;;:::o;11795:334::-;11944:4;11982:2;11971:9;11967:18;11959:26;;11995:127;12119:1;12108:9;12104:17;12095:6;11995:127;:::i;:::-;11795:334;;;;:::o;12135:180::-;12183:77;12180:1;12173:88;12280:4;12277:1;12270:15;12304:4;12301:1;12294:15;12321:320;12365:6;12402:1;12396:4;12392:12;12382:22;;12449:1;12443:4;12439:12;12470:18;12460:81;;12526:4;12518:6;12514:17;12504:27;;12460:81;12588:2;12580:6;12577:14;12557:18;12554:38;12551:84;;;12607:18;;:::i;:::-;12551:84;12372:269;12321:320;;;:::o;12647:180::-;12695:77;12692:1;12685:88;12792:4;12789:1;12782:15;12816:4;12813:1;12806:15;12833:305;12873:3;12892:20;12910:1;12892:20;:::i;:::-;12887:25;;12926:20;12944:1;12926:20;:::i;:::-;12921:25;;13080:1;13012:66;13008:74;13005:1;13002:81;12999:107;;;13086:18;;:::i;:::-;12999:107;13130:1;13127;13123:9;13116:16;;12833:305;;;;:::o;13144:181::-;13284:33;13280:1;13272:6;13268:14;13261:57;13144:181;:::o;13331:366::-;13473:3;13494:67;13558:2;13553:3;13494:67;:::i;:::-;13487:74;;13570:93;13659:3;13570:93;:::i;:::-;13688:2;13683:3;13679:12;13672:19;;13331:366;;;:::o;13703:419::-;13869:4;13907:2;13896:9;13892:18;13884:26;;13956:9;13950:4;13946:20;13942:1;13931:9;13927:17;13920:47;13984:131;14110:4;13984:131;:::i;:::-;13976:139;;13703:419;;;:::o;14128:191::-;14168:4;14188:20;14206:1;14188:20;:::i;:::-;14183:25;;14222:20;14240:1;14222:20;:::i;:::-;14217:25;;14261:1;14258;14255:8;14252:34;;;14266:18;;:::i;:::-;14252:34;14311:1;14308;14304:9;14296:17;;14128:191;;;;:::o;14325:180::-;14373:77;14370:1;14363:88;14470:4;14467:1;14460:15;14494:4;14491:1;14484:15;14511:224;14651:34;14647:1;14639:6;14635:14;14628:58;14720:7;14715:2;14707:6;14703:15;14696:32;14511:224;:::o;14741:366::-;14883:3;14904:67;14968:2;14963:3;14904:67;:::i;:::-;14897:74;;14980:93;15069:3;14980:93;:::i;:::-;15098:2;15093:3;15089:12;15082:19;;14741:366;;;:::o;15113:419::-;15279:4;15317:2;15306:9;15302:18;15294:26;;15366:9;15360:4;15356:20;15352:1;15341:9;15337:17;15330:47;15394:131;15520:4;15394:131;:::i;:::-;15386:139;;15113:419;;;:::o;15538:179::-;15678:31;15674:1;15666:6;15662:14;15655:55;15538:179;:::o;15723:366::-;15865:3;15886:67;15950:2;15945:3;15886:67;:::i;:::-;15879:74;;15962:93;16051:3;15962:93;:::i;:::-;16080:2;16075:3;16071:12;16064:19;;15723:366;;;:::o;16095:419::-;16261:4;16299:2;16288:9;16284:18;16276:26;;16348:9;16342:4;16338:20;16334:1;16323:9;16319:17;16312:47;16376:131;16502:4;16376:131;:::i;:::-;16368:139;;16095:419;;;:::o;16520:553::-;16697:4;16735:3;16724:9;16720:19;16712:27;;16749:71;16817:1;16806:9;16802:17;16793:6;16749:71;:::i;:::-;16830:72;16898:2;16887:9;16883:18;16874:6;16830:72;:::i;:::-;16912;16980:2;16969:9;16965:18;16956:6;16912:72;:::i;:::-;16994;17062:2;17051:9;17047:18;17038:6;16994:72;:::i;:::-;16520:553;;;;;;;:::o;17079:175::-;17219:27;17215:1;17207:6;17203:14;17196:51;17079:175;:::o;17260:366::-;17402:3;17423:67;17487:2;17482:3;17423:67;:::i;:::-;17416:74;;17499:93;17588:3;17499:93;:::i;:::-;17617:2;17612:3;17608:12;17601:19;;17260:366;;;:::o;17632:419::-;17798:4;17836:2;17825:9;17821:18;17813:26;;17885:9;17879:4;17875:20;17871:1;17860:9;17856:17;17849:47;17913:131;18039:4;17913:131;:::i;:::-;17905:139;;17632:419;;;:::o;18057:179::-;18197:31;18193:1;18185:6;18181:14;18174:55;18057:179;:::o;18242:366::-;18384:3;18405:67;18469:2;18464:3;18405:67;:::i;:::-;18398:74;;18481:93;18570:3;18481:93;:::i;:::-;18599:2;18594:3;18590:12;18583:19;;18242:366;;;:::o;18614:419::-;18780:4;18818:2;18807:9;18803:18;18795:26;;18867:9;18861:4;18857:20;18853:1;18842:9;18838:17;18831:47;18895:131;19021:4;18895:131;:::i;:::-;18887:139;;18614:419;;;:::o;19039:775::-;19272:4;19310:3;19299:9;19295:19;19287:27;;19324:71;19392:1;19381:9;19377:17;19368:6;19324:71;:::i;:::-;19405:72;19473:2;19462:9;19458:18;19449:6;19405:72;:::i;:::-;19487;19555:2;19544:9;19540:18;19531:6;19487:72;:::i;:::-;19569;19637:2;19626:9;19622:18;19613:6;19569:72;:::i;:::-;19651:73;19719:3;19708:9;19704:19;19695:6;19651:73;:::i;:::-;19734;19802:3;19791:9;19787:19;19778:6;19734:73;:::i;:::-;19039:775;;;;;;;;;:::o;19820:180::-;19960:32;19956:1;19948:6;19944:14;19937:56;19820:180;:::o;20006:366::-;20148:3;20169:67;20233:2;20228:3;20169:67;:::i;:::-;20162:74;;20245:93;20334:3;20245:93;:::i;:::-;20363:2;20358:3;20354:12;20347:19;;20006:366;;;:::o;20378:419::-;20544:4;20582:2;20571:9;20567:18;20559:26;;20631:9;20625:4;20621:20;20617:1;20606:9;20602:17;20595:47;20659:131;20785:4;20659:131;:::i;:::-;20651:139;;20378:419;;;:::o;20803:225::-;20943:34;20939:1;20931:6;20927:14;20920:58;21012:8;21007:2;20999:6;20995:15;20988:33;20803:225;:::o;21034:366::-;21176:3;21197:67;21261:2;21256:3;21197:67;:::i;:::-;21190:74;;21273:93;21362:3;21273:93;:::i;:::-;21391:2;21386:3;21382:12;21375:19;;21034:366;;;:::o;21406:419::-;21572:4;21610:2;21599:9;21595:18;21587:26;;21659:9;21653:4;21649:20;21645:1;21634:9;21630:17;21623:47;21687:131;21813:4;21687:131;:::i;:::-;21679:139;;21406:419;;;:::o;21831:235::-;21971:34;21967:1;21959:6;21955:14;21948:58;22040:18;22035:2;22027:6;22023:15;22016:43;21831:235;:::o;22072:366::-;22214:3;22235:67;22299:2;22294:3;22235:67;:::i;:::-;22228:74;;22311:93;22400:3;22311:93;:::i;:::-;22429:2;22424:3;22420:12;22413:19;;22072:366;;;:::o;22444:419::-;22610:4;22648:2;22637:9;22633:18;22625:26;;22697:9;22691:4;22687:20;22683:1;22672:9;22668:17;22661:47;22725:131;22851:4;22725:131;:::i;:::-;22717:139;;22444:419;;;:::o;22869:181::-;23009:33;23005:1;22997:6;22993:14;22986:57;22869:181;:::o;23056:366::-;23198:3;23219:67;23283:2;23278:3;23219:67;:::i;:::-;23212:74;;23295:93;23384:3;23295:93;:::i;:::-;23413:2;23408:3;23404:12;23397:19;;23056:366;;;:::o;23428:419::-;23594:4;23632:2;23621:9;23617:18;23609:26;;23681:9;23675:4;23671:20;23667:1;23656:9;23652:17;23645:47;23709:131;23835:4;23709:131;:::i;:::-;23701:139;;23428:419;;;:::o;23853:226::-;23993:34;23989:1;23981:6;23977:14;23970:58;24062:9;24057:2;24049:6;24045:15;24038:34;23853:226;:::o;24085:366::-;24227:3;24248:67;24312:2;24307:3;24248:67;:::i;:::-;24241:74;;24324:93;24413:3;24324:93;:::i;:::-;24442:2;24437:3;24433:12;24426:19;;24085:366;;;:::o;24457:419::-;24623:4;24661:2;24650:9;24646:18;24638:26;;24710:9;24704:4;24700:20;24696:1;24685:9;24681:17;24674:47;24738:131;24864:4;24738:131;:::i;:::-;24730:139;;24457:419;;;:::o;24882:225::-;25022:34;25018:1;25010:6;25006:14;24999:58;25091:8;25086:2;25078:6;25074:15;25067:33;24882:225;:::o;25113:366::-;25255:3;25276:67;25340:2;25335:3;25276:67;:::i;:::-;25269:74;;25352:93;25441:3;25352:93;:::i;:::-;25470:2;25465:3;25461:12;25454:19;;25113:366;;;:::o;25485:419::-;25651:4;25689:2;25678:9;25674:18;25666:26;;25738:9;25732:4;25728:20;25724:1;25713:9;25709:17;25702:47;25766:131;25892:4;25766:131;:::i;:::-;25758:139;;25485:419;;;:::o;25910:223::-;26050:34;26046:1;26038:6;26034:14;26027:58;26119:6;26114:2;26106:6;26102:15;26095:31;25910:223;:::o;26139:366::-;26281:3;26302:67;26366:2;26361:3;26302:67;:::i;:::-;26295:74;;26378:93;26467:3;26378:93;:::i;:::-;26496:2;26491:3;26487:12;26480:19;;26139:366;;;:::o;26511:419::-;26677:4;26715:2;26704:9;26700:18;26692:26;;26764:9;26758:4;26754:20;26750:1;26739:9;26735:17;26728:47;26792:131;26918:4;26792:131;:::i;:::-;26784:139;;26511:419;;;:::o;26936:221::-;27076:34;27072:1;27064:6;27060:14;27053:58;27145:4;27140:2;27132:6;27128:15;27121:29;26936:221;:::o;27163:366::-;27305:3;27326:67;27390:2;27385:3;27326:67;:::i;:::-;27319:74;;27402:93;27491:3;27402:93;:::i;:::-;27520:2;27515:3;27511:12;27504:19;;27163:366;;;:::o;27535:419::-;27701:4;27739:2;27728:9;27724:18;27716:26;;27788:9;27782:4;27778:20;27774:1;27763:9;27759:17;27752:47;27816:131;27942:4;27816:131;:::i;:::-;27808:139;;27535:419;;;:::o;27960:179::-;28100:31;28096:1;28088:6;28084:14;28077:55;27960:179;:::o;28145:366::-;28287:3;28308:67;28372:2;28367:3;28308:67;:::i;:::-;28301:74;;28384:93;28473:3;28384:93;:::i;:::-;28502:2;28497:3;28493:12;28486:19;;28145:366;;;:::o;28517:419::-;28683:4;28721:2;28710:9;28706:18;28698:26;;28770:9;28764:4;28760:20;28756:1;28745:9;28741:17;28734:47;28798:131;28924:4;28798:131;:::i;:::-;28790:139;;28517:419;;;:::o;28942:224::-;29082:34;29078:1;29070:6;29066:14;29059:58;29151:7;29146:2;29138:6;29134:15;29127:32;28942:224;:::o;29172:366::-;29314:3;29335:67;29399:2;29394:3;29335:67;:::i;:::-;29328:74;;29411:93;29500:3;29411:93;:::i;:::-;29529:2;29524:3;29520:12;29513:19;;29172:366;;;:::o;29544:419::-;29710:4;29748:2;29737:9;29733:18;29725:26;;29797:9;29791:4;29787:20;29783:1;29772:9;29768:17;29761:47;29825:131;29951:4;29825:131;:::i;:::-;29817:139;;29544:419;;;:::o;29969:222::-;30109:34;30105:1;30097:6;30093:14;30086:58;30178:5;30173:2;30165:6;30161:15;30154:30;29969:222;:::o;30197:366::-;30339:3;30360:67;30424:2;30419:3;30360:67;:::i;:::-;30353:74;;30436:93;30525:3;30436:93;:::i;:::-;30554:2;30549:3;30545:12;30538:19;;30197:366;;;:::o;30569:419::-;30735:4;30773:2;30762:9;30758:18;30750:26;;30822:9;30816:4;30812:20;30808:1;30797:9;30793:17;30786:47;30850:131;30976:4;30850:131;:::i;:::-;30842:139;;30569:419;;;:::o;30994:225::-;31134:34;31130:1;31122:6;31118:14;31111:58;31203:8;31198:2;31190:6;31186:15;31179:33;30994:225;:::o;31225:366::-;31367:3;31388:67;31452:2;31447:3;31388:67;:::i;:::-;31381:74;;31464:93;31553:3;31464:93;:::i;:::-;31582:2;31577:3;31573:12;31566:19;;31225:366;;;:::o;31597:419::-;31763:4;31801:2;31790:9;31786:18;31778:26;;31850:9;31844:4;31840:20;31836:1;31825:9;31821:17;31814:47;31878:131;32004:4;31878:131;:::i;:::-;31870:139;;31597:419;;;:::o;32022:182::-;32162:34;32158:1;32150:6;32146:14;32139:58;32022:182;:::o;32210:366::-;32352:3;32373:67;32437:2;32432:3;32373:67;:::i;:::-;32366:74;;32449:93;32538:3;32449:93;:::i;:::-;32567:2;32562:3;32558:12;32551:19;;32210:366;;;:::o;32582:419::-;32748:4;32786:2;32775:9;32771:18;32763:26;;32835:9;32829:4;32825:20;32821:1;32810:9;32806:17;32799:47;32863:131;32989:4;32863:131;:::i;:::-;32855:139;;32582:419;;;:::o;33007:332::-;33128:4;33166:2;33155:9;33151:18;33143:26;;33179:71;33247:1;33236:9;33232:17;33223:6;33179:71;:::i;:::-;33260:72;33328:2;33317:9;33313:18;33304:6;33260:72;:::i;:::-;33007:332;;;;;:::o;33345:664::-;33550:4;33588:3;33577:9;33573:19;33565:27;;33602:71;33670:1;33659:9;33655:17;33646:6;33602:71;:::i;:::-;33683:72;33751:2;33740:9;33736:18;33727:6;33683:72;:::i;:::-;33765;33833:2;33822:9;33818:18;33809:6;33765:72;:::i;:::-;33847;33915:2;33904:9;33900:18;33891:6;33847:72;:::i;:::-;33929:73;33997:3;33986:9;33982:19;33973:6;33929:73;:::i;:::-;33345:664;;;;;;;;:::o;34015:180::-;34063:77;34060:1;34053:88;34160:4;34157:1;34150:15;34184:4;34181:1;34174:15;34201:185;34241:1;34258:20;34276:1;34258:20;:::i;:::-;34253:25;;34292:20;34310:1;34292:20;:::i;:::-;34287:25;;34331:1;34321:35;;34336:18;;:::i;:::-;34321:35;34378:1;34375;34371:9;34366:14;;34201:185;;;;:::o;34392:170::-;34532:22;34528:1;34520:6;34516:14;34509:46;34392:170;:::o;34568:366::-;34710:3;34731:67;34795:2;34790:3;34731:67;:::i;:::-;34724:74;;34807:93;34896:3;34807:93;:::i;:::-;34925:2;34920:3;34916:12;34909:19;;34568:366;;;:::o;34940:419::-;35106:4;35144:2;35133:9;35129:18;35121:26;;35193:9;35187:4;35183:20;35179:1;35168:9;35164:17;35157:47;35221:131;35347:4;35221:131;:::i;:::-;35213:139;;34940:419;;;:::o;35365:166::-;35505:18;35501:1;35493:6;35489:14;35482:42;35365:166;:::o;35537:366::-;35679:3;35700:67;35764:2;35759:3;35700:67;:::i;:::-;35693:74;;35776:93;35865:3;35776:93;:::i;:::-;35894:2;35889:3;35885:12;35878:19;;35537:366;;;:::o;35909:419::-;36075:4;36113:2;36102:9;36098:18;36090:26;;36162:9;36156:4;36152:20;36148:1;36137:9;36133:17;36126:47;36190:131;36316:4;36190:131;:::i;:::-;36182:139;;35909:419;;;:::o;36334:148::-;36436:11;36473:3;36458:18;;36334:148;;;;:::o;36488:214::-;36628:66;36624:1;36616:6;36612:14;36605:90;36488:214;:::o;36708:400::-;36868:3;36889:84;36971:1;36966:3;36889:84;:::i;:::-;36882:91;;36982:93;37071:3;36982:93;:::i;:::-;37100:1;37095:3;37091:11;37084:18;;36708:400;;;:::o;37114:79::-;37153:7;37182:5;37171:16;;37114:79;;;:::o;37199:157::-;37304:45;37324:24;37342:5;37324:24;:::i;:::-;37304:45;:::i;:::-;37299:3;37292:58;37199:157;;:::o;37362:663::-;37603:3;37625:148;37769:3;37625:148;:::i;:::-;37618:155;;37783:75;37854:3;37845:6;37783:75;:::i;:::-;37883:2;37878:3;37874:12;37867:19;;37896:75;37967:3;37958:6;37896:75;:::i;:::-;37996:2;37991:3;37987:12;37980:19;;38016:3;38009:10;;37362:663;;;;;:::o;38031:545::-;38204:4;38242:3;38231:9;38227:19;38219:27;;38256:71;38324:1;38313:9;38309:17;38300:6;38256:71;:::i;:::-;38337:68;38401:2;38390:9;38386:18;38377:6;38337:68;:::i;:::-;38415:72;38483:2;38472:9;38468:18;38459:6;38415:72;:::i;:::-;38497;38565:2;38554:9;38550:18;38541:6;38497:72;:::i;:::-;38031:545;;;;;;;:::o;38582:180::-;38630:77;38627:1;38620:88;38727:4;38724:1;38717:15;38751:4;38748:1;38741:15;38768:174;38908:26;38904:1;38896:6;38892:14;38885:50;38768:174;:::o;38948:366::-;39090:3;39111:67;39175:2;39170:3;39111:67;:::i;:::-;39104:74;;39187:93;39276:3;39187:93;:::i;:::-;39305:2;39300:3;39296:12;39289:19;;38948:366;;;:::o;39320:419::-;39486:4;39524:2;39513:9;39509:18;39501:26;;39573:9;39567:4;39563:20;39559:1;39548:9;39544:17;39537:47;39601:131;39727:4;39601:131;:::i;:::-;39593:139;;39320:419;;;:::o;39745:181::-;39885:33;39881:1;39873:6;39869:14;39862:57;39745:181;:::o;39932:366::-;40074:3;40095:67;40159:2;40154:3;40095:67;:::i;:::-;40088:74;;40171:93;40260:3;40171:93;:::i;:::-;40289:2;40284:3;40280:12;40273:19;;39932:366;;;:::o;40304:419::-;40470:4;40508:2;40497:9;40493:18;40485:26;;40557:9;40551:4;40547:20;40543:1;40532:9;40528:17;40521:47;40585:131;40711:4;40585:131;:::i;:::-;40577:139;;40304:419;;;:::o;40729:221::-;40869:34;40865:1;40857:6;40853:14;40846:58;40938:4;40933:2;40925:6;40921:15;40914:29;40729:221;:::o;40956:366::-;41098:3;41119:67;41183:2;41178:3;41119:67;:::i;:::-;41112:74;;41195:93;41284:3;41195:93;:::i;:::-;41313:2;41308:3;41304:12;41297:19;;40956:366;;;:::o;41328:419::-;41494:4;41532:2;41521:9;41517:18;41509:26;;41581:9;41575:4;41571:20;41567:1;41556:9;41552:17;41545:47;41609:131;41735:4;41609:131;:::i;:::-;41601:139;;41328:419;;;:::o;41753:220::-;41893:34;41889:1;41881:6;41877:14;41870:58;41962:3;41957:2;41949:6;41945:15;41938:28;41753:220;:::o;41979:366::-;42121:3;42142:67;42206:2;42201:3;42142:67;:::i;:::-;42135:74;;42218:93;42307:3;42218:93;:::i;:::-;42336:2;42331:3;42327:12;42320:19;;41979:366;;;:::o;42351:419::-;42517:4;42555:2;42544:9;42540:18;42532:26;;42604:9;42598:4;42594:20;42590:1;42579:9;42575:17;42568:47;42632:131;42758:4;42632:131;:::i;:::-;42624:139;;42351:419;;;:::o;42776:221::-;42916:34;42912:1;42904:6;42900:14;42893:58;42985:4;42980:2;42972:6;42968:15;42961:29;42776:221;:::o;43003:366::-;43145:3;43166:67;43230:2;43225:3;43166:67;:::i;:::-;43159:74;;43242:93;43331:3;43242:93;:::i;:::-;43360:2;43355:3;43351:12;43344:19;;43003:366;;;:::o;43375:419::-;43541:4;43579:2;43568:9;43564:18;43556:26;;43628:9;43622:4;43618:20;43614:1;43603:9;43599:17;43592:47;43656:131;43782:4;43656:131;:::i;:::-;43648:139;;43375:419;;;:::o"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","checkpoints(address,uint32)":"f1127ed8","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is but NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SbfToken.sol\":\"SBFToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0xf5324a55ee9c0b4a840ea57c055ac9d046f88986ceef567e1cf68113e46a79c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f41fe2bddc33c17ccccfc25379b1869354e9ee62d8b28d2acc95229eeba37a86\",\"dweb:/ipfs/Qmb6SF2XL2uSvH6k5JSjtx4Xoqz41ACkhdAhtbW1Yh3RiY\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x701d39aea4bce743cbc051a7f5ad0f27ee18f3eb38b5303e33b0eb7a54c0608d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e93c025465734c2adc943a0db1aa5d2e249e741f3ee28ed60eaf2944a080b693\",\"dweb:/ipfs/Qmc7tA4E2356bzms761sJYwRMh9JVtK8hG5hivHiPjL4pg\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0xd2dd6003a2dc02ab905fd405938322e510429d19ae6c07c2c683d70f13ab2f36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124567a127176d5c1dfc6776c0964b5e8c0ccfa87468b644f1175775f3c140c7\",\"dweb:/ipfs/QmYg33x4W2xC1frf1Btw2bAvs1zox4Eq7Eq9qMkj1FQKNV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"contracts/SbfToken.sol\":{\"keccak256\":\"0x55a5562d564bb88ce2ee5f62e609d5fbc609d9b2273af31e0b3ebadf7f413cba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8ec9dc4a0e0050953374a7c389b54f8a68b0a80b80ada5010dea22a3b74b45\",\"dweb:/ipfs/QmZvjUqwkHLbXQymCyXrhYQS9R1Y9sWDcVrhC2GsHN886Y\"]}},\"version\":1}"}}}}}